// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/bigquery/datatransfer/v1/datatransfer.proto

#include "google/cloud/bigquery/datatransfer/v1/datatransfer.pb.h"
#include "google/cloud/bigquery/datatransfer/v1/datatransfer.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace bigquery {
namespace datatransfer {
namespace v1 {

static const char* DataTransferService_method_names[] = {
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/GetDataSource",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/ListDataSources",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/CreateTransferConfig",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/UpdateTransferConfig",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/DeleteTransferConfig",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/GetTransferConfig",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/ListTransferConfigs",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/ScheduleTransferRuns",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/GetTransferRun",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/DeleteTransferRun",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/ListTransferRuns",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/ListTransferLogs",
  "/google.cloud.bigquery.datatransfer.v1.DataTransferService/CheckValidCreds",
};

std::unique_ptr< DataTransferService::Stub> DataTransferService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DataTransferService::Stub> stub(new DataTransferService::Stub(channel));
  return stub;
}

DataTransferService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetDataSource_(DataTransferService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListDataSources_(DataTransferService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateTransferConfig_(DataTransferService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateTransferConfig_(DataTransferService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTransferConfig_(DataTransferService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTransferConfig_(DataTransferService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTransferConfigs_(DataTransferService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ScheduleTransferRuns_(DataTransferService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTransferRun_(DataTransferService_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTransferRun_(DataTransferService_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTransferRuns_(DataTransferService_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTransferLogs_(DataTransferService_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CheckValidCreds_(DataTransferService_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status DataTransferService::Stub::GetDataSource(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest& request, ::google::cloud::bigquery::datatransfer::v1::DataSource* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDataSource_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::DataSource>* DataTransferService::Stub::AsyncGetDataSourceRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::DataSource>::Create(channel_.get(), cq, rpcmethod_GetDataSource_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::DataSource>* DataTransferService::Stub::PrepareAsyncGetDataSourceRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::DataSource>::Create(channel_.get(), cq, rpcmethod_GetDataSource_, context, request, false);
}

::grpc::Status DataTransferService::Stub::ListDataSources(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest& request, ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListDataSources_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse>* DataTransferService::Stub::AsyncListDataSourcesRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse>::Create(channel_.get(), cq, rpcmethod_ListDataSources_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse>* DataTransferService::Stub::PrepareAsyncListDataSourcesRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse>::Create(channel_.get(), cq, rpcmethod_ListDataSources_, context, request, false);
}

::grpc::Status DataTransferService::Stub::CreateTransferConfig(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest& request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateTransferConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::AsyncCreateTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_CreateTransferConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::PrepareAsyncCreateTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_CreateTransferConfig_, context, request, false);
}

::grpc::Status DataTransferService::Stub::UpdateTransferConfig(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest& request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateTransferConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::AsyncUpdateTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_UpdateTransferConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::PrepareAsyncUpdateTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_UpdateTransferConfig_, context, request, false);
}

::grpc::Status DataTransferService::Stub::DeleteTransferConfig(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteTransferConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DataTransferService::Stub::AsyncDeleteTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTransferConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DataTransferService::Stub::PrepareAsyncDeleteTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTransferConfig_, context, request, false);
}

::grpc::Status DataTransferService::Stub::GetTransferConfig(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest& request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetTransferConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::AsyncGetTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_GetTransferConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>* DataTransferService::Stub::PrepareAsyncGetTransferConfigRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferConfig>::Create(channel_.get(), cq, rpcmethod_GetTransferConfig_, context, request, false);
}

::grpc::Status DataTransferService::Stub::ListTransferConfigs(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest& request, ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListTransferConfigs_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse>* DataTransferService::Stub::AsyncListTransferConfigsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferConfigs_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse>* DataTransferService::Stub::PrepareAsyncListTransferConfigsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferConfigs_, context, request, false);
}

::grpc::Status DataTransferService::Stub::ScheduleTransferRuns(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest& request, ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ScheduleTransferRuns_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse>* DataTransferService::Stub::AsyncScheduleTransferRunsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse>::Create(channel_.get(), cq, rpcmethod_ScheduleTransferRuns_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse>* DataTransferService::Stub::PrepareAsyncScheduleTransferRunsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse>::Create(channel_.get(), cq, rpcmethod_ScheduleTransferRuns_, context, request, false);
}

::grpc::Status DataTransferService::Stub::GetTransferRun(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest& request, ::google::cloud::bigquery::datatransfer::v1::TransferRun* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetTransferRun_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferRun>* DataTransferService::Stub::AsyncGetTransferRunRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferRun>::Create(channel_.get(), cq, rpcmethod_GetTransferRun_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::TransferRun>* DataTransferService::Stub::PrepareAsyncGetTransferRunRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::TransferRun>::Create(channel_.get(), cq, rpcmethod_GetTransferRun_, context, request, false);
}

::grpc::Status DataTransferService::Stub::DeleteTransferRun(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteTransferRun_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DataTransferService::Stub::AsyncDeleteTransferRunRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTransferRun_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* DataTransferService::Stub::PrepareAsyncDeleteTransferRunRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTransferRun_, context, request, false);
}

::grpc::Status DataTransferService::Stub::ListTransferRuns(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest& request, ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListTransferRuns_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse>* DataTransferService::Stub::AsyncListTransferRunsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferRuns_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse>* DataTransferService::Stub::PrepareAsyncListTransferRunsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferRuns_, context, request, false);
}

::grpc::Status DataTransferService::Stub::ListTransferLogs(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest& request, ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListTransferLogs_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse>* DataTransferService::Stub::AsyncListTransferLogsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferLogs_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse>* DataTransferService::Stub::PrepareAsyncListTransferLogsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse>::Create(channel_.get(), cq, rpcmethod_ListTransferLogs_, context, request, false);
}

::grpc::Status DataTransferService::Stub::CheckValidCreds(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest& request, ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CheckValidCreds_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse>* DataTransferService::Stub::AsyncCheckValidCredsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse>::Create(channel_.get(), cq, rpcmethod_CheckValidCreds_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse>* DataTransferService::Stub::PrepareAsyncCheckValidCredsRaw(::grpc::ClientContext* context, const ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse>::Create(channel_.get(), cq, rpcmethod_CheckValidCreds_, context, request, false);
}

DataTransferService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest, ::google::cloud::bigquery::datatransfer::v1::DataSource>(
          std::mem_fn(&DataTransferService::Service::GetDataSource), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest, ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse>(
          std::mem_fn(&DataTransferService::Service::ListDataSources), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest, ::google::cloud::bigquery::datatransfer::v1::TransferConfig>(
          std::mem_fn(&DataTransferService::Service::CreateTransferConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest, ::google::cloud::bigquery::datatransfer::v1::TransferConfig>(
          std::mem_fn(&DataTransferService::Service::UpdateTransferConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DataTransferService::Service::DeleteTransferConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest, ::google::cloud::bigquery::datatransfer::v1::TransferConfig>(
          std::mem_fn(&DataTransferService::Service::GetTransferConfig), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse>(
          std::mem_fn(&DataTransferService::Service::ListTransferConfigs), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest, ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse>(
          std::mem_fn(&DataTransferService::Service::ScheduleTransferRuns), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest, ::google::cloud::bigquery::datatransfer::v1::TransferRun>(
          std::mem_fn(&DataTransferService::Service::GetTransferRun), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest, ::google::protobuf::Empty>(
          std::mem_fn(&DataTransferService::Service::DeleteTransferRun), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse>(
          std::mem_fn(&DataTransferService::Service::ListTransferRuns), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse>(
          std::mem_fn(&DataTransferService::Service::ListTransferLogs), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DataTransferService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DataTransferService::Service, ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest, ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse>(
          std::mem_fn(&DataTransferService::Service::CheckValidCreds), this)));
}

DataTransferService::Service::~Service() {
}

::grpc::Status DataTransferService::Service::GetDataSource(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest* request, ::google::cloud::bigquery::datatransfer::v1::DataSource* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::ListDataSources(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest* request, ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::CreateTransferConfig(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest* request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::UpdateTransferConfig(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest* request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::DeleteTransferConfig(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::GetTransferConfig(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest* request, ::google::cloud::bigquery::datatransfer::v1::TransferConfig* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::ListTransferConfigs(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest* request, ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::ScheduleTransferRuns(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest* request, ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::GetTransferRun(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest* request, ::google::cloud::bigquery::datatransfer::v1::TransferRun* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::DeleteTransferRun(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::ListTransferRuns(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest* request, ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::ListTransferLogs(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest* request, ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DataTransferService::Service::CheckValidCreds(::grpc::ServerContext* context, const ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest* request, ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace bigquery
}  // namespace datatransfer
}  // namespace v1

