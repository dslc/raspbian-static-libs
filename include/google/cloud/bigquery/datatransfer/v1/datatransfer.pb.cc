// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/datatransfer/v1/datatransfer.proto

#include "google/cloud/bigquery/datatransfer/v1/datatransfer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataSourceParameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DataSource;
}  // namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto
namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransferMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TransferConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TransferRun;
}  // namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace cloud {
namespace bigquery {
namespace datatransfer {
namespace v1 {
class DataSourceParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataSourceParameter>
      _instance;
} _DataSourceParameter_default_instance_;
class DataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataSource>
      _instance;
} _DataSource_default_instance_;
class GetDataSourceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDataSourceRequest>
      _instance;
} _GetDataSourceRequest_default_instance_;
class ListDataSourcesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDataSourcesRequest>
      _instance;
} _ListDataSourcesRequest_default_instance_;
class ListDataSourcesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDataSourcesResponse>
      _instance;
} _ListDataSourcesResponse_default_instance_;
class CreateTransferConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateTransferConfigRequest>
      _instance;
} _CreateTransferConfigRequest_default_instance_;
class UpdateTransferConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateTransferConfigRequest>
      _instance;
} _UpdateTransferConfigRequest_default_instance_;
class GetTransferConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTransferConfigRequest>
      _instance;
} _GetTransferConfigRequest_default_instance_;
class DeleteTransferConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTransferConfigRequest>
      _instance;
} _DeleteTransferConfigRequest_default_instance_;
class GetTransferRunRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTransferRunRequest>
      _instance;
} _GetTransferRunRequest_default_instance_;
class DeleteTransferRunRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteTransferRunRequest>
      _instance;
} _DeleteTransferRunRequest_default_instance_;
class ListTransferConfigsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferConfigsRequest>
      _instance;
} _ListTransferConfigsRequest_default_instance_;
class ListTransferConfigsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferConfigsResponse>
      _instance;
} _ListTransferConfigsResponse_default_instance_;
class ListTransferRunsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferRunsRequest>
      _instance;
} _ListTransferRunsRequest_default_instance_;
class ListTransferRunsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferRunsResponse>
      _instance;
} _ListTransferRunsResponse_default_instance_;
class ListTransferLogsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferLogsRequest>
      _instance;
} _ListTransferLogsRequest_default_instance_;
class ListTransferLogsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTransferLogsResponse>
      _instance;
} _ListTransferLogsResponse_default_instance_;
class CheckValidCredsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckValidCredsRequest>
      _instance;
} _CheckValidCredsRequest_default_instance_;
class CheckValidCredsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckValidCredsResponse>
      _instance;
} _CheckValidCredsResponse_default_instance_;
class ScheduleTransferRunsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleTransferRunsRequest>
      _instance;
} _ScheduleTransferRunsRequest_default_instance_;
class ScheduleTransferRunsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleTransferRunsResponse>
      _instance;
} _ScheduleTransferRunsResponse_default_instance_;
}  // namespace v1
}  // namespace datatransfer
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto {
static void InitDefaultsDataSourceParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_DataSourceParameter_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataSourceParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataSourceParameter}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,}};

static void InitDefaultsDataSource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_DataSource_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::DataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::DataSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DataSource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDataSource}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSourceParameter.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsGetDataSourceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_GetDataSourceRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDataSourceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDataSourceRequest}, {}};

static void InitDefaultsListDataSourcesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListDataSourcesRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDataSourcesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDataSourcesRequest}, {}};

static void InitDefaultsListDataSourcesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListDataSourcesResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListDataSourcesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListDataSourcesResponse}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSource.base,}};

static void InitDefaultsCreateTransferConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_CreateTransferConfigRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateTransferConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateTransferConfigRequest}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferConfig.base,}};

static void InitDefaultsUpdateTransferConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_UpdateTransferConfigRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateTransferConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateTransferConfigRequest}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferConfig.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsGetTransferConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_GetTransferConfigRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTransferConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTransferConfigRequest}, {}};

static void InitDefaultsDeleteTransferConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_DeleteTransferConfigRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTransferConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTransferConfigRequest}, {}};

static void InitDefaultsGetTransferRunRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_GetTransferRunRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTransferRunRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTransferRunRequest}, {}};

static void InitDefaultsDeleteTransferRunRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_DeleteTransferRunRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteTransferRunRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteTransferRunRequest}, {}};

static void InitDefaultsListTransferConfigsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferConfigsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListTransferConfigsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListTransferConfigsRequest}, {}};

static void InitDefaultsListTransferConfigsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferConfigsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListTransferConfigsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListTransferConfigsResponse}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferConfig.base,}};

static void InitDefaultsListTransferRunsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferRunsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListTransferRunsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListTransferRunsRequest}, {}};

static void InitDefaultsListTransferRunsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferRunsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListTransferRunsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListTransferRunsResponse}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferRun.base,}};

static void InitDefaultsListTransferLogsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferLogsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListTransferLogsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListTransferLogsRequest}, {}};

static void InitDefaultsListTransferLogsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ListTransferLogsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListTransferLogsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListTransferLogsResponse}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferMessage.base,}};

static void InitDefaultsCheckValidCredsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_CheckValidCredsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckValidCredsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckValidCredsRequest}, {}};

static void InitDefaultsCheckValidCredsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_CheckValidCredsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckValidCredsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckValidCredsResponse}, {}};

static void InitDefaultsScheduleTransferRunsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsRequest_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScheduleTransferRunsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScheduleTransferRunsRequest}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsScheduleTransferRunsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsResponse_default_instance_;
    new (ptr) ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScheduleTransferRunsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScheduleTransferRunsResponse}, {
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::scc_info_TransferRun.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DataSourceParameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataSource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDataSourceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDataSourcesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDataSourcesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateTransferConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateTransferConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTransferConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTransferConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTransferRunRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteTransferRunRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferConfigsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferConfigsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferRunsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferRunsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferLogsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTransferLogsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckValidCredsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckValidCredsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScheduleTransferRunsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScheduleTransferRunsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, param_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, required_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, repeated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, validation_regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, allowed_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, max_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, validation_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, validation_help_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, immutable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter, recurse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, data_source_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, transfer_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, supports_multiple_transfers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, update_deadline_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, default_schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, supports_custom_schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, help_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, authorization_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, data_refresh_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, default_data_refresh_window_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, manual_runs_disabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DataSource, minimum_schedule_interval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse, data_sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest, transfer_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest, authorization_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest, transfer_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest, authorization_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, data_source_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse, transfer_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, states_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest, run_attempt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse, transfer_runs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest, message_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse, transfer_messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse, has_valid_creds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse, runs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::DataSourceParameter)},
  { 20, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::DataSource)},
  { 43, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest)},
  { 49, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest)},
  { 57, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse)},
  { 64, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest)},
  { 72, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest)},
  { 80, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest)},
  { 86, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest)},
  { 92, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest)},
  { 98, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest)},
  { 104, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest)},
  { 113, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse)},
  { 120, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest)},
  { 130, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse)},
  { 137, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest)},
  { 146, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse)},
  { 153, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest)},
  { 159, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse)},
  { 165, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest)},
  { 173, -1, sizeof(::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_DataSourceParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_DataSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_GetDataSourceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListDataSourcesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListDataSourcesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_CreateTransferConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_UpdateTransferConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_GetTransferConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_DeleteTransferConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_GetTransferRunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_DeleteTransferRunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferConfigsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferConfigsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferRunsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferRunsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferLogsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ListTransferLogsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_CheckValidCredsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_CheckValidCredsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsResponse_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/bigquery/datatransfer/v1/datatransfer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8google/cloud/bigquery/datatransfer/v1/"
      "datatransfer.proto\022%google.cloud.bigquer"
      "y.datatransfer.v1\032\034google/api/annotation"
      "s.proto\0324google/cloud/bigquery/datatrans"
      "fer/v1/transfer.proto\032\036google/protobuf/d"
      "uration.proto\032\033google/protobuf/empty.pro"
      "to\032 google/protobuf/field_mask.proto\032\037go"
      "ogle/protobuf/timestamp.proto\032\036google/pr"
      "otobuf/wrappers.proto\"\361\004\n\023DataSourcePara"
      "meter\022\020\n\010param_id\030\001 \001(\t\022\024\n\014display_name\030"
      "\002 \001(\t\022\023\n\013description\030\003 \001(\t\022M\n\004type\030\004 \001(\016"
      "2\?.google.cloud.bigquery.datatransfer.v1"
      ".DataSourceParameter.Type\022\020\n\010required\030\005 "
      "\001(\010\022\020\n\010repeated\030\006 \001(\010\022\030\n\020validation_rege"
      "x\030\007 \001(\t\022\026\n\016allowed_values\030\010 \003(\t\022/\n\tmin_v"
      "alue\030\t \001(\0132\034.google.protobuf.DoubleValue"
      "\022/\n\tmax_value\030\n \001(\0132\034.google.protobuf.Do"
      "ubleValue\022J\n\006fields\030\013 \003(\0132:.google.cloud"
      ".bigquery.datatransfer.v1.DataSourcePara"
      "meter\022\036\n\026validation_description\030\014 \001(\t\022\033\n"
      "\023validation_help_url\030\r \001(\t\022\021\n\timmutable\030"
      "\016 \001(\010\022\017\n\007recurse\030\017 \001(\010\"i\n\004Type\022\024\n\020TYPE_U"
      "NSPECIFIED\020\000\022\n\n\006STRING\020\001\022\013\n\007INTEGER\020\002\022\n\n"
      "\006DOUBLE\020\003\022\013\n\007BOOLEAN\020\004\022\n\n\006RECORD\020\005\022\r\n\tPL"
      "US_PAGE\020\006\"\317\007\n\nDataSource\022\014\n\004name\030\001 \001(\t\022\026"
      "\n\016data_source_id\030\002 \001(\t\022\024\n\014display_name\030\003"
      " \001(\t\022\023\n\013description\030\004 \001(\t\022\021\n\tclient_id\030\005"
      " \001(\t\022\016\n\006scopes\030\006 \003(\t\022J\n\rtransfer_type\030\007 "
      "\001(\01623.google.cloud.bigquery.datatransfer"
      ".v1.TransferType\022#\n\033supports_multiple_tr"
      "ansfers\030\010 \001(\010\022\037\n\027update_deadline_seconds"
      "\030\t \001(\005\022\030\n\020default_schedule\030\n \001(\t\022 \n\030supp"
      "orts_custom_schedule\030\013 \001(\010\022N\n\nparameters"
      "\030\014 \003(\0132:.google.cloud.bigquery.datatrans"
      "fer.v1.DataSourceParameter\022\020\n\010help_url\030\r"
      " \001(\t\022_\n\022authorization_type\030\016 \001(\0162C.googl"
      "e.cloud.bigquery.datatransfer.v1.DataSou"
      "rce.AuthorizationType\022\\\n\021data_refresh_ty"
      "pe\030\017 \001(\0162A.google.cloud.bigquery.datatra"
      "nsfer.v1.DataSource.DataRefreshType\022(\n d"
      "efault_data_refresh_window_days\030\020 \001(\005\022\034\n"
      "\024manual_runs_disabled\030\021 \001(\010\022<\n\031minimum_s"
      "chedule_interval\030\022 \001(\0132\031.google.protobuf"
      ".Duration\"s\n\021AuthorizationType\022\"\n\036AUTHOR"
      "IZATION_TYPE_UNSPECIFIED\020\000\022\026\n\022AUTHORIZAT"
      "ION_CODE\020\001\022\"\n\036GOOGLE_PLUS_AUTHORIZATION_"
      "CODE\020\002\"c\n\017DataRefreshType\022!\n\035DATA_REFRES"
      "H_TYPE_UNSPECIFIED\020\000\022\022\n\016SLIDING_WINDOW\020\001"
      "\022\031\n\025CUSTOM_SLIDING_WINDOW\020\002\"$\n\024GetDataSo"
      "urceRequest\022\014\n\004name\030\001 \001(\t\"O\n\026ListDataSou"
      "rcesRequest\022\016\n\006parent\030\001 \001(\t\022\022\n\npage_toke"
      "n\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\005\"{\n\027ListDataSo"
      "urcesResponse\022G\n\014data_sources\030\001 \003(\01321.go"
      "ogle.cloud.bigquery.datatransfer.v1.Data"
      "Source\022\027\n\017next_page_token\030\002 \001(\t\"\231\001\n\033Crea"
      "teTransferConfigRequest\022\016\n\006parent\030\001 \001(\t\022"
      "N\n\017transfer_config\030\002 \001(\01325.google.cloud."
      "bigquery.datatransfer.v1.TransferConfig\022"
      "\032\n\022authorization_code\030\003 \001(\t\"\272\001\n\033UpdateTr"
      "ansferConfigRequest\022N\n\017transfer_config\030\001"
      " \001(\01325.google.cloud.bigquery.datatransfe"
      "r.v1.TransferConfig\022\032\n\022authorization_cod"
      "e\030\003 \001(\t\022/\n\013update_mask\030\004 \001(\0132\032.google.pr"
      "otobuf.FieldMask\"(\n\030GetTransferConfigReq"
      "uest\022\014\n\004name\030\001 \001(\t\"+\n\033DeleteTransferConf"
      "igRequest\022\014\n\004name\030\001 \001(\t\"%\n\025GetTransferRu"
      "nRequest\022\014\n\004name\030\001 \001(\t\"(\n\030DeleteTransfer"
      "RunRequest\022\014\n\004name\030\001 \001(\t\"l\n\032ListTransfer"
      "ConfigsRequest\022\016\n\006parent\030\001 \001(\t\022\027\n\017data_s"
      "ource_ids\030\002 \003(\t\022\022\n\npage_token\030\003 \001(\t\022\021\n\tp"
      "age_size\030\004 \001(\005\"\207\001\n\033ListTransferConfigsRe"
      "sponse\022O\n\020transfer_configs\030\001 \003(\01325.googl"
      "e.cloud.bigquery.datatransfer.v1.Transfe"
      "rConfig\022\027\n\017next_page_token\030\002 \001(\t\"\255\002\n\027Lis"
      "tTransferRunsRequest\022\016\n\006parent\030\001 \001(\t\022D\n\006"
      "states\030\002 \003(\01624.google.cloud.bigquery.dat"
      "atransfer.v1.TransferState\022\022\n\npage_token"
      "\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\005\022^\n\013run_attempt"
      "\030\005 \001(\0162I.google.cloud.bigquery.datatrans"
      "fer.v1.ListTransferRunsRequest.RunAttemp"
      "t\"5\n\nRunAttempt\022\033\n\027RUN_ATTEMPT_UNSPECIFI"
      "ED\020\000\022\n\n\006LATEST\020\001\"~\n\030ListTransferRunsResp"
      "onse\022I\n\rtransfer_runs\030\001 \003(\01322.google.clo"
      "ud.bigquery.datatransfer.v1.TransferRun\022"
      "\027\n\017next_page_token\030\002 \001(\t\"\257\001\n\027ListTransfe"
      "rLogsRequest\022\016\n\006parent\030\001 \001(\t\022\022\n\npage_tok"
      "en\030\004 \001(\t\022\021\n\tpage_size\030\005 \001(\005\022]\n\rmessage_t"
      "ypes\030\006 \003(\0162F.google.cloud.bigquery.datat"
      "ransfer.v1.TransferMessage.MessageSeveri"
      "ty\"\206\001\n\030ListTransferLogsResponse\022Q\n\021trans"
      "fer_messages\030\001 \003(\01326.google.cloud.bigque"
      "ry.datatransfer.v1.TransferMessage\022\027\n\017ne"
      "xt_page_token\030\002 \001(\t\"&\n\026CheckValidCredsRe"
      "quest\022\014\n\004name\030\001 \001(\t\"2\n\027CheckValidCredsRe"
      "sponse\022\027\n\017has_valid_creds\030\001 \001(\010\"\213\001\n\033Sche"
      "duleTransferRunsRequest\022\016\n\006parent\030\001 \001(\t\022"
      ".\n\nstart_time\030\002 \001(\0132\032.google.protobuf.Ti"
      "mestamp\022,\n\010end_time\030\003 \001(\0132\032.google.proto"
      "buf.Timestamp\"`\n\034ScheduleTransferRunsRes"
      "ponse\022@\n\004runs\030\001 \003(\01322.google.cloud.bigqu"
      "ery.datatransfer.v1.TransferRun2\206\033\n\023Data"
      "TransferService\022\337\001\n\rGetDataSource\022;.goog"
      "le.cloud.bigquery.datatransfer.v1.GetDat"
      "aSourceRequest\0321.google.cloud.bigquery.d"
      "atatransfer.v1.DataSource\"^\202\323\344\223\002X\022//v1/{"
      "name=projects/*/locations/*/dataSources/"
      "*}Z%\022#/v1/{name=projects/*/dataSources/*"
      "}\022\360\001\n\017ListDataSources\022=.google.cloud.big"
      "query.datatransfer.v1.ListDataSourcesReq"
      "uest\032>.google.cloud.bigquery.datatransfe"
      "r.v1.ListDataSourcesResponse\"^\202\323\344\223\002X\022//v"
      "1/{parent=projects/*/locations/*}/dataSo"
      "urcesZ%\022#/v1/{parent=projects/*}/dataSou"
      "rces\022\235\002\n\024CreateTransferConfig\022B.google.c"
      "loud.bigquery.datatransfer.v1.CreateTran"
      "sferConfigRequest\0325.google.cloud.bigquer"
      "y.datatransfer.v1.TransferConfig\"\211\001\202\323\344\223\002"
      "\202\001\"3/v1/{parent=projects/*/locations/*}/"
      "transferConfigs:\017transfer_configZ:\"\'/v1/"
      "{parent=projects/*}/transferConfigs:\017tra"
      "nsfer_config\022\275\002\n\024UpdateTransferConfig\022B."
      "google.cloud.bigquery.datatransfer.v1.Up"
      "dateTransferConfigRequest\0325.google.cloud"
      ".bigquery.datatransfer.v1.TransferConfig"
      "\"\251\001\202\323\344\223\002\242\0012C/v1/{transfer_config.name=pr"
      "ojects/*/locations/*/transferConfigs/*}:"
      "\017transfer_configZJ27/v1/{transfer_config"
      ".name=projects/*/transferConfigs/*}:\017tra"
      "nsfer_config\022\332\001\n\024DeleteTransferConfig\022B."
      "google.cloud.bigquery.datatransfer.v1.De"
      "leteTransferConfigRequest\032\026.google.proto"
      "buf.Empty\"f\202\323\344\223\002`*3/v1/{name=projects/*/"
      "locations/*/transferConfigs/*}Z)*\'/v1/{n"
      "ame=projects/*/transferConfigs/*}\022\363\001\n\021Ge"
      "tTransferConfig\022\?.google.cloud.bigquery."
      "datatransfer.v1.GetTransferConfigRequest"
      "\0325.google.cloud.bigquery.datatransfer.v1"
      ".TransferConfig\"f\202\323\344\223\002`\0223/v1/{name=proje"
      "cts/*/locations/*/transferConfigs/*}Z)\022\'"
      "/v1/{name=projects/*/transferConfigs/*}\022"
      "\204\002\n\023ListTransferConfigs\022A.google.cloud.b"
      "igquery.datatransfer.v1.ListTransferConf"
      "igsRequest\032B.google.cloud.bigquery.datat"
      "ransfer.v1.ListTransferConfigsResponse\"f"
      "\202\323\344\223\002`\0223/v1/{parent=projects/*/locations"
      "/*}/transferConfigsZ)\022\'/v1/{parent=proje"
      "cts/*}/transferConfigs\022\255\002\n\024ScheduleTrans"
      "ferRuns\022B.google.cloud.bigquery.datatran"
      "sfer.v1.ScheduleTransferRunsRequest\032C.go"
      "ogle.cloud.bigquery.datatransfer.v1.Sche"
      "duleTransferRunsResponse\"\213\001\202\323\344\223\002\204\001\"B/v1/"
      "{parent=projects/*/locations/*/transferC"
      "onfigs/*}:scheduleRuns:\001*Z;\"6/v1/{parent"
      "=projects/*/transferConfigs/*}:scheduleR"
      "uns:\001*\022\370\001\n\016GetTransferRun\022<.google.cloud"
      ".bigquery.datatransfer.v1.GetTransferRun"
      "Request\0322.google.cloud.bigquery.datatran"
      "sfer.v1.TransferRun\"t\202\323\344\223\002n\022:/v1/{name=p"
      "rojects/*/locations/*/transferConfigs/*/"
      "runs/*}Z0\022./v1/{name=projects/*/transfer"
      "Configs/*/runs/*}\022\342\001\n\021DeleteTransferRun\022"
      "\?.google.cloud.bigquery.datatransfer.v1."
      "DeleteTransferRunRequest\032\026.google.protob"
      "uf.Empty\"t\202\323\344\223\002n*:/v1/{name=projects/*/l"
      "ocations/*/transferConfigs/*/runs/*}Z0*."
      "/v1/{name=projects/*/transferConfigs/*/r"
      "uns/*}\022\211\002\n\020ListTransferRuns\022>.google.clo"
      "ud.bigquery.datatransfer.v1.ListTransfer"
      "RunsRequest\032\?.google.cloud.bigquery.data"
      "transfer.v1.ListTransferRunsResponse\"t\202\323"
      "\344\223\002n\022:/v1/{parent=projects/*/locations/*"
      "/transferConfigs/*}/runsZ0\022./v1/{parent="
      "projects/*/transferConfigs/*}/runs\022\251\002\n\020L"
      "istTransferLogs\022>.google.cloud.bigquery."
      "datatransfer.v1.ListTransferLogsRequest\032"
      "\?.google.cloud.bigquery.datatransfer.v1."
      "ListTransferLogsResponse\"\223\001\202\323\344\223\002\214\001\022I/v1/"
      "{parent=projects/*/locations/*/transferC"
      "onfigs/*/runs/*}/transferLogsZ\?\022=/v1/{pa"
      "rent=projects/*/transferConfigs/*/runs/*"
      "}/transferLogs\022\227\002\n\017CheckValidCreds\022=.goo"
      "gle.cloud.bigquery.datatransfer.v1.Check"
      "ValidCredsRequest\032>.google.cloud.bigquer"
      "y.datatransfer.v1.CheckValidCredsRespons"
      "e\"\204\001\202\323\344\223\002~\"\?/v1/{name=projects/*/locatio"
      "ns/*/dataSources/*}:checkValidCreds:\001*Z8"
      "\"3/v1/{name=projects/*/dataSources/*}:ch"
      "eckValidCreds:\001*B\343\001\n)com.google.cloud.bi"
      "gquery.datatransfer.v1B\021DataTransferProt"
      "oP\001ZQgoogle.golang.org/genproto/googleap"
      "is/cloud/bigquery/datatransfer/v1;datatr"
      "ansfer\252\002%Google.Cloud.BigQuery.DataTrans"
      "fer.V1\312\002%Google\\Cloud\\BigQuery\\DataTrans"
      "fer\\V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7734);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/bigquery/datatransfer/v1/datatransfer.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2ftransfer_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto
namespace google {
namespace cloud {
namespace bigquery {
namespace datatransfer {
namespace v1 {
const ::google::protobuf::EnumDescriptor* DataSourceParameter_Type_descriptor() {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_enum_descriptors[0];
}
bool DataSourceParameter_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataSourceParameter_Type DataSourceParameter::TYPE_UNSPECIFIED;
const DataSourceParameter_Type DataSourceParameter::STRING;
const DataSourceParameter_Type DataSourceParameter::INTEGER;
const DataSourceParameter_Type DataSourceParameter::DOUBLE;
const DataSourceParameter_Type DataSourceParameter::BOOLEAN;
const DataSourceParameter_Type DataSourceParameter::RECORD;
const DataSourceParameter_Type DataSourceParameter::PLUS_PAGE;
const DataSourceParameter_Type DataSourceParameter::Type_MIN;
const DataSourceParameter_Type DataSourceParameter::Type_MAX;
const int DataSourceParameter::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataSource_AuthorizationType_descriptor() {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_enum_descriptors[1];
}
bool DataSource_AuthorizationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataSource_AuthorizationType DataSource::AUTHORIZATION_TYPE_UNSPECIFIED;
const DataSource_AuthorizationType DataSource::AUTHORIZATION_CODE;
const DataSource_AuthorizationType DataSource::GOOGLE_PLUS_AUTHORIZATION_CODE;
const DataSource_AuthorizationType DataSource::AuthorizationType_MIN;
const DataSource_AuthorizationType DataSource::AuthorizationType_MAX;
const int DataSource::AuthorizationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataSource_DataRefreshType_descriptor() {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_enum_descriptors[2];
}
bool DataSource_DataRefreshType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataSource_DataRefreshType DataSource::DATA_REFRESH_TYPE_UNSPECIFIED;
const DataSource_DataRefreshType DataSource::SLIDING_WINDOW;
const DataSource_DataRefreshType DataSource::CUSTOM_SLIDING_WINDOW;
const DataSource_DataRefreshType DataSource::DataRefreshType_MIN;
const DataSource_DataRefreshType DataSource::DataRefreshType_MAX;
const int DataSource::DataRefreshType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ListTransferRunsRequest_RunAttempt_descriptor() {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_enum_descriptors[3];
}
bool ListTransferRunsRequest_RunAttempt_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListTransferRunsRequest_RunAttempt ListTransferRunsRequest::RUN_ATTEMPT_UNSPECIFIED;
const ListTransferRunsRequest_RunAttempt ListTransferRunsRequest::LATEST;
const ListTransferRunsRequest_RunAttempt ListTransferRunsRequest::RunAttempt_MIN;
const ListTransferRunsRequest_RunAttempt ListTransferRunsRequest::RunAttempt_MAX;
const int ListTransferRunsRequest::RunAttempt_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DataSourceParameter::InitAsDefaultInstance() {
  ::google::cloud::bigquery::datatransfer::v1::_DataSourceParameter_default_instance_._instance.get_mutable()->min_value_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::cloud::bigquery::datatransfer::v1::_DataSourceParameter_default_instance_._instance.get_mutable()->max_value_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
void DataSourceParameter::clear_min_value() {
  if (GetArenaNoVirtual() == NULL && min_value_ != NULL) {
    delete min_value_;
  }
  min_value_ = NULL;
}
void DataSourceParameter::clear_max_value() {
  if (GetArenaNoVirtual() == NULL && max_value_ != NULL) {
    delete max_value_;
  }
  max_value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSourceParameter::kParamIdFieldNumber;
const int DataSourceParameter::kDisplayNameFieldNumber;
const int DataSourceParameter::kDescriptionFieldNumber;
const int DataSourceParameter::kTypeFieldNumber;
const int DataSourceParameter::kRequiredFieldNumber;
const int DataSourceParameter::kRepeatedFieldNumber;
const int DataSourceParameter::kValidationRegexFieldNumber;
const int DataSourceParameter::kAllowedValuesFieldNumber;
const int DataSourceParameter::kMinValueFieldNumber;
const int DataSourceParameter::kMaxValueFieldNumber;
const int DataSourceParameter::kFieldsFieldNumber;
const int DataSourceParameter::kValidationDescriptionFieldNumber;
const int DataSourceParameter::kValidationHelpUrlFieldNumber;
const int DataSourceParameter::kImmutableFieldNumber;
const int DataSourceParameter::kRecurseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSourceParameter::DataSourceParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSourceParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
}
DataSourceParameter::DataSourceParameter(const DataSourceParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allowed_values_(from.allowed_values_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.param_id().size() > 0) {
    param_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_id_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  validation_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validation_regex().size() > 0) {
    validation_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_regex_);
  }
  validation_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validation_description().size() > 0) {
    validation_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_description_);
  }
  validation_help_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validation_help_url().size() > 0) {
    validation_help_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_help_url_);
  }
  if (from.has_min_value()) {
    min_value_ = new ::google::protobuf::DoubleValue(*from.min_value_);
  } else {
    min_value_ = NULL;
  }
  if (from.has_max_value()) {
    max_value_ = new ::google::protobuf::DoubleValue(*from.max_value_);
  } else {
    max_value_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&recurse_) -
    reinterpret_cast<char*>(&type_)) + sizeof(recurse_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
}

void DataSourceParameter::SharedCtor() {
  param_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_help_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recurse_) -
      reinterpret_cast<char*>(&min_value_)) + sizeof(recurse_));
}

DataSourceParameter::~DataSourceParameter() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  SharedDtor();
}

void DataSourceParameter::SharedDtor() {
  param_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_help_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete min_value_;
  if (this != internal_default_instance()) delete max_value_;
}

void DataSourceParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataSourceParameter::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataSourceParameter& DataSourceParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSourceParameter.base);
  return *internal_default_instance();
}


void DataSourceParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_values_.Clear();
  fields_.Clear();
  param_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validation_help_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && min_value_ != NULL) {
    delete min_value_;
  }
  min_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_value_ != NULL) {
    delete max_value_;
  }
  max_value_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recurse_) -
      reinterpret_cast<char*>(&type_)) + sizeof(recurse_));
  _internal_metadata_.Clear();
}

bool DataSourceParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string param_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param_id().data(), static_cast<int>(this->param_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.param_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool required = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool repeated = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &repeated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validation_regex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validation_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validation_regex().data(), static_cast<int>(this->validation_regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string allowed_values = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_allowed_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->allowed_values(this->allowed_values_size() - 1).data(),
            static_cast<int>(this->allowed_values(this->allowed_values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.allowed_values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue min_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter fields = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validation_description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validation_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validation_description().data(), static_cast<int>(this->validation_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validation_help_url = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validation_help_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validation_help_url().data(), static_cast<int>(this->validation_help_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_help_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool immutable = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &immutable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool recurse = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recurse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  return false;
#undef DO_
}

void DataSourceParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_id = 1;
  if (this->param_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param_id().data(), static_cast<int>(this->param_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.param_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->param_id(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // bool required = 5;
  if (this->required() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->required(), output);
  }

  // bool repeated = 6;
  if (this->repeated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->repeated(), output);
  }

  // string validation_regex = 7;
  if (this->validation_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_regex().data(), static_cast<int>(this->validation_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->validation_regex(), output);
  }

  // repeated string allowed_values = 8;
  for (int i = 0, n = this->allowed_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_values(i).data(), static_cast<int>(this->allowed_values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.allowed_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->allowed_values(i), output);
  }

  // .google.protobuf.DoubleValue min_value = 9;
  if (this->has_min_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_min_value(), output);
  }

  // .google.protobuf.DoubleValue max_value = 10;
  if (this->has_max_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_max_value(), output);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter fields = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->fields(static_cast<int>(i)),
      output);
  }

  // string validation_description = 12;
  if (this->validation_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_description().data(), static_cast<int>(this->validation_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->validation_description(), output);
  }

  // string validation_help_url = 13;
  if (this->validation_help_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_help_url().data(), static_cast<int>(this->validation_help_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_help_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->validation_help_url(), output);
  }

  // bool immutable = 14;
  if (this->immutable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->immutable(), output);
  }

  // bool recurse = 15;
  if (this->recurse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->recurse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
}

::google::protobuf::uint8* DataSourceParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_id = 1;
  if (this->param_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param_id().data(), static_cast<int>(this->param_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.param_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->param_id(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // bool required = 5;
  if (this->required() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->required(), target);
  }

  // bool repeated = 6;
  if (this->repeated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->repeated(), target);
  }

  // string validation_regex = 7;
  if (this->validation_regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_regex().data(), static_cast<int>(this->validation_regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->validation_regex(), target);
  }

  // repeated string allowed_values = 8;
  for (int i = 0, n = this->allowed_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->allowed_values(i).data(), static_cast<int>(this->allowed_values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.allowed_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->allowed_values(i), target);
  }

  // .google.protobuf.DoubleValue min_value = 9;
  if (this->has_min_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_min_value(), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_value = 10;
  if (this->has_max_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_max_value(), deterministic, target);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter fields = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // string validation_description = 12;
  if (this->validation_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_description().data(), static_cast<int>(this->validation_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->validation_description(), target);
  }

  // string validation_help_url = 13;
  if (this->validation_help_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validation_help_url().data(), static_cast<int>(this->validation_help_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSourceParameter.validation_help_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->validation_help_url(), target);
  }

  // bool immutable = 14;
  if (this->immutable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->immutable(), target);
  }

  // bool recurse = 15;
  if (this->recurse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->recurse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  return target;
}

size_t DataSourceParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string allowed_values = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->allowed_values_size());
  for (int i = 0, n = this->allowed_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->allowed_values(i));
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter fields = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // string param_id = 1;
  if (this->param_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param_id());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string validation_regex = 7;
  if (this->validation_regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validation_regex());
  }

  // string validation_description = 12;
  if (this->validation_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validation_description());
  }

  // string validation_help_url = 13;
  if (this->validation_help_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validation_help_url());
  }

  // .google.protobuf.DoubleValue min_value = 9;
  if (this->has_min_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_value_);
  }

  // .google.protobuf.DoubleValue max_value = 10;
  if (this->has_max_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_value_);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSourceParameter.Type type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool required = 5;
  if (this->required() != 0) {
    total_size += 1 + 1;
  }

  // bool repeated = 6;
  if (this->repeated() != 0) {
    total_size += 1 + 1;
  }

  // bool immutable = 14;
  if (this->immutable() != 0) {
    total_size += 1 + 1;
  }

  // bool recurse = 15;
  if (this->recurse() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSourceParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSourceParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataSourceParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
    MergeFrom(*source);
  }
}

void DataSourceParameter::MergeFrom(const DataSourceParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_values_.MergeFrom(from.allowed_values_);
  fields_.MergeFrom(from.fields_);
  if (from.param_id().size() > 0) {

    param_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_id_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.validation_regex().size() > 0) {

    validation_regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_regex_);
  }
  if (from.validation_description().size() > 0) {

    validation_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_description_);
  }
  if (from.validation_help_url().size() > 0) {

    validation_help_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validation_help_url_);
  }
  if (from.has_min_value()) {
    mutable_min_value()->::google::protobuf::DoubleValue::MergeFrom(from.min_value());
  }
  if (from.has_max_value()) {
    mutable_max_value()->::google::protobuf::DoubleValue::MergeFrom(from.max_value());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.required() != 0) {
    set_required(from.required());
  }
  if (from.repeated() != 0) {
    set_repeated(from.repeated());
  }
  if (from.immutable() != 0) {
    set_immutable(from.immutable());
  }
  if (from.recurse() != 0) {
    set_recurse(from.recurse());
  }
}

void DataSourceParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSourceParameter::CopyFrom(const DataSourceParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.DataSourceParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSourceParameter::IsInitialized() const {
  return true;
}

void DataSourceParameter::Swap(DataSourceParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSourceParameter::InternalSwap(DataSourceParameter* other) {
  using std::swap;
  allowed_values_.InternalSwap(CastToBase(&other->allowed_values_));
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  param_id_.Swap(&other->param_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  validation_regex_.Swap(&other->validation_regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  validation_description_.Swap(&other->validation_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  validation_help_url_.Swap(&other->validation_help_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(min_value_, other->min_value_);
  swap(max_value_, other->max_value_);
  swap(type_, other->type_);
  swap(required_, other->required_);
  swap(repeated_, other->repeated_);
  swap(immutable_, other->immutable_);
  swap(recurse_, other->recurse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataSourceParameter::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataSource::InitAsDefaultInstance() {
  ::google::cloud::bigquery::datatransfer::v1::_DataSource_default_instance_._instance.get_mutable()->minimum_schedule_interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void DataSource::clear_minimum_schedule_interval() {
  if (GetArenaNoVirtual() == NULL && minimum_schedule_interval_ != NULL) {
    delete minimum_schedule_interval_;
  }
  minimum_schedule_interval_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSource::kNameFieldNumber;
const int DataSource::kDataSourceIdFieldNumber;
const int DataSource::kDisplayNameFieldNumber;
const int DataSource::kDescriptionFieldNumber;
const int DataSource::kClientIdFieldNumber;
const int DataSource::kScopesFieldNumber;
const int DataSource::kTransferTypeFieldNumber;
const int DataSource::kSupportsMultipleTransfersFieldNumber;
const int DataSource::kUpdateDeadlineSecondsFieldNumber;
const int DataSource::kDefaultScheduleFieldNumber;
const int DataSource::kSupportsCustomScheduleFieldNumber;
const int DataSource::kParametersFieldNumber;
const int DataSource::kHelpUrlFieldNumber;
const int DataSource::kAuthorizationTypeFieldNumber;
const int DataSource::kDataRefreshTypeFieldNumber;
const int DataSource::kDefaultDataRefreshWindowDaysFieldNumber;
const int DataSource::kManualRunsDisabledFieldNumber;
const int DataSource::kMinimumScheduleIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSource::DataSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.DataSource)
}
DataSource::DataSource(const DataSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scopes_(from.scopes_),
      parameters_(from.parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_source_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_source_id().size() > 0) {
    data_source_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_source_id_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  default_schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_schedule().size() > 0) {
    default_schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_schedule_);
  }
  help_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.help_url().size() > 0) {
    help_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_url_);
  }
  if (from.has_minimum_schedule_interval()) {
    minimum_schedule_interval_ = new ::google::protobuf::Duration(*from.minimum_schedule_interval_);
  } else {
    minimum_schedule_interval_ = NULL;
  }
  ::memcpy(&transfer_type_, &from.transfer_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_data_refresh_window_days_) -
    reinterpret_cast<char*>(&transfer_type_)) + sizeof(default_data_refresh_window_days_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.DataSource)
}

void DataSource::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_schedule_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minimum_schedule_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_data_refresh_window_days_) -
      reinterpret_cast<char*>(&minimum_schedule_interval_)) + sizeof(default_data_refresh_window_days_));
}

DataSource::~DataSource() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.DataSource)
  SharedDtor();
}

void DataSource::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_schedule_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete minimum_schedule_interval_;
}

void DataSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataSource::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataSource& DataSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DataSource.base);
  return *internal_default_instance();
}


void DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scopes_.Clear();
  parameters_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  default_schedule_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && minimum_schedule_interval_ != NULL) {
    delete minimum_schedule_interval_;
  }
  minimum_schedule_interval_ = NULL;
  ::memset(&transfer_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_data_refresh_window_days_) -
      reinterpret_cast<char*>(&transfer_type_)) + sizeof(default_data_refresh_window_days_));
  _internal_metadata_.Clear();
}

bool DataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_source_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_source_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_source_id().data(), static_cast<int>(this->data_source_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.data_source_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string scopes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scopes(this->scopes_size() - 1).data(),
            static_cast<int>(this->scopes(this->scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.TransferType transfer_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transfer_type(static_cast< ::google::cloud::bigquery::datatransfer::v1::TransferType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool supports_multiple_transfers = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supports_multiple_transfers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 update_deadline_seconds = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_deadline_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default_schedule = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_schedule()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_schedule().data(), static_cast<int>(this->default_schedule().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.default_schedule"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool supports_custom_schedule = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supports_custom_schedule_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter parameters = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string help_url = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_help_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->help_url().data(), static_cast<int>(this->help_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DataSource.help_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType authorization_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_authorization_type(static_cast< ::google::cloud::bigquery::datatransfer::v1::DataSource_AuthorizationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType data_refresh_type = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_data_refresh_type(static_cast< ::google::cloud::bigquery::datatransfer::v1::DataSource_DataRefreshType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 default_data_refresh_window_days = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_data_refresh_window_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool manual_runs_disabled = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &manual_runs_disabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration minimum_schedule_interval = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_minimum_schedule_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.DataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.DataSource)
  return false;
#undef DO_
}

void DataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string data_source_id = 2;
  if (this->data_source_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source_id().data(), static_cast<int>(this->data_source_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.data_source_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_source_id(), output);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_name(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->client_id(), output);
  }

  // repeated string scopes = 6;
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scopes(i).data(), static_cast<int>(this->scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->scopes(i), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferType transfer_type = 7;
  if (this->transfer_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->transfer_type(), output);
  }

  // bool supports_multiple_transfers = 8;
  if (this->supports_multiple_transfers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->supports_multiple_transfers(), output);
  }

  // int32 update_deadline_seconds = 9;
  if (this->update_deadline_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->update_deadline_seconds(), output);
  }

  // string default_schedule = 10;
  if (this->default_schedule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_schedule().data(), static_cast<int>(this->default_schedule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.default_schedule");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->default_schedule(), output);
  }

  // bool supports_custom_schedule = 11;
  if (this->supports_custom_schedule() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->supports_custom_schedule(), output);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter parameters = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->parameters(static_cast<int>(i)),
      output);
  }

  // string help_url = 13;
  if (this->help_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help_url().data(), static_cast<int>(this->help_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.help_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->help_url(), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType authorization_type = 14;
  if (this->authorization_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->authorization_type(), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType data_refresh_type = 15;
  if (this->data_refresh_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->data_refresh_type(), output);
  }

  // int32 default_data_refresh_window_days = 16;
  if (this->default_data_refresh_window_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->default_data_refresh_window_days(), output);
  }

  // bool manual_runs_disabled = 17;
  if (this->manual_runs_disabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->manual_runs_disabled(), output);
  }

  // .google.protobuf.Duration minimum_schedule_interval = 18;
  if (this->has_minimum_schedule_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_minimum_schedule_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.DataSource)
}

::google::protobuf::uint8* DataSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string data_source_id = 2;
  if (this->data_source_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source_id().data(), static_cast<int>(this->data_source_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.data_source_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_source_id(), target);
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_name(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->client_id(), target);
  }

  // repeated string scopes = 6;
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scopes(i).data(), static_cast<int>(this->scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->scopes(i), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferType transfer_type = 7;
  if (this->transfer_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->transfer_type(), target);
  }

  // bool supports_multiple_transfers = 8;
  if (this->supports_multiple_transfers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->supports_multiple_transfers(), target);
  }

  // int32 update_deadline_seconds = 9;
  if (this->update_deadline_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->update_deadline_seconds(), target);
  }

  // string default_schedule = 10;
  if (this->default_schedule().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_schedule().data(), static_cast<int>(this->default_schedule().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.default_schedule");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->default_schedule(), target);
  }

  // bool supports_custom_schedule = 11;
  if (this->supports_custom_schedule() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->supports_custom_schedule(), target);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter parameters = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // string help_url = 13;
  if (this->help_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help_url().data(), static_cast<int>(this->help_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DataSource.help_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->help_url(), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType authorization_type = 14;
  if (this->authorization_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->authorization_type(), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType data_refresh_type = 15;
  if (this->data_refresh_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->data_refresh_type(), target);
  }

  // int32 default_data_refresh_window_days = 16;
  if (this->default_data_refresh_window_days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->default_data_refresh_window_days(), target);
  }

  // bool manual_runs_disabled = 17;
  if (this->manual_runs_disabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->manual_runs_disabled(), target);
  }

  // .google.protobuf.Duration minimum_schedule_interval = 18;
  if (this->has_minimum_schedule_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_minimum_schedule_interval(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.DataSource)
  return target;
}

size_t DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string scopes = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->scopes_size());
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scopes(i));
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSourceParameter parameters = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string data_source_id = 2;
  if (this->data_source_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_source_id());
  }

  // string display_name = 3;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string client_id = 5;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string default_schedule = 10;
  if (this->default_schedule().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_schedule());
  }

  // string help_url = 13;
  if (this->help_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->help_url());
  }

  // .google.protobuf.Duration minimum_schedule_interval = 18;
  if (this->has_minimum_schedule_interval()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *minimum_schedule_interval_);
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferType transfer_type = 7;
  if (this->transfer_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transfer_type());
  }

  // int32 update_deadline_seconds = 9;
  if (this->update_deadline_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->update_deadline_seconds());
  }

  // bool supports_multiple_transfers = 8;
  if (this->supports_multiple_transfers() != 0) {
    total_size += 1 + 1;
  }

  // bool supports_custom_schedule = 11;
  if (this->supports_custom_schedule() != 0) {
    total_size += 1 + 1;
  }

  // bool manual_runs_disabled = 17;
  if (this->manual_runs_disabled() != 0) {
    total_size += 2 + 1;
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.AuthorizationType authorization_type = 14;
  if (this->authorization_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->authorization_type());
  }

  // .google.cloud.bigquery.datatransfer.v1.DataSource.DataRefreshType data_refresh_type = 15;
  if (this->data_refresh_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_refresh_type());
  }

  // int32 default_data_refresh_window_days = 16;
  if (this->default_data_refresh_window_days() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->default_data_refresh_window_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.DataSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.DataSource)
    MergeFrom(*source);
  }
}

void DataSource::MergeFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopes_.MergeFrom(from.scopes_);
  parameters_.MergeFrom(from.parameters_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data_source_id().size() > 0) {

    data_source_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_source_id_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.default_schedule().size() > 0) {

    default_schedule_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_schedule_);
  }
  if (from.help_url().size() > 0) {

    help_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_url_);
  }
  if (from.has_minimum_schedule_interval()) {
    mutable_minimum_schedule_interval()->::google::protobuf::Duration::MergeFrom(from.minimum_schedule_interval());
  }
  if (from.transfer_type() != 0) {
    set_transfer_type(from.transfer_type());
  }
  if (from.update_deadline_seconds() != 0) {
    set_update_deadline_seconds(from.update_deadline_seconds());
  }
  if (from.supports_multiple_transfers() != 0) {
    set_supports_multiple_transfers(from.supports_multiple_transfers());
  }
  if (from.supports_custom_schedule() != 0) {
    set_supports_custom_schedule(from.supports_custom_schedule());
  }
  if (from.manual_runs_disabled() != 0) {
    set_manual_runs_disabled(from.manual_runs_disabled());
  }
  if (from.authorization_type() != 0) {
    set_authorization_type(from.authorization_type());
  }
  if (from.data_refresh_type() != 0) {
    set_data_refresh_type(from.data_refresh_type());
  }
  if (from.default_data_refresh_window_days() != 0) {
    set_default_data_refresh_window_days(from.default_data_refresh_window_days());
  }
}

void DataSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSource::CopyFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSource::IsInitialized() const {
  return true;
}

void DataSource::Swap(DataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSource::InternalSwap(DataSource* other) {
  using std::swap;
  scopes_.InternalSwap(CastToBase(&other->scopes_));
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_source_id_.Swap(&other->data_source_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_schedule_.Swap(&other->default_schedule_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  help_url_.Swap(&other->help_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(minimum_schedule_interval_, other->minimum_schedule_interval_);
  swap(transfer_type_, other->transfer_type_);
  swap(update_deadline_seconds_, other->update_deadline_seconds_);
  swap(supports_multiple_transfers_, other->supports_multiple_transfers_);
  swap(supports_custom_schedule_, other->supports_custom_schedule_);
  swap(manual_runs_disabled_, other->manual_runs_disabled_);
  swap(authorization_type_, other->authorization_type_);
  swap(data_refresh_type_, other->data_refresh_type_);
  swap(default_data_refresh_window_days_, other->default_data_refresh_window_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataSource::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDataSourceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDataSourceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDataSourceRequest::GetDataSourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetDataSourceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
}
GetDataSourceRequest::GetDataSourceRequest(const GetDataSourceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
}

void GetDataSourceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDataSourceRequest::~GetDataSourceRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  SharedDtor();
}

void GetDataSourceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDataSourceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDataSourceRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDataSourceRequest& GetDataSourceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetDataSourceRequest.base);
  return *internal_default_instance();
}


void GetDataSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetDataSourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  return false;
#undef DO_
}

void GetDataSourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
}

::google::protobuf::uint8* GetDataSourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  return target;
}

size_t GetDataSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataSourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataSourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDataSourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
    MergeFrom(*source);
  }
}

void GetDataSourceRequest::MergeFrom(const GetDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetDataSourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataSourceRequest::CopyFrom(const GetDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataSourceRequest::IsInitialized() const {
  return true;
}

void GetDataSourceRequest::Swap(GetDataSourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDataSourceRequest::InternalSwap(GetDataSourceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDataSourceRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDataSourcesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDataSourcesRequest::kParentFieldNumber;
const int ListDataSourcesRequest::kPageTokenFieldNumber;
const int ListDataSourcesRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDataSourcesRequest::ListDataSourcesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListDataSourcesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
}
ListDataSourcesRequest::ListDataSourcesRequest(const ListDataSourcesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
}

void ListDataSourcesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListDataSourcesRequest::~ListDataSourcesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  SharedDtor();
}

void ListDataSourcesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListDataSourcesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDataSourcesRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDataSourcesRequest& ListDataSourcesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListDataSourcesRequest.base);
  return *internal_default_instance();
}


void ListDataSourcesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListDataSourcesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  return false;
#undef DO_
}

void ListDataSourcesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
}

::google::protobuf::uint8* ListDataSourcesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  return target;
}

size_t ListDataSourcesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDataSourcesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDataSourcesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDataSourcesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
    MergeFrom(*source);
  }
}

void ListDataSourcesRequest::MergeFrom(const ListDataSourcesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListDataSourcesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDataSourcesRequest::CopyFrom(const ListDataSourcesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDataSourcesRequest::IsInitialized() const {
  return true;
}

void ListDataSourcesRequest::Swap(ListDataSourcesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDataSourcesRequest::InternalSwap(ListDataSourcesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDataSourcesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDataSourcesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDataSourcesResponse::kDataSourcesFieldNumber;
const int ListDataSourcesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDataSourcesResponse::ListDataSourcesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListDataSourcesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
}
ListDataSourcesResponse::ListDataSourcesResponse(const ListDataSourcesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_sources_(from.data_sources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
}

void ListDataSourcesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListDataSourcesResponse::~ListDataSourcesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  SharedDtor();
}

void ListDataSourcesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListDataSourcesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDataSourcesResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDataSourcesResponse& ListDataSourcesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListDataSourcesResponse.base);
  return *internal_default_instance();
}


void ListDataSourcesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_sources_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListDataSourcesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.datatransfer.v1.DataSource data_sources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  return false;
#undef DO_
}

void ListDataSourcesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSource data_sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data_sources(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
}

::google::protobuf::uint8* ListDataSourcesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.DataSource data_sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data_sources(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  return target;
}

size_t ListDataSourcesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.DataSource data_sources = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_sources(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDataSourcesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDataSourcesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDataSourcesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
    MergeFrom(*source);
  }
}

void ListDataSourcesResponse::MergeFrom(const ListDataSourcesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_sources_.MergeFrom(from.data_sources_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListDataSourcesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDataSourcesResponse::CopyFrom(const ListDataSourcesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListDataSourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDataSourcesResponse::IsInitialized() const {
  return true;
}

void ListDataSourcesResponse::Swap(ListDataSourcesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDataSourcesResponse::InternalSwap(ListDataSourcesResponse* other) {
  using std::swap;
  CastToBase(&data_sources_)->InternalSwap(CastToBase(&other->data_sources_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDataSourcesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateTransferConfigRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::datatransfer::v1::_CreateTransferConfigRequest_default_instance_._instance.get_mutable()->transfer_config_ = const_cast< ::google::cloud::bigquery::datatransfer::v1::TransferConfig*>(
      ::google::cloud::bigquery::datatransfer::v1::TransferConfig::internal_default_instance());
}
void CreateTransferConfigRequest::clear_transfer_config() {
  if (GetArenaNoVirtual() == NULL && transfer_config_ != NULL) {
    delete transfer_config_;
  }
  transfer_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateTransferConfigRequest::kParentFieldNumber;
const int CreateTransferConfigRequest::kTransferConfigFieldNumber;
const int CreateTransferConfigRequest::kAuthorizationCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateTransferConfigRequest::CreateTransferConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CreateTransferConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
}
CreateTransferConfigRequest::CreateTransferConfigRequest(const CreateTransferConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  authorization_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authorization_code().size() > 0) {
    authorization_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorization_code_);
  }
  if (from.has_transfer_config()) {
    transfer_config_ = new ::google::cloud::bigquery::datatransfer::v1::TransferConfig(*from.transfer_config_);
  } else {
    transfer_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
}

void CreateTransferConfigRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorization_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_config_ = NULL;
}

CreateTransferConfigRequest::~CreateTransferConfigRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  SharedDtor();
}

void CreateTransferConfigRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorization_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transfer_config_;
}

void CreateTransferConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateTransferConfigRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateTransferConfigRequest& CreateTransferConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CreateTransferConfigRequest.base);
  return *internal_default_instance();
}


void CreateTransferConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorization_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transfer_config_ != NULL) {
    delete transfer_config_;
  }
  transfer_config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateTransferConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authorization_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorization_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.authorization_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  return false;
#undef DO_
}

void CreateTransferConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 2;
  if (this->has_transfer_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_transfer_config(), output);
  }

  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.authorization_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->authorization_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
}

::google::protobuf::uint8* CreateTransferConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 2;
  if (this->has_transfer_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_transfer_config(), deterministic, target);
  }

  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest.authorization_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->authorization_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  return target;
}

size_t CreateTransferConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorization_code());
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 2;
  if (this->has_transfer_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transfer_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTransferConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTransferConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateTransferConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
    MergeFrom(*source);
  }
}

void CreateTransferConfigRequest::MergeFrom(const CreateTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.authorization_code().size() > 0) {

    authorization_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorization_code_);
  }
  if (from.has_transfer_config()) {
    mutable_transfer_config()->::google::cloud::bigquery::datatransfer::v1::TransferConfig::MergeFrom(from.transfer_config());
  }
}

void CreateTransferConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransferConfigRequest::CopyFrom(const CreateTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.CreateTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTransferConfigRequest::IsInitialized() const {
  return true;
}

void CreateTransferConfigRequest::Swap(CreateTransferConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateTransferConfigRequest::InternalSwap(CreateTransferConfigRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authorization_code_.Swap(&other->authorization_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transfer_config_, other->transfer_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateTransferConfigRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateTransferConfigRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::datatransfer::v1::_UpdateTransferConfigRequest_default_instance_._instance.get_mutable()->transfer_config_ = const_cast< ::google::cloud::bigquery::datatransfer::v1::TransferConfig*>(
      ::google::cloud::bigquery::datatransfer::v1::TransferConfig::internal_default_instance());
  ::google::cloud::bigquery::datatransfer::v1::_UpdateTransferConfigRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateTransferConfigRequest::clear_transfer_config() {
  if (GetArenaNoVirtual() == NULL && transfer_config_ != NULL) {
    delete transfer_config_;
  }
  transfer_config_ = NULL;
}
void UpdateTransferConfigRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateTransferConfigRequest::kTransferConfigFieldNumber;
const int UpdateTransferConfigRequest::kAuthorizationCodeFieldNumber;
const int UpdateTransferConfigRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateTransferConfigRequest::UpdateTransferConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_UpdateTransferConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
}
UpdateTransferConfigRequest::UpdateTransferConfigRequest(const UpdateTransferConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  authorization_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authorization_code().size() > 0) {
    authorization_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorization_code_);
  }
  if (from.has_transfer_config()) {
    transfer_config_ = new ::google::cloud::bigquery::datatransfer::v1::TransferConfig(*from.transfer_config_);
  } else {
    transfer_config_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
}

void UpdateTransferConfigRequest::SharedCtor() {
  authorization_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transfer_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&transfer_config_)) + sizeof(update_mask_));
}

UpdateTransferConfigRequest::~UpdateTransferConfigRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  SharedDtor();
}

void UpdateTransferConfigRequest::SharedDtor() {
  authorization_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transfer_config_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateTransferConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateTransferConfigRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateTransferConfigRequest& UpdateTransferConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_UpdateTransferConfigRequest.base);
  return *internal_default_instance();
}


void UpdateTransferConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transfer_config_ != NULL) {
    delete transfer_config_;
  }
  transfer_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateTransferConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authorization_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorization_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.authorization_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  return false;
#undef DO_
}

void UpdateTransferConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;
  if (this->has_transfer_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transfer_config(), output);
  }

  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.authorization_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->authorization_code(), output);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
}

::google::protobuf::uint8* UpdateTransferConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;
  if (this->has_transfer_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transfer_config(), deterministic, target);
  }

  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorization_code().data(), static_cast<int>(this->authorization_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.authorization_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->authorization_code(), target);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  return target;
}

size_t UpdateTransferConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string authorization_code = 3;
  if (this->authorization_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorization_code());
  }

  // .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_config = 1;
  if (this->has_transfer_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transfer_config_);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateTransferConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateTransferConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateTransferConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
    MergeFrom(*source);
  }
}

void UpdateTransferConfigRequest::MergeFrom(const UpdateTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.authorization_code().size() > 0) {

    authorization_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorization_code_);
  }
  if (from.has_transfer_config()) {
    mutable_transfer_config()->::google::cloud::bigquery::datatransfer::v1::TransferConfig::MergeFrom(from.transfer_config());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateTransferConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateTransferConfigRequest::CopyFrom(const UpdateTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTransferConfigRequest::IsInitialized() const {
  return true;
}

void UpdateTransferConfigRequest::Swap(UpdateTransferConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateTransferConfigRequest::InternalSwap(UpdateTransferConfigRequest* other) {
  using std::swap;
  authorization_code_.Swap(&other->authorization_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transfer_config_, other->transfer_config_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateTransferConfigRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTransferConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTransferConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTransferConfigRequest::GetTransferConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetTransferConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
}
GetTransferConfigRequest::GetTransferConfigRequest(const GetTransferConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
}

void GetTransferConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTransferConfigRequest::~GetTransferConfigRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  SharedDtor();
}

void GetTransferConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTransferConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTransferConfigRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTransferConfigRequest& GetTransferConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetTransferConfigRequest.base);
  return *internal_default_instance();
}


void GetTransferConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTransferConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  return false;
#undef DO_
}

void GetTransferConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
}

::google::protobuf::uint8* GetTransferConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  return target;
}

size_t GetTransferConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransferConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransferConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTransferConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
    MergeFrom(*source);
  }
}

void GetTransferConfigRequest::MergeFrom(const GetTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetTransferConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransferConfigRequest::CopyFrom(const GetTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransferConfigRequest::IsInitialized() const {
  return true;
}

void GetTransferConfigRequest::Swap(GetTransferConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTransferConfigRequest::InternalSwap(GetTransferConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTransferConfigRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTransferConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTransferConfigRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTransferConfigRequest::DeleteTransferConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DeleteTransferConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
}
DeleteTransferConfigRequest::DeleteTransferConfigRequest(const DeleteTransferConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
}

void DeleteTransferConfigRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteTransferConfigRequest::~DeleteTransferConfigRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  SharedDtor();
}

void DeleteTransferConfigRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTransferConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteTransferConfigRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTransferConfigRequest& DeleteTransferConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DeleteTransferConfigRequest.base);
  return *internal_default_instance();
}


void DeleteTransferConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteTransferConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  return false;
#undef DO_
}

void DeleteTransferConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
}

::google::protobuf::uint8* DeleteTransferConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  return target;
}

size_t DeleteTransferConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTransferConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTransferConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTransferConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
    MergeFrom(*source);
  }
}

void DeleteTransferConfigRequest::MergeFrom(const DeleteTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTransferConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTransferConfigRequest::CopyFrom(const DeleteTransferConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTransferConfigRequest::IsInitialized() const {
  return true;
}

void DeleteTransferConfigRequest::Swap(DeleteTransferConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTransferConfigRequest::InternalSwap(DeleteTransferConfigRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteTransferConfigRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTransferRunRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTransferRunRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTransferRunRequest::GetTransferRunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetTransferRunRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
}
GetTransferRunRequest::GetTransferRunRequest(const GetTransferRunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
}

void GetTransferRunRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTransferRunRequest::~GetTransferRunRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  SharedDtor();
}

void GetTransferRunRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTransferRunRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTransferRunRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTransferRunRequest& GetTransferRunRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_GetTransferRunRequest.base);
  return *internal_default_instance();
}


void GetTransferRunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetTransferRunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  return false;
#undef DO_
}

void GetTransferRunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
}

::google::protobuf::uint8* GetTransferRunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  return target;
}

size_t GetTransferRunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransferRunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransferRunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTransferRunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
    MergeFrom(*source);
  }
}

void GetTransferRunRequest::MergeFrom(const GetTransferRunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetTransferRunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransferRunRequest::CopyFrom(const GetTransferRunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.GetTransferRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransferRunRequest::IsInitialized() const {
  return true;
}

void GetTransferRunRequest::Swap(GetTransferRunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTransferRunRequest::InternalSwap(GetTransferRunRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTransferRunRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteTransferRunRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteTransferRunRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteTransferRunRequest::DeleteTransferRunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DeleteTransferRunRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
}
DeleteTransferRunRequest::DeleteTransferRunRequest(const DeleteTransferRunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
}

void DeleteTransferRunRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteTransferRunRequest::~DeleteTransferRunRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  SharedDtor();
}

void DeleteTransferRunRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteTransferRunRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteTransferRunRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteTransferRunRequest& DeleteTransferRunRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_DeleteTransferRunRequest.base);
  return *internal_default_instance();
}


void DeleteTransferRunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteTransferRunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  return false;
#undef DO_
}

void DeleteTransferRunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
}

::google::protobuf::uint8* DeleteTransferRunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  return target;
}

size_t DeleteTransferRunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteTransferRunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteTransferRunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteTransferRunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
    MergeFrom(*source);
  }
}

void DeleteTransferRunRequest::MergeFrom(const DeleteTransferRunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteTransferRunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteTransferRunRequest::CopyFrom(const DeleteTransferRunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.DeleteTransferRunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTransferRunRequest::IsInitialized() const {
  return true;
}

void DeleteTransferRunRequest::Swap(DeleteTransferRunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteTransferRunRequest::InternalSwap(DeleteTransferRunRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteTransferRunRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferConfigsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferConfigsRequest::kParentFieldNumber;
const int ListTransferConfigsRequest::kDataSourceIdsFieldNumber;
const int ListTransferConfigsRequest::kPageTokenFieldNumber;
const int ListTransferConfigsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferConfigsRequest::ListTransferConfigsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferConfigsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
}
ListTransferConfigsRequest::ListTransferConfigsRequest(const ListTransferConfigsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_source_ids_(from.data_source_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
}

void ListTransferConfigsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListTransferConfigsRequest::~ListTransferConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  SharedDtor();
}

void ListTransferConfigsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferConfigsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferConfigsRequest& ListTransferConfigsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferConfigsRequest.base);
  return *internal_default_instance();
}


void ListTransferConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_source_ids_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListTransferConfigsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string data_source_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_data_source_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_source_ids(this->data_source_ids_size() - 1).data(),
            static_cast<int>(this->data_source_ids(this->data_source_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.data_source_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  return false;
#undef DO_
}

void ListTransferConfigsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // repeated string data_source_ids = 2;
  for (int i = 0, n = this->data_source_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source_ids(i).data(), static_cast<int>(this->data_source_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.data_source_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->data_source_ids(i), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
}

::google::protobuf::uint8* ListTransferConfigsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // repeated string data_source_ids = 2;
  for (int i = 0, n = this->data_source_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source_ids(i).data(), static_cast<int>(this->data_source_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.data_source_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->data_source_ids(i), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  return target;
}

size_t ListTransferConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string data_source_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_source_ids_size());
  for (int i = 0, n = this->data_source_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->data_source_ids(i));
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferConfigsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferConfigsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferConfigsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
    MergeFrom(*source);
  }
}

void ListTransferConfigsRequest::MergeFrom(const ListTransferConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_source_ids_.MergeFrom(from.data_source_ids_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListTransferConfigsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferConfigsRequest::CopyFrom(const ListTransferConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferConfigsRequest::IsInitialized() const {
  return true;
}

void ListTransferConfigsRequest::Swap(ListTransferConfigsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferConfigsRequest::InternalSwap(ListTransferConfigsRequest* other) {
  using std::swap;
  data_source_ids_.InternalSwap(CastToBase(&other->data_source_ids_));
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferConfigsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferConfigsResponse::InitAsDefaultInstance() {
}
void ListTransferConfigsResponse::clear_transfer_configs() {
  transfer_configs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferConfigsResponse::kTransferConfigsFieldNumber;
const int ListTransferConfigsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferConfigsResponse::ListTransferConfigsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferConfigsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
}
ListTransferConfigsResponse::ListTransferConfigsResponse(const ListTransferConfigsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transfer_configs_(from.transfer_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
}

void ListTransferConfigsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListTransferConfigsResponse::~ListTransferConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  SharedDtor();
}

void ListTransferConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferConfigsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferConfigsResponse& ListTransferConfigsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferConfigsResponse.base);
  return *internal_default_instance();
}


void ListTransferConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transfer_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTransferConfigsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transfer_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  return false;
#undef DO_
}

void ListTransferConfigsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transfer_configs(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
}

::google::protobuf::uint8* ListTransferConfigsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transfer_configs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  return target;
}

size_t ListTransferConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferConfig transfer_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transfer_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transfer_configs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferConfigsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferConfigsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferConfigsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
    MergeFrom(*source);
  }
}

void ListTransferConfigsResponse::MergeFrom(const ListTransferConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transfer_configs_.MergeFrom(from.transfer_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTransferConfigsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferConfigsResponse::CopyFrom(const ListTransferConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferConfigsResponse::IsInitialized() const {
  return true;
}

void ListTransferConfigsResponse::Swap(ListTransferConfigsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferConfigsResponse::InternalSwap(ListTransferConfigsResponse* other) {
  using std::swap;
  CastToBase(&transfer_configs_)->InternalSwap(CastToBase(&other->transfer_configs_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferConfigsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferRunsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferRunsRequest::kParentFieldNumber;
const int ListTransferRunsRequest::kStatesFieldNumber;
const int ListTransferRunsRequest::kPageTokenFieldNumber;
const int ListTransferRunsRequest::kPageSizeFieldNumber;
const int ListTransferRunsRequest::kRunAttemptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferRunsRequest::ListTransferRunsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferRunsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
}
ListTransferRunsRequest::ListTransferRunsRequest(const ListTransferRunsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      states_(from.states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&run_attempt_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(run_attempt_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
}

void ListTransferRunsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_attempt_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(run_attempt_));
}

ListTransferRunsRequest::~ListTransferRunsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  SharedDtor();
}

void ListTransferRunsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferRunsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferRunsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferRunsRequest& ListTransferRunsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferRunsRequest.base);
  return *internal_default_instance();
}


void ListTransferRunsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_attempt_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(run_attempt_));
  _internal_metadata_.Clear();
}

bool ListTransferRunsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.bigquery.datatransfer.v1.TransferState states = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_states(static_cast< ::google::cloud::bigquery::datatransfer::v1::TransferState >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_states(static_cast< ::google::cloud::bigquery::datatransfer::v1::TransferState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt run_attempt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_run_attempt(static_cast< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest_RunAttempt >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  return false;
#undef DO_
}

void ListTransferRunsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferState states = 2;
  if (this->states_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_states_cached_byte_size_));
  }
  for (int i = 0, n = this->states_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->states(i), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  // .google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt run_attempt = 5;
  if (this->run_attempt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->run_attempt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
}

::google::protobuf::uint8* ListTransferRunsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferState states = 2;
  if (this->states_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _states_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->states_, target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  // .google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt run_attempt = 5;
  if (this->run_attempt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->run_attempt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  return target;
}

size_t ListTransferRunsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferState states = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->states_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->states(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _states_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // .google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest.RunAttempt run_attempt = 5;
  if (this->run_attempt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->run_attempt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferRunsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferRunsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferRunsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
    MergeFrom(*source);
  }
}

void ListTransferRunsRequest::MergeFrom(const ListTransferRunsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.run_attempt() != 0) {
    set_run_attempt(from.run_attempt());
  }
}

void ListTransferRunsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferRunsRequest::CopyFrom(const ListTransferRunsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferRunsRequest::IsInitialized() const {
  return true;
}

void ListTransferRunsRequest::Swap(ListTransferRunsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferRunsRequest::InternalSwap(ListTransferRunsRequest* other) {
  using std::swap;
  states_.InternalSwap(&other->states_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(run_attempt_, other->run_attempt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferRunsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferRunsResponse::InitAsDefaultInstance() {
}
void ListTransferRunsResponse::clear_transfer_runs() {
  transfer_runs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferRunsResponse::kTransferRunsFieldNumber;
const int ListTransferRunsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferRunsResponse::ListTransferRunsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferRunsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
}
ListTransferRunsResponse::ListTransferRunsResponse(const ListTransferRunsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transfer_runs_(from.transfer_runs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
}

void ListTransferRunsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListTransferRunsResponse::~ListTransferRunsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  SharedDtor();
}

void ListTransferRunsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferRunsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferRunsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferRunsResponse& ListTransferRunsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferRunsResponse.base);
  return *internal_default_instance();
}


void ListTransferRunsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transfer_runs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTransferRunsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun transfer_runs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transfer_runs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  return false;
#undef DO_
}

void ListTransferRunsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun transfer_runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_runs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transfer_runs(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
}

::google::protobuf::uint8* ListTransferRunsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun transfer_runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_runs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transfer_runs(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  return target;
}

size_t ListTransferRunsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun transfer_runs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transfer_runs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transfer_runs(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferRunsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferRunsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferRunsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
    MergeFrom(*source);
  }
}

void ListTransferRunsResponse::MergeFrom(const ListTransferRunsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transfer_runs_.MergeFrom(from.transfer_runs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTransferRunsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferRunsResponse::CopyFrom(const ListTransferRunsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferRunsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferRunsResponse::IsInitialized() const {
  return true;
}

void ListTransferRunsResponse::Swap(ListTransferRunsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferRunsResponse::InternalSwap(ListTransferRunsResponse* other) {
  using std::swap;
  CastToBase(&transfer_runs_)->InternalSwap(CastToBase(&other->transfer_runs_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferRunsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferLogsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferLogsRequest::kParentFieldNumber;
const int ListTransferLogsRequest::kPageTokenFieldNumber;
const int ListTransferLogsRequest::kPageSizeFieldNumber;
const int ListTransferLogsRequest::kMessageTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferLogsRequest::ListTransferLogsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferLogsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
}
ListTransferLogsRequest::ListTransferLogsRequest(const ListTransferLogsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      message_types_(from.message_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
}

void ListTransferLogsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListTransferLogsRequest::~ListTransferLogsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  SharedDtor();
}

void ListTransferLogsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferLogsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferLogsRequest& ListTransferLogsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferLogsRequest.base);
  return *internal_default_instance();
}


void ListTransferLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_types_.Clear();
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListTransferLogsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage.MessageSeverity message_types = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_message_types(static_cast< ::google::cloud::bigquery::datatransfer::v1::TransferMessage_MessageSeverity >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_message_types(static_cast< ::google::cloud::bigquery::datatransfer::v1::TransferMessage_MessageSeverity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  return false;
#undef DO_
}

void ListTransferLogsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->page_token(), output);
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->page_size(), output);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage.MessageSeverity message_types = 6;
  if (this->message_types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_message_types_cached_byte_size_));
  }
  for (int i = 0, n = this->message_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->message_types(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
}

::google::protobuf::uint8* ListTransferLogsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->page_token(), target);
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->page_size(), target);
  }

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage.MessageSeverity message_types = 6;
  if (this->message_types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _message_types_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->message_types_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  return target;
}

size_t ListTransferLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage.MessageSeverity message_types = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->message_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->message_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _message_types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 4;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferLogsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferLogsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferLogsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
    MergeFrom(*source);
  }
}

void ListTransferLogsRequest::MergeFrom(const ListTransferLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_types_.MergeFrom(from.message_types_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListTransferLogsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferLogsRequest::CopyFrom(const ListTransferLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferLogsRequest::IsInitialized() const {
  return true;
}

void ListTransferLogsRequest::Swap(ListTransferLogsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferLogsRequest::InternalSwap(ListTransferLogsRequest* other) {
  using std::swap;
  message_types_.InternalSwap(&other->message_types_);
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferLogsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTransferLogsResponse::InitAsDefaultInstance() {
}
void ListTransferLogsResponse::clear_transfer_messages() {
  transfer_messages_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTransferLogsResponse::kTransferMessagesFieldNumber;
const int ListTransferLogsResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTransferLogsResponse::ListTransferLogsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferLogsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
}
ListTransferLogsResponse::ListTransferLogsResponse(const ListTransferLogsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transfer_messages_(from.transfer_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
}

void ListTransferLogsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListTransferLogsResponse::~ListTransferLogsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  SharedDtor();
}

void ListTransferLogsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListTransferLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTransferLogsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTransferLogsResponse& ListTransferLogsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ListTransferLogsResponse.base);
  return *internal_default_instance();
}


void ListTransferLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transfer_messages_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListTransferLogsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage transfer_messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transfer_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  return false;
#undef DO_
}

void ListTransferLogsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage transfer_messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->transfer_messages(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
}

::google::protobuf::uint8* ListTransferLogsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage transfer_messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transfer_messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->transfer_messages(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  return target;
}

size_t ListTransferLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferMessage transfer_messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->transfer_messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transfer_messages(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransferLogsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransferLogsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTransferLogsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
    MergeFrom(*source);
  }
}

void ListTransferLogsResponse::MergeFrom(const ListTransferLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transfer_messages_.MergeFrom(from.transfer_messages_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListTransferLogsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransferLogsResponse::CopyFrom(const ListTransferLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ListTransferLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransferLogsResponse::IsInitialized() const {
  return true;
}

void ListTransferLogsResponse::Swap(ListTransferLogsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTransferLogsResponse::InternalSwap(ListTransferLogsResponse* other) {
  using std::swap;
  CastToBase(&transfer_messages_)->InternalSwap(CastToBase(&other->transfer_messages_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTransferLogsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckValidCredsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckValidCredsRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckValidCredsRequest::CheckValidCredsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CheckValidCredsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
}
CheckValidCredsRequest::CheckValidCredsRequest(const CheckValidCredsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
}

void CheckValidCredsRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckValidCredsRequest::~CheckValidCredsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  SharedDtor();
}

void CheckValidCredsRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckValidCredsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckValidCredsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckValidCredsRequest& CheckValidCredsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CheckValidCredsRequest.base);
  return *internal_default_instance();
}


void CheckValidCredsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CheckValidCredsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  return false;
#undef DO_
}

void CheckValidCredsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
}

::google::protobuf::uint8* CheckValidCredsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  return target;
}

size_t CheckValidCredsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckValidCredsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckValidCredsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckValidCredsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
    MergeFrom(*source);
  }
}

void CheckValidCredsRequest::MergeFrom(const CheckValidCredsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CheckValidCredsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckValidCredsRequest::CopyFrom(const CheckValidCredsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckValidCredsRequest::IsInitialized() const {
  return true;
}

void CheckValidCredsRequest::Swap(CheckValidCredsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckValidCredsRequest::InternalSwap(CheckValidCredsRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckValidCredsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckValidCredsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckValidCredsResponse::kHasValidCredsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckValidCredsResponse::CheckValidCredsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CheckValidCredsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
}
CheckValidCredsResponse::CheckValidCredsResponse(const CheckValidCredsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  has_valid_creds_ = from.has_valid_creds_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
}

void CheckValidCredsResponse::SharedCtor() {
  has_valid_creds_ = false;
}

CheckValidCredsResponse::~CheckValidCredsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  SharedDtor();
}

void CheckValidCredsResponse::SharedDtor() {
}

void CheckValidCredsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckValidCredsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckValidCredsResponse& CheckValidCredsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_CheckValidCredsResponse.base);
  return *internal_default_instance();
}


void CheckValidCredsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  has_valid_creds_ = false;
  _internal_metadata_.Clear();
}

bool CheckValidCredsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool has_valid_creds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_valid_creds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  return false;
#undef DO_
}

void CheckValidCredsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_valid_creds = 1;
  if (this->has_valid_creds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has_valid_creds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
}

::google::protobuf::uint8* CheckValidCredsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_valid_creds = 1;
  if (this->has_valid_creds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has_valid_creds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  return target;
}

size_t CheckValidCredsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool has_valid_creds = 1;
  if (this->has_valid_creds() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckValidCredsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckValidCredsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckValidCredsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
    MergeFrom(*source);
  }
}

void CheckValidCredsResponse::MergeFrom(const CheckValidCredsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valid_creds() != 0) {
    set_has_valid_creds(from.has_valid_creds());
  }
}

void CheckValidCredsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckValidCredsResponse::CopyFrom(const CheckValidCredsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.CheckValidCredsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckValidCredsResponse::IsInitialized() const {
  return true;
}

void CheckValidCredsResponse::Swap(CheckValidCredsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckValidCredsResponse::InternalSwap(CheckValidCredsResponse* other) {
  using std::swap;
  swap(has_valid_creds_, other->has_valid_creds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckValidCredsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleTransferRunsRequest::InitAsDefaultInstance() {
  ::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsRequest_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::bigquery::datatransfer::v1::_ScheduleTransferRunsRequest_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ScheduleTransferRunsRequest::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void ScheduleTransferRunsRequest::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleTransferRunsRequest::kParentFieldNumber;
const int ScheduleTransferRunsRequest::kStartTimeFieldNumber;
const int ScheduleTransferRunsRequest::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleTransferRunsRequest::ScheduleTransferRunsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ScheduleTransferRunsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
}
ScheduleTransferRunsRequest::ScheduleTransferRunsRequest(const ScheduleTransferRunsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
}

void ScheduleTransferRunsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
}

ScheduleTransferRunsRequest::~ScheduleTransferRunsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  SharedDtor();
}

void ScheduleTransferRunsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
}

void ScheduleTransferRunsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScheduleTransferRunsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleTransferRunsRequest& ScheduleTransferRunsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ScheduleTransferRunsRequest.base);
  return *internal_default_instance();
}


void ScheduleTransferRunsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  _internal_metadata_.Clear();
}

bool ScheduleTransferRunsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  return false;
#undef DO_
}

void ScheduleTransferRunsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_start_time(), output);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
}

::google::protobuf::uint8* ScheduleTransferRunsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_start_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_end_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  return target;
}

size_t ScheduleTransferRunsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScheduleTransferRunsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleTransferRunsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleTransferRunsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
    MergeFrom(*source);
  }
}

void ScheduleTransferRunsRequest::MergeFrom(const ScheduleTransferRunsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
}

void ScheduleTransferRunsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleTransferRunsRequest::CopyFrom(const ScheduleTransferRunsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleTransferRunsRequest::IsInitialized() const {
  return true;
}

void ScheduleTransferRunsRequest::Swap(ScheduleTransferRunsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleTransferRunsRequest::InternalSwap(ScheduleTransferRunsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScheduleTransferRunsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScheduleTransferRunsResponse::InitAsDefaultInstance() {
}
void ScheduleTransferRunsResponse::clear_runs() {
  runs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleTransferRunsResponse::kRunsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleTransferRunsResponse::ScheduleTransferRunsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ScheduleTransferRunsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
}
ScheduleTransferRunsResponse::ScheduleTransferRunsResponse(const ScheduleTransferRunsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      runs_(from.runs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
}

void ScheduleTransferRunsResponse::SharedCtor() {
}

ScheduleTransferRunsResponse::~ScheduleTransferRunsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  SharedDtor();
}

void ScheduleTransferRunsResponse::SharedDtor() {
}

void ScheduleTransferRunsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScheduleTransferRunsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScheduleTransferRunsResponse& ScheduleTransferRunsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::scc_info_ScheduleTransferRunsResponse.base);
  return *internal_default_instance();
}


void ScheduleTransferRunsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runs_.Clear();
  _internal_metadata_.Clear();
}

bool ScheduleTransferRunsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_runs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  return false;
#undef DO_
}

void ScheduleTransferRunsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->runs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
}

::google::protobuf::uint8* ScheduleTransferRunsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->runs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->runs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  return target;
}

size_t ScheduleTransferRunsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.bigquery.datatransfer.v1.TransferRun runs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->runs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->runs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScheduleTransferRunsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleTransferRunsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleTransferRunsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
    MergeFrom(*source);
  }
}

void ScheduleTransferRunsResponse::MergeFrom(const ScheduleTransferRunsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  runs_.MergeFrom(from.runs_);
}

void ScheduleTransferRunsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleTransferRunsResponse::CopyFrom(const ScheduleTransferRunsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.bigquery.datatransfer.v1.ScheduleTransferRunsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleTransferRunsResponse::IsInitialized() const {
  return true;
}

void ScheduleTransferRunsResponse::Swap(ScheduleTransferRunsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleTransferRunsResponse::InternalSwap(ScheduleTransferRunsResponse* other) {
  using std::swap;
  CastToBase(&runs_)->InternalSwap(CastToBase(&other->runs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScheduleTransferRunsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fbigquery_2fdatatransfer_2fv1_2fdatatransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace datatransfer
}  // namespace bigquery
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::DataSourceParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::DataSource* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::DataSource >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::DataSource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::GetDataSourceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListDataSourcesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::CreateTransferConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::UpdateTransferConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::GetTransferConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::DeleteTransferConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::GetTransferRunRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::DeleteTransferRunRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferConfigsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferRunsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ListTransferLogsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::CheckValidCredsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse* Arena::CreateMaybeMessage< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::bigquery::datatransfer::v1::ScheduleTransferRunsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
