// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/tasks/v2beta2/target.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto 

namespace protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta2 {
class AppEngineHttpRequest;
class AppEngineHttpRequestDefaultTypeInternal;
extern AppEngineHttpRequestDefaultTypeInternal _AppEngineHttpRequest_default_instance_;
class AppEngineHttpRequest_HeadersEntry_DoNotUse;
class AppEngineHttpRequest_HeadersEntry_DoNotUseDefaultTypeInternal;
extern AppEngineHttpRequest_HeadersEntry_DoNotUseDefaultTypeInternal _AppEngineHttpRequest_HeadersEntry_DoNotUse_default_instance_;
class AppEngineHttpTarget;
class AppEngineHttpTargetDefaultTypeInternal;
extern AppEngineHttpTargetDefaultTypeInternal _AppEngineHttpTarget_default_instance_;
class AppEngineRouting;
class AppEngineRoutingDefaultTypeInternal;
extern AppEngineRoutingDefaultTypeInternal _AppEngineRouting_default_instance_;
class PullMessage;
class PullMessageDefaultTypeInternal;
extern PullMessageDefaultTypeInternal _PullMessage_default_instance_;
class PullTarget;
class PullTargetDefaultTypeInternal;
extern PullTargetDefaultTypeInternal _PullTarget_default_instance_;
}  // namespace v2beta2
}  // namespace tasks
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::tasks::v2beta2::AppEngineHttpRequest* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineHttpRequest>(Arena*);
template<> ::google::cloud::tasks::v2beta2::AppEngineHttpRequest_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineHttpRequest_HeadersEntry_DoNotUse>(Arena*);
template<> ::google::cloud::tasks::v2beta2::AppEngineHttpTarget* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineHttpTarget>(Arena*);
template<> ::google::cloud::tasks::v2beta2::AppEngineRouting* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineRouting>(Arena*);
template<> ::google::cloud::tasks::v2beta2::PullMessage* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::PullMessage>(Arena*);
template<> ::google::cloud::tasks::v2beta2::PullTarget* Arena::CreateMaybeMessage<::google::cloud::tasks::v2beta2::PullTarget>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace tasks {
namespace v2beta2 {

enum HttpMethod {
  HTTP_METHOD_UNSPECIFIED = 0,
  POST = 1,
  GET = 2,
  HEAD = 3,
  PUT = 4,
  DELETE = 5,
  HttpMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HttpMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HttpMethod_IsValid(int value);
const HttpMethod HttpMethod_MIN = HTTP_METHOD_UNSPECIFIED;
const HttpMethod HttpMethod_MAX = DELETE;
const int HttpMethod_ARRAYSIZE = HttpMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* HttpMethod_descriptor();
inline const ::std::string& HttpMethod_Name(HttpMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    HttpMethod_descriptor(), value);
}
inline bool HttpMethod_Parse(
    const ::std::string& name, HttpMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HttpMethod>(
    HttpMethod_descriptor(), name, value);
}
// ===================================================================

class PullTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta2.PullTarget) */ {
 public:
  PullTarget();
  virtual ~PullTarget();

  PullTarget(const PullTarget& from);

  inline PullTarget& operator=(const PullTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullTarget(PullTarget&& from) noexcept
    : PullTarget() {
    *this = ::std::move(from);
  }

  inline PullTarget& operator=(PullTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullTarget* internal_default_instance() {
    return reinterpret_cast<const PullTarget*>(
               &_PullTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PullTarget* other);
  friend void swap(PullTarget& a, PullTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullTarget* New() const final {
    return CreateMaybeMessage<PullTarget>(NULL);
  }

  PullTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullTarget& from);
  void MergeFrom(const PullTarget& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta2.PullTarget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta2.PullMessage) */ {
 public:
  PullMessage();
  virtual ~PullMessage();

  PullMessage(const PullMessage& from);

  inline PullMessage& operator=(const PullMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullMessage(PullMessage&& from) noexcept
    : PullMessage() {
    *this = ::std::move(from);
  }

  inline PullMessage& operator=(PullMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullMessage* internal_default_instance() {
    return reinterpret_cast<const PullMessage*>(
               &_PullMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PullMessage* other);
  friend void swap(PullMessage& a, PullMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullMessage* New() const final {
    return CreateMaybeMessage<PullMessage>(NULL);
  }

  PullMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullMessage& from);
  void MergeFrom(const PullMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // string tag = 2;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta2.PullMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppEngineHttpTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta2.AppEngineHttpTarget) */ {
 public:
  AppEngineHttpTarget();
  virtual ~AppEngineHttpTarget();

  AppEngineHttpTarget(const AppEngineHttpTarget& from);

  inline AppEngineHttpTarget& operator=(const AppEngineHttpTarget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineHttpTarget(AppEngineHttpTarget&& from) noexcept
    : AppEngineHttpTarget() {
    *this = ::std::move(from);
  }

  inline AppEngineHttpTarget& operator=(AppEngineHttpTarget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineHttpTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineHttpTarget* internal_default_instance() {
    return reinterpret_cast<const AppEngineHttpTarget*>(
               &_AppEngineHttpTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AppEngineHttpTarget* other);
  friend void swap(AppEngineHttpTarget& a, AppEngineHttpTarget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineHttpTarget* New() const final {
    return CreateMaybeMessage<AppEngineHttpTarget>(NULL);
  }

  AppEngineHttpTarget* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineHttpTarget>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineHttpTarget& from);
  void MergeFrom(const AppEngineHttpTarget& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineHttpTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.tasks.v2beta2.AppEngineRouting app_engine_routing_override = 1;
  bool has_app_engine_routing_override() const;
  void clear_app_engine_routing_override();
  static const int kAppEngineRoutingOverrideFieldNumber = 1;
  private:
  const ::google::cloud::tasks::v2beta2::AppEngineRouting& _internal_app_engine_routing_override() const;
  public:
  const ::google::cloud::tasks::v2beta2::AppEngineRouting& app_engine_routing_override() const;
  ::google::cloud::tasks::v2beta2::AppEngineRouting* release_app_engine_routing_override();
  ::google::cloud::tasks::v2beta2::AppEngineRouting* mutable_app_engine_routing_override();
  void set_allocated_app_engine_routing_override(::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing_override);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta2.AppEngineHttpTarget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing_override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppEngineHttpRequest_HeadersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AppEngineHttpRequest_HeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AppEngineHttpRequest_HeadersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  AppEngineHttpRequest_HeadersEntry_DoNotUse();
  AppEngineHttpRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AppEngineHttpRequest_HeadersEntry_DoNotUse& other);
  static const AppEngineHttpRequest_HeadersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AppEngineHttpRequest_HeadersEntry_DoNotUse*>(&_AppEngineHttpRequest_HeadersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AppEngineHttpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta2.AppEngineHttpRequest) */ {
 public:
  AppEngineHttpRequest();
  virtual ~AppEngineHttpRequest();

  AppEngineHttpRequest(const AppEngineHttpRequest& from);

  inline AppEngineHttpRequest& operator=(const AppEngineHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineHttpRequest(AppEngineHttpRequest&& from) noexcept
    : AppEngineHttpRequest() {
    *this = ::std::move(from);
  }

  inline AppEngineHttpRequest& operator=(AppEngineHttpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineHttpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineHttpRequest* internal_default_instance() {
    return reinterpret_cast<const AppEngineHttpRequest*>(
               &_AppEngineHttpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AppEngineHttpRequest* other);
  friend void swap(AppEngineHttpRequest& a, AppEngineHttpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineHttpRequest* New() const final {
    return CreateMaybeMessage<AppEngineHttpRequest>(NULL);
  }

  AppEngineHttpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineHttpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineHttpRequest& from);
  void MergeFrom(const AppEngineHttpRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineHttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> headers = 4;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_headers();

  // string relative_url = 3;
  void clear_relative_url();
  static const int kRelativeUrlFieldNumber = 3;
  const ::std::string& relative_url() const;
  void set_relative_url(const ::std::string& value);
  #if LANG_CXX11
  void set_relative_url(::std::string&& value);
  #endif
  void set_relative_url(const char* value);
  void set_relative_url(const char* value, size_t size);
  ::std::string* mutable_relative_url();
  ::std::string* release_relative_url();
  void set_allocated_relative_url(::std::string* relative_url);

  // bytes payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // .google.cloud.tasks.v2beta2.AppEngineRouting app_engine_routing = 2;
  bool has_app_engine_routing() const;
  void clear_app_engine_routing();
  static const int kAppEngineRoutingFieldNumber = 2;
  private:
  const ::google::cloud::tasks::v2beta2::AppEngineRouting& _internal_app_engine_routing() const;
  public:
  const ::google::cloud::tasks::v2beta2::AppEngineRouting& app_engine_routing() const;
  ::google::cloud::tasks::v2beta2::AppEngineRouting* release_app_engine_routing();
  ::google::cloud::tasks::v2beta2::AppEngineRouting* mutable_app_engine_routing();
  void set_allocated_app_engine_routing(::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing);

  // .google.cloud.tasks.v2beta2.HttpMethod http_method = 1;
  void clear_http_method();
  static const int kHttpMethodFieldNumber = 1;
  ::google::cloud::tasks::v2beta2::HttpMethod http_method() const;
  void set_http_method(::google::cloud::tasks::v2beta2::HttpMethod value);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta2.AppEngineHttpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AppEngineHttpRequest_HeadersEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > headers_;
  ::google::protobuf::internal::ArenaStringPtr relative_url_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing_;
  int http_method_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppEngineRouting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.tasks.v2beta2.AppEngineRouting) */ {
 public:
  AppEngineRouting();
  virtual ~AppEngineRouting();

  AppEngineRouting(const AppEngineRouting& from);

  inline AppEngineRouting& operator=(const AppEngineRouting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppEngineRouting(AppEngineRouting&& from) noexcept
    : AppEngineRouting() {
    *this = ::std::move(from);
  }

  inline AppEngineRouting& operator=(AppEngineRouting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppEngineRouting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppEngineRouting* internal_default_instance() {
    return reinterpret_cast<const AppEngineRouting*>(
               &_AppEngineRouting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AppEngineRouting* other);
  friend void swap(AppEngineRouting& a, AppEngineRouting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppEngineRouting* New() const final {
    return CreateMaybeMessage<AppEngineRouting>(NULL);
  }

  AppEngineRouting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppEngineRouting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppEngineRouting& from);
  void MergeFrom(const AppEngineRouting& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppEngineRouting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string instance = 3;
  void clear_instance();
  static const int kInstanceFieldNumber = 3;
  const ::std::string& instance() const;
  void set_instance(const ::std::string& value);
  #if LANG_CXX11
  void set_instance(::std::string&& value);
  #endif
  void set_instance(const char* value);
  void set_instance(const char* value, size_t size);
  ::std::string* mutable_instance();
  ::std::string* release_instance();
  void set_allocated_instance(::std::string* instance);

  // string host = 4;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // @@protoc_insertion_point(class_scope:google.cloud.tasks.v2beta2.AppEngineRouting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr instance_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PullTarget

// -------------------------------------------------------------------

// PullMessage

// bytes payload = 1;
inline void PullMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullMessage::payload() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.PullMessage.payload)
  return payload_.GetNoArena();
}
inline void PullMessage::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.PullMessage.payload)
}
#if LANG_CXX11
inline void PullMessage::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.PullMessage.payload)
}
#endif
inline void PullMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.PullMessage.payload)
}
inline void PullMessage::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.PullMessage.payload)
}
inline ::std::string* PullMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.PullMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullMessage::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.PullMessage.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.PullMessage.payload)
}

// string tag = 2;
inline void PullMessage::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullMessage::tag() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.PullMessage.tag)
  return tag_.GetNoArena();
}
inline void PullMessage::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.PullMessage.tag)
}
#if LANG_CXX11
inline void PullMessage::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.PullMessage.tag)
}
#endif
inline void PullMessage::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.PullMessage.tag)
}
inline void PullMessage::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.PullMessage.tag)
}
inline ::std::string* PullMessage::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.PullMessage.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullMessage::release_tag() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.PullMessage.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullMessage::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.PullMessage.tag)
}

// -------------------------------------------------------------------

// AppEngineHttpTarget

// .google.cloud.tasks.v2beta2.AppEngineRouting app_engine_routing_override = 1;
inline bool AppEngineHttpTarget::has_app_engine_routing_override() const {
  return this != internal_default_instance() && app_engine_routing_override_ != NULL;
}
inline void AppEngineHttpTarget::clear_app_engine_routing_override() {
  if (GetArenaNoVirtual() == NULL && app_engine_routing_override_ != NULL) {
    delete app_engine_routing_override_;
  }
  app_engine_routing_override_ = NULL;
}
inline const ::google::cloud::tasks::v2beta2::AppEngineRouting& AppEngineHttpTarget::_internal_app_engine_routing_override() const {
  return *app_engine_routing_override_;
}
inline const ::google::cloud::tasks::v2beta2::AppEngineRouting& AppEngineHttpTarget::app_engine_routing_override() const {
  const ::google::cloud::tasks::v2beta2::AppEngineRouting* p = app_engine_routing_override_;
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::tasks::v2beta2::AppEngineRouting*>(
      &::google::cloud::tasks::v2beta2::_AppEngineRouting_default_instance_);
}
inline ::google::cloud::tasks::v2beta2::AppEngineRouting* AppEngineHttpTarget::release_app_engine_routing_override() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override)
  
  ::google::cloud::tasks::v2beta2::AppEngineRouting* temp = app_engine_routing_override_;
  app_engine_routing_override_ = NULL;
  return temp;
}
inline ::google::cloud::tasks::v2beta2::AppEngineRouting* AppEngineHttpTarget::mutable_app_engine_routing_override() {
  
  if (app_engine_routing_override_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineRouting>(GetArenaNoVirtual());
    app_engine_routing_override_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override)
  return app_engine_routing_override_;
}
inline void AppEngineHttpTarget::set_allocated_app_engine_routing_override(::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing_override) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete app_engine_routing_override_;
  }
  if (app_engine_routing_override) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_engine_routing_override = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_engine_routing_override, submessage_arena);
    }
    
  } else {
    
  }
  app_engine_routing_override_ = app_engine_routing_override;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineHttpTarget.app_engine_routing_override)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AppEngineHttpRequest

// .google.cloud.tasks.v2beta2.HttpMethod http_method = 1;
inline void AppEngineHttpRequest::clear_http_method() {
  http_method_ = 0;
}
inline ::google::cloud::tasks::v2beta2::HttpMethod AppEngineHttpRequest::http_method() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineHttpRequest.http_method)
  return static_cast< ::google::cloud::tasks::v2beta2::HttpMethod >(http_method_);
}
inline void AppEngineHttpRequest::set_http_method(::google::cloud::tasks::v2beta2::HttpMethod value) {
  
  http_method_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineHttpRequest.http_method)
}

// .google.cloud.tasks.v2beta2.AppEngineRouting app_engine_routing = 2;
inline bool AppEngineHttpRequest::has_app_engine_routing() const {
  return this != internal_default_instance() && app_engine_routing_ != NULL;
}
inline void AppEngineHttpRequest::clear_app_engine_routing() {
  if (GetArenaNoVirtual() == NULL && app_engine_routing_ != NULL) {
    delete app_engine_routing_;
  }
  app_engine_routing_ = NULL;
}
inline const ::google::cloud::tasks::v2beta2::AppEngineRouting& AppEngineHttpRequest::_internal_app_engine_routing() const {
  return *app_engine_routing_;
}
inline const ::google::cloud::tasks::v2beta2::AppEngineRouting& AppEngineHttpRequest::app_engine_routing() const {
  const ::google::cloud::tasks::v2beta2::AppEngineRouting* p = app_engine_routing_;
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::tasks::v2beta2::AppEngineRouting*>(
      &::google::cloud::tasks::v2beta2::_AppEngineRouting_default_instance_);
}
inline ::google::cloud::tasks::v2beta2::AppEngineRouting* AppEngineHttpRequest::release_app_engine_routing() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing)
  
  ::google::cloud::tasks::v2beta2::AppEngineRouting* temp = app_engine_routing_;
  app_engine_routing_ = NULL;
  return temp;
}
inline ::google::cloud::tasks::v2beta2::AppEngineRouting* AppEngineHttpRequest::mutable_app_engine_routing() {
  
  if (app_engine_routing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::tasks::v2beta2::AppEngineRouting>(GetArenaNoVirtual());
    app_engine_routing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing)
  return app_engine_routing_;
}
inline void AppEngineHttpRequest::set_allocated_app_engine_routing(::google::cloud::tasks::v2beta2::AppEngineRouting* app_engine_routing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete app_engine_routing_;
  }
  if (app_engine_routing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_engine_routing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_engine_routing, submessage_arena);
    }
    
  } else {
    
  }
  app_engine_routing_ = app_engine_routing;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineHttpRequest.app_engine_routing)
}

// string relative_url = 3;
inline void AppEngineHttpRequest::clear_relative_url() {
  relative_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineHttpRequest::relative_url() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
  return relative_url_.GetNoArena();
}
inline void AppEngineHttpRequest::set_relative_url(const ::std::string& value) {
  
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
}
#if LANG_CXX11
inline void AppEngineHttpRequest::set_relative_url(::std::string&& value) {
  
  relative_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
}
#endif
inline void AppEngineHttpRequest::set_relative_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
}
inline void AppEngineHttpRequest::set_relative_url(const char* value, size_t size) {
  
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
}
inline ::std::string* AppEngineHttpRequest::mutable_relative_url() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
  return relative_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineHttpRequest::release_relative_url() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
  
  return relative_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineHttpRequest::set_allocated_relative_url(::std::string* relative_url) {
  if (relative_url != NULL) {
    
  } else {
    
  }
  relative_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relative_url);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineHttpRequest.relative_url)
}

// map<string, string> headers = 4;
inline int AppEngineHttpRequest::headers_size() const {
  return headers_.size();
}
inline void AppEngineHttpRequest::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AppEngineHttpRequest::headers() const {
  // @@protoc_insertion_point(field_map:google.cloud.tasks.v2beta2.AppEngineHttpRequest.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AppEngineHttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.tasks.v2beta2.AppEngineHttpRequest.headers)
  return headers_.MutableMap();
}

// bytes payload = 5;
inline void AppEngineHttpRequest::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineHttpRequest::payload() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
  return payload_.GetNoArena();
}
inline void AppEngineHttpRequest::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
}
#if LANG_CXX11
inline void AppEngineHttpRequest::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
}
#endif
inline void AppEngineHttpRequest::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
}
inline void AppEngineHttpRequest::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
}
inline ::std::string* AppEngineHttpRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineHttpRequest::release_payload() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineHttpRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineHttpRequest.payload)
}

// -------------------------------------------------------------------

// AppEngineRouting

// string service = 1;
inline void AppEngineRouting::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::service() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineRouting.service)
  return service_.GetNoArena();
}
inline void AppEngineRouting::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineRouting.service)
}
#if LANG_CXX11
inline void AppEngineRouting::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineRouting.service)
}
#endif
inline void AppEngineRouting::set_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineRouting.service)
}
inline void AppEngineRouting::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineRouting.service)
}
inline ::std::string* AppEngineRouting::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineRouting.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_service() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineRouting.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineRouting.service)
}

// string version = 2;
inline void AppEngineRouting::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineRouting.version)
  return version_.GetNoArena();
}
inline void AppEngineRouting::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineRouting.version)
}
#if LANG_CXX11
inline void AppEngineRouting::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineRouting.version)
}
#endif
inline void AppEngineRouting::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineRouting.version)
}
inline void AppEngineRouting::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineRouting.version)
}
inline ::std::string* AppEngineRouting::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineRouting.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_version() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineRouting.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineRouting.version)
}

// string instance = 3;
inline void AppEngineRouting::clear_instance() {
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::instance() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
  return instance_.GetNoArena();
}
inline void AppEngineRouting::set_instance(const ::std::string& value) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
}
#if LANG_CXX11
inline void AppEngineRouting::set_instance(::std::string&& value) {
  
  instance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
}
#endif
inline void AppEngineRouting::set_instance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
}
inline void AppEngineRouting::set_instance(const char* value, size_t size) {
  
  instance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
}
inline ::std::string* AppEngineRouting::mutable_instance() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
  return instance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_instance() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
  
  return instance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_instance(::std::string* instance) {
  if (instance != NULL) {
    
  } else {
    
  }
  instance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineRouting.instance)
}

// string host = 4;
inline void AppEngineRouting::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppEngineRouting::host() const {
  // @@protoc_insertion_point(field_get:google.cloud.tasks.v2beta2.AppEngineRouting.host)
  return host_.GetNoArena();
}
inline void AppEngineRouting::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.tasks.v2beta2.AppEngineRouting.host)
}
#if LANG_CXX11
inline void AppEngineRouting::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.tasks.v2beta2.AppEngineRouting.host)
}
#endif
inline void AppEngineRouting::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.tasks.v2beta2.AppEngineRouting.host)
}
inline void AppEngineRouting::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.tasks.v2beta2.AppEngineRouting.host)
}
inline ::std::string* AppEngineRouting::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.tasks.v2beta2.AppEngineRouting.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppEngineRouting::release_host() {
  // @@protoc_insertion_point(field_release:google.cloud.tasks.v2beta2.AppEngineRouting.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppEngineRouting::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.tasks.v2beta2.AppEngineRouting.host)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2beta2
}  // namespace tasks
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::tasks::v2beta2::HttpMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::tasks::v2beta2::HttpMethod>() {
  return ::google::cloud::tasks::v2beta2::HttpMethod_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2ftasks_2fv2beta2_2ftarget_2eproto
