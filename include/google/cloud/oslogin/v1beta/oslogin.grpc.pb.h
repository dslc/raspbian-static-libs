// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/oslogin/v1beta/oslogin.proto
// Original file comments:
// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2foslogin_2fv1beta_2foslogin_2eproto__INCLUDED
#define GRPC_google_2fcloud_2foslogin_2fv1beta_2foslogin_2eproto__INCLUDED

#include "google/cloud/oslogin/v1beta/oslogin.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace oslogin {
namespace v1beta {

// Cloud OS Login API
//
// The Cloud OS Login API allows you to manage users and their associated SSH
// public keys for logging into virtual machines on Google Cloud Platform.
class OsLoginService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.oslogin.v1beta.OsLoginService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Deletes a POSIX account.
    virtual ::grpc::Status DeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeletePosixAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeletePosixAccountRaw(context, request, cq));
    }
    // Deletes an SSH public key.
    virtual ::grpc::Status DeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteSshPublicKeyRaw(context, request, cq));
    }
    // Retrieves the profile information used for logging in to a virtual machine
    // on Google Compute Engine.
    virtual ::grpc::Status GetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::google::cloud::oslogin::v1beta::LoginProfile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>> AsyncGetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>>(AsyncGetLoginProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>> PrepareAsyncGetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>>(PrepareAsyncGetLoginProfileRaw(context, request, cq));
    }
    // Retrieves an SSH public key.
    virtual ::grpc::Status GetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::google::cloud::oslogin::common::SshPublicKey* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>> AsyncGetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>>(AsyncGetSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>> PrepareAsyncGetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>>(PrepareAsyncGetSshPublicKeyRaw(context, request, cq));
    }
    // Adds an SSH public key and returns the profile information. Default POSIX
    // account information is set when no username and UID exist as part of the
    // login profile.
    virtual ::grpc::Status ImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>> AsyncImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>>(AsyncImportSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>> PrepareAsyncImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>>(PrepareAsyncImportSshPublicKeyRaw(context, request, cq));
    }
    // Updates an SSH public key and returns the profile information. This method
    // supports patch semantics.
    virtual ::grpc::Status UpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::google::cloud::oslogin::common::SshPublicKey* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>> AsyncUpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>>(AsyncUpdateSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>> PrepareAsyncUpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>>(PrepareAsyncUpdateSshPublicKeyRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeletePosixAccountRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeletePosixAccountRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>* AsyncGetLoginProfileRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::LoginProfile>* PrepareAsyncGetLoginProfileRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>* AsyncGetSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>* PrepareAsyncGetSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* AsyncImportSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* PrepareAsyncImportSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>* AsyncUpdateSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::oslogin::common::SshPublicKey>* PrepareAsyncUpdateSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status DeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeletePosixAccountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeletePosixAccount(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeletePosixAccountRaw(context, request, cq));
    }
    ::grpc::Status DeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteSshPublicKeyRaw(context, request, cq));
    }
    ::grpc::Status GetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::google::cloud::oslogin::v1beta::LoginProfile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>> AsyncGetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>>(AsyncGetLoginProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>> PrepareAsyncGetLoginProfile(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>>(PrepareAsyncGetLoginProfileRaw(context, request, cq));
    }
    ::grpc::Status GetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::google::cloud::oslogin::common::SshPublicKey* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>> AsyncGetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>>(AsyncGetSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>> PrepareAsyncGetSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>>(PrepareAsyncGetSshPublicKeyRaw(context, request, cq));
    }
    ::grpc::Status ImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>> AsyncImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>>(AsyncImportSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>> PrepareAsyncImportSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>>(PrepareAsyncImportSshPublicKeyRaw(context, request, cq));
    }
    ::grpc::Status UpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::google::cloud::oslogin::common::SshPublicKey* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>> AsyncUpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>>(AsyncUpdateSshPublicKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>> PrepareAsyncUpdateSshPublicKey(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>>(PrepareAsyncUpdateSshPublicKeyRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeletePosixAccountRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeletePosixAccountRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>* AsyncGetLoginProfileRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::LoginProfile>* PrepareAsyncGetLoginProfileRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>* AsyncGetSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>* PrepareAsyncGetSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* AsyncImportSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* PrepareAsyncImportSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>* AsyncUpdateSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::oslogin::common::SshPublicKey>* PrepareAsyncUpdateSshPublicKeyRaw(::grpc::ClientContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePosixAccount_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSshPublicKey_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLoginProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSshPublicKey_;
    const ::grpc::internal::RpcMethod rpcmethod_ImportSshPublicKey_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSshPublicKey_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Deletes a POSIX account.
    virtual ::grpc::Status DeletePosixAccount(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest* request, ::google::protobuf::Empty* response);
    // Deletes an SSH public key.
    virtual ::grpc::Status DeleteSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest* request, ::google::protobuf::Empty* response);
    // Retrieves the profile information used for logging in to a virtual machine
    // on Google Compute Engine.
    virtual ::grpc::Status GetLoginProfile(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest* request, ::google::cloud::oslogin::v1beta::LoginProfile* response);
    // Retrieves an SSH public key.
    virtual ::grpc::Status GetSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response);
    // Adds an SSH public key and returns the profile information. Default POSIX
    // account information is set when no username and UID exist as part of the
    // login profile.
    virtual ::grpc::Status ImportSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest* request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response);
    // Updates an SSH public key and returns the profile information. This method
    // supports patch semantics.
    virtual ::grpc::Status UpdateSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePosixAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeletePosixAccount() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_DeletePosixAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePosixAccount(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePosixAccount(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteSshPublicKey() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSshPublicKey(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLoginProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetLoginProfile() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetLoginProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLoginProfile(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest* request, ::google::cloud::oslogin::v1beta::LoginProfile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLoginProfile(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::GetLoginProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::oslogin::v1beta::LoginProfile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetSshPublicKey() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSshPublicKey(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::oslogin::common::SshPublicKey>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ImportSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ImportSshPublicKey() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ImportSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest* request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportSshPublicKey(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateSshPublicKey() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UpdateSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSshPublicKey(::grpc::ServerContext* context, ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::oslogin::common::SshPublicKey>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_DeletePosixAccount<WithAsyncMethod_DeleteSshPublicKey<WithAsyncMethod_GetLoginProfile<WithAsyncMethod_GetSshPublicKey<WithAsyncMethod_ImportSshPublicKey<WithAsyncMethod_UpdateSshPublicKey<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_DeletePosixAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeletePosixAccount() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_DeletePosixAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePosixAccount(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteSshPublicKey() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLoginProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetLoginProfile() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetLoginProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLoginProfile(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest* request, ::google::cloud::oslogin::v1beta::LoginProfile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetSshPublicKey() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ImportSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ImportSshPublicKey() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ImportSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest* request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateSshPublicKey() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UpdateSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePosixAccount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeletePosixAccount() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeletePosixAccount<BaseClass>::StreamedDeletePosixAccount, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeletePosixAccount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePosixAccount(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePosixAccount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::DeletePosixAccountRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteSshPublicKey() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteSshPublicKey<BaseClass>::StreamedDeleteSshPublicKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSshPublicKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::DeleteSshPublicKeyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLoginProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetLoginProfile() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::GetLoginProfileRequest, ::google::cloud::oslogin::v1beta::LoginProfile>(std::bind(&WithStreamedUnaryMethod_GetLoginProfile<BaseClass>::StreamedGetLoginProfile, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetLoginProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLoginProfile(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetLoginProfileRequest* request, ::google::cloud::oslogin::v1beta::LoginProfile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLoginProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::GetLoginProfileRequest,::google::cloud::oslogin::v1beta::LoginProfile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetSshPublicKey() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest, ::google::cloud::oslogin::common::SshPublicKey>(std::bind(&WithStreamedUnaryMethod_GetSshPublicKey<BaseClass>::StreamedGetSshPublicKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSshPublicKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::GetSshPublicKeyRequest,::google::cloud::oslogin::common::SshPublicKey>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ImportSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ImportSshPublicKey() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>(std::bind(&WithStreamedUnaryMethod_ImportSshPublicKey<BaseClass>::StreamedImportSshPublicKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ImportSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ImportSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest* request, ::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImportSshPublicKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::ImportSshPublicKeyRequest,::google::cloud::oslogin::v1beta::ImportSshPublicKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSshPublicKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateSshPublicKey() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest, ::google::cloud::oslogin::common::SshPublicKey>(std::bind(&WithStreamedUnaryMethod_UpdateSshPublicKey<BaseClass>::StreamedUpdateSshPublicKey, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateSshPublicKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSshPublicKey(::grpc::ServerContext* context, const ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest* request, ::google::cloud::oslogin::common::SshPublicKey* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSshPublicKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::oslogin::v1beta::UpdateSshPublicKeyRequest,::google::cloud::oslogin::common::SshPublicKey>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_DeletePosixAccount<WithStreamedUnaryMethod_DeleteSshPublicKey<WithStreamedUnaryMethod_GetLoginProfile<WithStreamedUnaryMethod_GetSshPublicKey<WithStreamedUnaryMethod_ImportSshPublicKey<WithStreamedUnaryMethod_UpdateSshPublicKey<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_DeletePosixAccount<WithStreamedUnaryMethod_DeleteSshPublicKey<WithStreamedUnaryMethod_GetLoginProfile<WithStreamedUnaryMethod_GetSshPublicKey<WithStreamedUnaryMethod_ImportSshPublicKey<WithStreamedUnaryMethod_UpdateSshPublicKey<Service > > > > > > StreamedService;
};

}  // namespace v1beta
}  // namespace oslogin
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2foslogin_2fv1beta_2foslogin_2eproto__INCLUDED
