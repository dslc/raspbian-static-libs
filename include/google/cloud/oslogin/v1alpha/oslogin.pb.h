// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oslogin/v1alpha/oslogin.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/oslogin/common/common.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto 

namespace protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto
namespace google {
namespace cloud {
namespace oslogin {
namespace v1alpha {
class DeletePosixAccountRequest;
class DeletePosixAccountRequestDefaultTypeInternal;
extern DeletePosixAccountRequestDefaultTypeInternal _DeletePosixAccountRequest_default_instance_;
class DeleteSshPublicKeyRequest;
class DeleteSshPublicKeyRequestDefaultTypeInternal;
extern DeleteSshPublicKeyRequestDefaultTypeInternal _DeleteSshPublicKeyRequest_default_instance_;
class GetLoginProfileRequest;
class GetLoginProfileRequestDefaultTypeInternal;
extern GetLoginProfileRequestDefaultTypeInternal _GetLoginProfileRequest_default_instance_;
class GetSshPublicKeyRequest;
class GetSshPublicKeyRequestDefaultTypeInternal;
extern GetSshPublicKeyRequestDefaultTypeInternal _GetSshPublicKeyRequest_default_instance_;
class ImportSshPublicKeyRequest;
class ImportSshPublicKeyRequestDefaultTypeInternal;
extern ImportSshPublicKeyRequestDefaultTypeInternal _ImportSshPublicKeyRequest_default_instance_;
class ImportSshPublicKeyResponse;
class ImportSshPublicKeyResponseDefaultTypeInternal;
extern ImportSshPublicKeyResponseDefaultTypeInternal _ImportSshPublicKeyResponse_default_instance_;
class LoginProfile;
class LoginProfileDefaultTypeInternal;
extern LoginProfileDefaultTypeInternal _LoginProfile_default_instance_;
class LoginProfile_SshPublicKeysEntry_DoNotUse;
class LoginProfile_SshPublicKeysEntry_DoNotUseDefaultTypeInternal;
extern LoginProfile_SshPublicKeysEntry_DoNotUseDefaultTypeInternal _LoginProfile_SshPublicKeysEntry_DoNotUse_default_instance_;
class UpdateSshPublicKeyRequest;
class UpdateSshPublicKeyRequestDefaultTypeInternal;
extern UpdateSshPublicKeyRequestDefaultTypeInternal _UpdateSshPublicKeyRequest_default_instance_;
}  // namespace v1alpha
}  // namespace oslogin
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::oslogin::v1alpha::DeletePosixAccountRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::DeletePosixAccountRequest>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::DeleteSshPublicKeyRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::DeleteSshPublicKeyRequest>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::GetLoginProfileRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::GetLoginProfileRequest>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::GetSshPublicKeyRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::GetSshPublicKeyRequest>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::ImportSshPublicKeyRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::ImportSshPublicKeyRequest>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::ImportSshPublicKeyResponse* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::ImportSshPublicKeyResponse>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::LoginProfile* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::LoginProfile>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::LoginProfile_SshPublicKeysEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::LoginProfile_SshPublicKeysEntry_DoNotUse>(Arena*);
template<> ::google::cloud::oslogin::v1alpha::UpdateSshPublicKeyRequest* Arena::CreateMaybeMessage<::google::cloud::oslogin::v1alpha::UpdateSshPublicKeyRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace oslogin {
namespace v1alpha {

// ===================================================================

class LoginProfile_SshPublicKeysEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<LoginProfile_SshPublicKeysEntry_DoNotUse, 
    ::std::string, ::google::cloud::oslogin::common::SshPublicKey,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<LoginProfile_SshPublicKeysEntry_DoNotUse, 
    ::std::string, ::google::cloud::oslogin::common::SshPublicKey,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LoginProfile_SshPublicKeysEntry_DoNotUse();
  LoginProfile_SshPublicKeysEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const LoginProfile_SshPublicKeysEntry_DoNotUse& other);
  static const LoginProfile_SshPublicKeysEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LoginProfile_SshPublicKeysEntry_DoNotUse*>(&_LoginProfile_SshPublicKeysEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LoginProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.LoginProfile) */ {
 public:
  LoginProfile();
  virtual ~LoginProfile();

  LoginProfile(const LoginProfile& from);

  inline LoginProfile& operator=(const LoginProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginProfile(LoginProfile&& from) noexcept
    : LoginProfile() {
    *this = ::std::move(from);
  }

  inline LoginProfile& operator=(LoginProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginProfile* internal_default_instance() {
    return reinterpret_cast<const LoginProfile*>(
               &_LoginProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginProfile* other);
  friend void swap(LoginProfile& a, LoginProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginProfile* New() const final {
    return CreateMaybeMessage<LoginProfile>(NULL);
  }

  LoginProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginProfile& from);
  void MergeFrom(const LoginProfile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .google.cloud.oslogin.common.PosixAccount posix_accounts = 2;
  int posix_accounts_size() const;
  void clear_posix_accounts();
  static const int kPosixAccountsFieldNumber = 2;
  ::google::cloud::oslogin::common::PosixAccount* mutable_posix_accounts(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::oslogin::common::PosixAccount >*
      mutable_posix_accounts();
  const ::google::cloud::oslogin::common::PosixAccount& posix_accounts(int index) const;
  ::google::cloud::oslogin::common::PosixAccount* add_posix_accounts();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::oslogin::common::PosixAccount >&
      posix_accounts() const;

  // map<string, .google.cloud.oslogin.common.SshPublicKey> ssh_public_keys = 3;
  int ssh_public_keys_size() const;
  void clear_ssh_public_keys();
  static const int kSshPublicKeysFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::cloud::oslogin::common::SshPublicKey >&
      ssh_public_keys() const;
  ::google::protobuf::Map< ::std::string, ::google::cloud::oslogin::common::SshPublicKey >*
      mutable_ssh_public_keys();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bool suspended = 4;
  void clear_suspended();
  static const int kSuspendedFieldNumber = 4;
  bool suspended() const;
  void set_suspended(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.LoginProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::oslogin::common::PosixAccount > posix_accounts_;
  ::google::protobuf::internal::MapField<
      LoginProfile_SshPublicKeysEntry_DoNotUse,
      ::std::string, ::google::cloud::oslogin::common::SshPublicKey,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ssh_public_keys_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool suspended_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePosixAccountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest) */ {
 public:
  DeletePosixAccountRequest();
  virtual ~DeletePosixAccountRequest();

  DeletePosixAccountRequest(const DeletePosixAccountRequest& from);

  inline DeletePosixAccountRequest& operator=(const DeletePosixAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePosixAccountRequest(DeletePosixAccountRequest&& from) noexcept
    : DeletePosixAccountRequest() {
    *this = ::std::move(from);
  }

  inline DeletePosixAccountRequest& operator=(DeletePosixAccountRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePosixAccountRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePosixAccountRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePosixAccountRequest*>(
               &_DeletePosixAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DeletePosixAccountRequest* other);
  friend void swap(DeletePosixAccountRequest& a, DeletePosixAccountRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePosixAccountRequest* New() const final {
    return CreateMaybeMessage<DeletePosixAccountRequest>(NULL);
  }

  DeletePosixAccountRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePosixAccountRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePosixAccountRequest& from);
  void MergeFrom(const DeletePosixAccountRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePosixAccountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteSshPublicKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest) */ {
 public:
  DeleteSshPublicKeyRequest();
  virtual ~DeleteSshPublicKeyRequest();

  DeleteSshPublicKeyRequest(const DeleteSshPublicKeyRequest& from);

  inline DeleteSshPublicKeyRequest& operator=(const DeleteSshPublicKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteSshPublicKeyRequest(DeleteSshPublicKeyRequest&& from) noexcept
    : DeleteSshPublicKeyRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSshPublicKeyRequest& operator=(DeleteSshPublicKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSshPublicKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSshPublicKeyRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSshPublicKeyRequest*>(
               &_DeleteSshPublicKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DeleteSshPublicKeyRequest* other);
  friend void swap(DeleteSshPublicKeyRequest& a, DeleteSshPublicKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteSshPublicKeyRequest* New() const final {
    return CreateMaybeMessage<DeleteSshPublicKeyRequest>(NULL);
  }

  DeleteSshPublicKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSshPublicKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteSshPublicKeyRequest& from);
  void MergeFrom(const DeleteSshPublicKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSshPublicKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLoginProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.GetLoginProfileRequest) */ {
 public:
  GetLoginProfileRequest();
  virtual ~GetLoginProfileRequest();

  GetLoginProfileRequest(const GetLoginProfileRequest& from);

  inline GetLoginProfileRequest& operator=(const GetLoginProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetLoginProfileRequest(GetLoginProfileRequest&& from) noexcept
    : GetLoginProfileRequest() {
    *this = ::std::move(from);
  }

  inline GetLoginProfileRequest& operator=(GetLoginProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLoginProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLoginProfileRequest* internal_default_instance() {
    return reinterpret_cast<const GetLoginProfileRequest*>(
               &_GetLoginProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetLoginProfileRequest* other);
  friend void swap(GetLoginProfileRequest& a, GetLoginProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLoginProfileRequest* New() const final {
    return CreateMaybeMessage<GetLoginProfileRequest>(NULL);
  }

  GetLoginProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetLoginProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetLoginProfileRequest& from);
  void MergeFrom(const GetLoginProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLoginProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.GetLoginProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSshPublicKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest) */ {
 public:
  GetSshPublicKeyRequest();
  virtual ~GetSshPublicKeyRequest();

  GetSshPublicKeyRequest(const GetSshPublicKeyRequest& from);

  inline GetSshPublicKeyRequest& operator=(const GetSshPublicKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSshPublicKeyRequest(GetSshPublicKeyRequest&& from) noexcept
    : GetSshPublicKeyRequest() {
    *this = ::std::move(from);
  }

  inline GetSshPublicKeyRequest& operator=(GetSshPublicKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSshPublicKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSshPublicKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GetSshPublicKeyRequest*>(
               &_GetSshPublicKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetSshPublicKeyRequest* other);
  friend void swap(GetSshPublicKeyRequest& a, GetSshPublicKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSshPublicKeyRequest* New() const final {
    return CreateMaybeMessage<GetSshPublicKeyRequest>(NULL);
  }

  GetSshPublicKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSshPublicKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSshPublicKeyRequest& from);
  void MergeFrom(const GetSshPublicKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSshPublicKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportSshPublicKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest) */ {
 public:
  ImportSshPublicKeyRequest();
  virtual ~ImportSshPublicKeyRequest();

  ImportSshPublicKeyRequest(const ImportSshPublicKeyRequest& from);

  inline ImportSshPublicKeyRequest& operator=(const ImportSshPublicKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportSshPublicKeyRequest(ImportSshPublicKeyRequest&& from) noexcept
    : ImportSshPublicKeyRequest() {
    *this = ::std::move(from);
  }

  inline ImportSshPublicKeyRequest& operator=(ImportSshPublicKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportSshPublicKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportSshPublicKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ImportSshPublicKeyRequest*>(
               &_ImportSshPublicKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ImportSshPublicKeyRequest* other);
  friend void swap(ImportSshPublicKeyRequest& a, ImportSshPublicKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportSshPublicKeyRequest* New() const final {
    return CreateMaybeMessage<ImportSshPublicKeyRequest>(NULL);
  }

  ImportSshPublicKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportSshPublicKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportSshPublicKeyRequest& from);
  void MergeFrom(const ImportSshPublicKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportSshPublicKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string project_id = 3;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 3;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_project_id(::std::string&& value);
  #endif
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);

  // .google.cloud.oslogin.common.SshPublicKey ssh_public_key = 2;
  bool has_ssh_public_key() const;
  void clear_ssh_public_key();
  static const int kSshPublicKeyFieldNumber = 2;
  private:
  const ::google::cloud::oslogin::common::SshPublicKey& _internal_ssh_public_key() const;
  public:
  const ::google::cloud::oslogin::common::SshPublicKey& ssh_public_key() const;
  ::google::cloud::oslogin::common::SshPublicKey* release_ssh_public_key();
  ::google::cloud::oslogin::common::SshPublicKey* mutable_ssh_public_key();
  void set_allocated_ssh_public_key(::google::cloud::oslogin::common::SshPublicKey* ssh_public_key);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::cloud::oslogin::common::SshPublicKey* ssh_public_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportSshPublicKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse) */ {
 public:
  ImportSshPublicKeyResponse();
  virtual ~ImportSshPublicKeyResponse();

  ImportSshPublicKeyResponse(const ImportSshPublicKeyResponse& from);

  inline ImportSshPublicKeyResponse& operator=(const ImportSshPublicKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportSshPublicKeyResponse(ImportSshPublicKeyResponse&& from) noexcept
    : ImportSshPublicKeyResponse() {
    *this = ::std::move(from);
  }

  inline ImportSshPublicKeyResponse& operator=(ImportSshPublicKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportSshPublicKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportSshPublicKeyResponse* internal_default_instance() {
    return reinterpret_cast<const ImportSshPublicKeyResponse*>(
               &_ImportSshPublicKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ImportSshPublicKeyResponse* other);
  friend void swap(ImportSshPublicKeyResponse& a, ImportSshPublicKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportSshPublicKeyResponse* New() const final {
    return CreateMaybeMessage<ImportSshPublicKeyResponse>(NULL);
  }

  ImportSshPublicKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportSshPublicKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportSshPublicKeyResponse& from);
  void MergeFrom(const ImportSshPublicKeyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportSshPublicKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.oslogin.v1alpha.LoginProfile login_profile = 1;
  bool has_login_profile() const;
  void clear_login_profile();
  static const int kLoginProfileFieldNumber = 1;
  private:
  const ::google::cloud::oslogin::v1alpha::LoginProfile& _internal_login_profile() const;
  public:
  const ::google::cloud::oslogin::v1alpha::LoginProfile& login_profile() const;
  ::google::cloud::oslogin::v1alpha::LoginProfile* release_login_profile();
  ::google::cloud::oslogin::v1alpha::LoginProfile* mutable_login_profile();
  void set_allocated_login_profile(::google::cloud::oslogin::v1alpha::LoginProfile* login_profile);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::oslogin::v1alpha::LoginProfile* login_profile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateSshPublicKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest) */ {
 public:
  UpdateSshPublicKeyRequest();
  virtual ~UpdateSshPublicKeyRequest();

  UpdateSshPublicKeyRequest(const UpdateSshPublicKeyRequest& from);

  inline UpdateSshPublicKeyRequest& operator=(const UpdateSshPublicKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateSshPublicKeyRequest(UpdateSshPublicKeyRequest&& from) noexcept
    : UpdateSshPublicKeyRequest() {
    *this = ::std::move(from);
  }

  inline UpdateSshPublicKeyRequest& operator=(UpdateSshPublicKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSshPublicKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSshPublicKeyRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSshPublicKeyRequest*>(
               &_UpdateSshPublicKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UpdateSshPublicKeyRequest* other);
  friend void swap(UpdateSshPublicKeyRequest& a, UpdateSshPublicKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateSshPublicKeyRequest* New() const final {
    return CreateMaybeMessage<UpdateSshPublicKeyRequest>(NULL);
  }

  UpdateSshPublicKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSshPublicKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateSshPublicKeyRequest& from);
  void MergeFrom(const UpdateSshPublicKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSshPublicKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.cloud.oslogin.common.SshPublicKey ssh_public_key = 2;
  bool has_ssh_public_key() const;
  void clear_ssh_public_key();
  static const int kSshPublicKeyFieldNumber = 2;
  private:
  const ::google::cloud::oslogin::common::SshPublicKey& _internal_ssh_public_key() const;
  public:
  const ::google::cloud::oslogin::common::SshPublicKey& ssh_public_key() const;
  ::google::cloud::oslogin::common::SshPublicKey* release_ssh_public_key();
  ::google::cloud::oslogin::common::SshPublicKey* mutable_ssh_public_key();
  void set_allocated_ssh_public_key(::google::cloud::oslogin::common::SshPublicKey* ssh_public_key);

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::cloud::oslogin::common::SshPublicKey* ssh_public_key_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginProfile

// string name = 1;
inline void LoginProfile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginProfile::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.LoginProfile.name)
  return name_.GetNoArena();
}
inline void LoginProfile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.LoginProfile.name)
}
#if LANG_CXX11
inline void LoginProfile::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.LoginProfile.name)
}
#endif
inline void LoginProfile::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.LoginProfile.name)
}
inline void LoginProfile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.LoginProfile.name)
}
inline ::std::string* LoginProfile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.LoginProfile.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginProfile::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.LoginProfile.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginProfile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.LoginProfile.name)
}

// repeated .google.cloud.oslogin.common.PosixAccount posix_accounts = 2;
inline int LoginProfile::posix_accounts_size() const {
  return posix_accounts_.size();
}
inline ::google::cloud::oslogin::common::PosixAccount* LoginProfile::mutable_posix_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.LoginProfile.posix_accounts)
  return posix_accounts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::oslogin::common::PosixAccount >*
LoginProfile::mutable_posix_accounts() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.oslogin.v1alpha.LoginProfile.posix_accounts)
  return &posix_accounts_;
}
inline const ::google::cloud::oslogin::common::PosixAccount& LoginProfile::posix_accounts(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.LoginProfile.posix_accounts)
  return posix_accounts_.Get(index);
}
inline ::google::cloud::oslogin::common::PosixAccount* LoginProfile::add_posix_accounts() {
  // @@protoc_insertion_point(field_add:google.cloud.oslogin.v1alpha.LoginProfile.posix_accounts)
  return posix_accounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::oslogin::common::PosixAccount >&
LoginProfile::posix_accounts() const {
  // @@protoc_insertion_point(field_list:google.cloud.oslogin.v1alpha.LoginProfile.posix_accounts)
  return posix_accounts_;
}

// map<string, .google.cloud.oslogin.common.SshPublicKey> ssh_public_keys = 3;
inline int LoginProfile::ssh_public_keys_size() const {
  return ssh_public_keys_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::cloud::oslogin::common::SshPublicKey >&
LoginProfile::ssh_public_keys() const {
  // @@protoc_insertion_point(field_map:google.cloud.oslogin.v1alpha.LoginProfile.ssh_public_keys)
  return ssh_public_keys_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::cloud::oslogin::common::SshPublicKey >*
LoginProfile::mutable_ssh_public_keys() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.oslogin.v1alpha.LoginProfile.ssh_public_keys)
  return ssh_public_keys_.MutableMap();
}

// bool suspended = 4;
inline void LoginProfile::clear_suspended() {
  suspended_ = false;
}
inline bool LoginProfile::suspended() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.LoginProfile.suspended)
  return suspended_;
}
inline void LoginProfile::set_suspended(bool value) {
  
  suspended_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.LoginProfile.suspended)
}

// -------------------------------------------------------------------

// DeletePosixAccountRequest

// string name = 1;
inline void DeletePosixAccountRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeletePosixAccountRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
  return name_.GetNoArena();
}
inline void DeletePosixAccountRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
}
#if LANG_CXX11
inline void DeletePosixAccountRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
}
#endif
inline void DeletePosixAccountRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
}
inline void DeletePosixAccountRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
}
inline ::std::string* DeletePosixAccountRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeletePosixAccountRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeletePosixAccountRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.DeletePosixAccountRequest.name)
}

// -------------------------------------------------------------------

// DeleteSshPublicKeyRequest

// string name = 1;
inline void DeleteSshPublicKeyRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteSshPublicKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
  return name_.GetNoArena();
}
inline void DeleteSshPublicKeyRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
}
#if LANG_CXX11
inline void DeleteSshPublicKeyRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
}
#endif
inline void DeleteSshPublicKeyRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
}
inline void DeleteSshPublicKeyRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
}
inline ::std::string* DeleteSshPublicKeyRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteSshPublicKeyRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteSshPublicKeyRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.DeleteSshPublicKeyRequest.name)
}

// -------------------------------------------------------------------

// GetLoginProfileRequest

// string name = 1;
inline void GetLoginProfileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLoginProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
  return name_.GetNoArena();
}
inline void GetLoginProfileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
}
#if LANG_CXX11
inline void GetLoginProfileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
}
#endif
inline void GetLoginProfileRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
}
inline void GetLoginProfileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
}
inline ::std::string* GetLoginProfileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLoginProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLoginProfileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.GetLoginProfileRequest.name)
}

// -------------------------------------------------------------------

// GetSshPublicKeyRequest

// string name = 1;
inline void GetSshPublicKeyRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSshPublicKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
  return name_.GetNoArena();
}
inline void GetSshPublicKeyRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
}
#if LANG_CXX11
inline void GetSshPublicKeyRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
}
#endif
inline void GetSshPublicKeyRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
}
inline void GetSshPublicKeyRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
}
inline ::std::string* GetSshPublicKeyRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSshPublicKeyRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSshPublicKeyRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.GetSshPublicKeyRequest.name)
}

// -------------------------------------------------------------------

// ImportSshPublicKeyRequest

// string parent = 1;
inline void ImportSshPublicKeyRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportSshPublicKeyRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
  return parent_.GetNoArena();
}
inline void ImportSshPublicKeyRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
}
#if LANG_CXX11
inline void ImportSshPublicKeyRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
}
#endif
inline void ImportSshPublicKeyRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
}
inline void ImportSshPublicKeyRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
}
inline ::std::string* ImportSshPublicKeyRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportSshPublicKeyRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportSshPublicKeyRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.parent)
}

// .google.cloud.oslogin.common.SshPublicKey ssh_public_key = 2;
inline bool ImportSshPublicKeyRequest::has_ssh_public_key() const {
  return this != internal_default_instance() && ssh_public_key_ != NULL;
}
inline const ::google::cloud::oslogin::common::SshPublicKey& ImportSshPublicKeyRequest::_internal_ssh_public_key() const {
  return *ssh_public_key_;
}
inline const ::google::cloud::oslogin::common::SshPublicKey& ImportSshPublicKeyRequest::ssh_public_key() const {
  const ::google::cloud::oslogin::common::SshPublicKey* p = ssh_public_key_;
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.ssh_public_key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::oslogin::common::SshPublicKey*>(
      &::google::cloud::oslogin::common::_SshPublicKey_default_instance_);
}
inline ::google::cloud::oslogin::common::SshPublicKey* ImportSshPublicKeyRequest::release_ssh_public_key() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.ssh_public_key)
  
  ::google::cloud::oslogin::common::SshPublicKey* temp = ssh_public_key_;
  ssh_public_key_ = NULL;
  return temp;
}
inline ::google::cloud::oslogin::common::SshPublicKey* ImportSshPublicKeyRequest::mutable_ssh_public_key() {
  
  if (ssh_public_key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::oslogin::common::SshPublicKey>(GetArenaNoVirtual());
    ssh_public_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.ssh_public_key)
  return ssh_public_key_;
}
inline void ImportSshPublicKeyRequest::set_allocated_ssh_public_key(::google::cloud::oslogin::common::SshPublicKey* ssh_public_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_public_key_);
  }
  if (ssh_public_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_public_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_public_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_public_key_ = ssh_public_key;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.ssh_public_key)
}

// string project_id = 3;
inline void ImportSshPublicKeyRequest::clear_project_id() {
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportSshPublicKeyRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
  return project_id_.GetNoArena();
}
inline void ImportSshPublicKeyRequest::set_project_id(const ::std::string& value) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
}
#if LANG_CXX11
inline void ImportSshPublicKeyRequest::set_project_id(::std::string&& value) {
  
  project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
}
#endif
inline void ImportSshPublicKeyRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
}
inline void ImportSshPublicKeyRequest::set_project_id(const char* value, size_t size) {
  
  project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
}
inline ::std::string* ImportSshPublicKeyRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
  return project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportSshPublicKeyRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
  
  return project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportSshPublicKeyRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.ImportSshPublicKeyRequest.project_id)
}

// -------------------------------------------------------------------

// ImportSshPublicKeyResponse

// .google.cloud.oslogin.v1alpha.LoginProfile login_profile = 1;
inline bool ImportSshPublicKeyResponse::has_login_profile() const {
  return this != internal_default_instance() && login_profile_ != NULL;
}
inline void ImportSshPublicKeyResponse::clear_login_profile() {
  if (GetArenaNoVirtual() == NULL && login_profile_ != NULL) {
    delete login_profile_;
  }
  login_profile_ = NULL;
}
inline const ::google::cloud::oslogin::v1alpha::LoginProfile& ImportSshPublicKeyResponse::_internal_login_profile() const {
  return *login_profile_;
}
inline const ::google::cloud::oslogin::v1alpha::LoginProfile& ImportSshPublicKeyResponse::login_profile() const {
  const ::google::cloud::oslogin::v1alpha::LoginProfile* p = login_profile_;
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse.login_profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::oslogin::v1alpha::LoginProfile*>(
      &::google::cloud::oslogin::v1alpha::_LoginProfile_default_instance_);
}
inline ::google::cloud::oslogin::v1alpha::LoginProfile* ImportSshPublicKeyResponse::release_login_profile() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse.login_profile)
  
  ::google::cloud::oslogin::v1alpha::LoginProfile* temp = login_profile_;
  login_profile_ = NULL;
  return temp;
}
inline ::google::cloud::oslogin::v1alpha::LoginProfile* ImportSshPublicKeyResponse::mutable_login_profile() {
  
  if (login_profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::oslogin::v1alpha::LoginProfile>(GetArenaNoVirtual());
    login_profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse.login_profile)
  return login_profile_;
}
inline void ImportSshPublicKeyResponse::set_allocated_login_profile(::google::cloud::oslogin::v1alpha::LoginProfile* login_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_profile_;
  }
  if (login_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login_profile, submessage_arena);
    }
    
  } else {
    
  }
  login_profile_ = login_profile;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.ImportSshPublicKeyResponse.login_profile)
}

// -------------------------------------------------------------------

// UpdateSshPublicKeyRequest

// string name = 1;
inline void UpdateSshPublicKeyRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateSshPublicKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
  return name_.GetNoArena();
}
inline void UpdateSshPublicKeyRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
}
#if LANG_CXX11
inline void UpdateSshPublicKeyRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
}
#endif
inline void UpdateSshPublicKeyRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
}
inline void UpdateSshPublicKeyRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
}
inline ::std::string* UpdateSshPublicKeyRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateSshPublicKeyRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSshPublicKeyRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.name)
}

// .google.cloud.oslogin.common.SshPublicKey ssh_public_key = 2;
inline bool UpdateSshPublicKeyRequest::has_ssh_public_key() const {
  return this != internal_default_instance() && ssh_public_key_ != NULL;
}
inline const ::google::cloud::oslogin::common::SshPublicKey& UpdateSshPublicKeyRequest::_internal_ssh_public_key() const {
  return *ssh_public_key_;
}
inline const ::google::cloud::oslogin::common::SshPublicKey& UpdateSshPublicKeyRequest::ssh_public_key() const {
  const ::google::cloud::oslogin::common::SshPublicKey* p = ssh_public_key_;
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.ssh_public_key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::oslogin::common::SshPublicKey*>(
      &::google::cloud::oslogin::common::_SshPublicKey_default_instance_);
}
inline ::google::cloud::oslogin::common::SshPublicKey* UpdateSshPublicKeyRequest::release_ssh_public_key() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.ssh_public_key)
  
  ::google::cloud::oslogin::common::SshPublicKey* temp = ssh_public_key_;
  ssh_public_key_ = NULL;
  return temp;
}
inline ::google::cloud::oslogin::common::SshPublicKey* UpdateSshPublicKeyRequest::mutable_ssh_public_key() {
  
  if (ssh_public_key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::oslogin::common::SshPublicKey>(GetArenaNoVirtual());
    ssh_public_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.ssh_public_key)
  return ssh_public_key_;
}
inline void UpdateSshPublicKeyRequest::set_allocated_ssh_public_key(::google::cloud::oslogin::common::SshPublicKey* ssh_public_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_public_key_);
  }
  if (ssh_public_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_public_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_public_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_public_key_ = ssh_public_key;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.ssh_public_key)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateSshPublicKeyRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateSshPublicKeyRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateSshPublicKeyRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateSshPublicKeyRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateSshPublicKeyRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.update_mask)
  return update_mask_;
}
inline void UpdateSshPublicKeyRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.oslogin.v1alpha.UpdateSshPublicKeyRequest.update_mask)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha
}  // namespace oslogin
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2foslogin_2fv1alpha_2foslogin_2eproto
