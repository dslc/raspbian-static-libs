// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dataproc/v1beta2/workflow_templates.proto
// Original file comments:
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto__INCLUDED

#include "google/cloud/dataproc/v1beta2/workflow_templates.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {

// The API interface for managing Workflow Templates in the
// Cloud Dataproc API.
class WorkflowTemplateService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.dataproc.v1beta2.WorkflowTemplateService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates new workflow template.
    virtual ::grpc::Status CreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncCreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncCreateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncCreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncCreateWorkflowTemplateRaw(context, request, cq));
    }
    // Retrieves the latest workflow template.
    //
    // Can retrieve previously instantiated template by specifying optional
    // version parameter.
    virtual ::grpc::Status GetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncGetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncGetWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncGetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncGetWorkflowTemplateRaw(context, request, cq));
    }
    // Instantiates a template and begins execution.
    //
    // The returned Operation can be used to track execution of
    // workflow by polling
    // [operations.get][google.longrunning.Operations.GetOperation].
    // The Operation will complete when entire workflow is finished.
    //
    // The running workflow can be aborted via
    // [operations.cancel][google.longrunning.Operations.CancelOperation].
    // This will cause any inflight jobs to be cancelled and workflow-owned
    // clusters to be deleted.
    //
    // The [Operation.metadata][google.longrunning.Operation.metadata] will be
    // [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
    //
    // On successful completion,
    // [Operation.response][google.longrunning.Operation.response] will be
    // [Empty][google.protobuf.Empty].
    virtual ::grpc::Status InstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncInstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncInstantiateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncInstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncInstantiateWorkflowTemplateRaw(context, request, cq));
    }
    // Instantiates a template and begins execution.
    //
    // This method is equivalent to executing the sequence
    // [CreateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.CreateWorkflowTemplate], [InstantiateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateWorkflowTemplate],
    // [DeleteWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.DeleteWorkflowTemplate].
    //
    // The returned Operation can be used to track execution of
    // workflow by polling
    // [operations.get][google.longrunning.Operations.GetOperation].
    // The Operation will complete when entire workflow is finished.
    //
    // The running workflow can be aborted via
    // [operations.cancel][google.longrunning.Operations.CancelOperation].
    // This will cause any inflight jobs to be cancelled and workflow-owned
    // clusters to be deleted.
    //
    // The [Operation.metadata][google.longrunning.Operation.metadata] will be
    // [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
    //
    // On successful completion,
    // [Operation.response][google.longrunning.Operation.response] will be
    // [Empty][google.protobuf.Empty].
    virtual ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncInstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncInstantiateInlineWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> PrepareAsyncInstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(PrepareAsyncInstantiateInlineWorkflowTemplateRaw(context, request, cq));
    }
    // Updates (replaces) workflow template. The updated template
    // must contain version that matches the current server version.
    virtual ::grpc::Status UpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncUpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncUpdateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncUpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncUpdateWorkflowTemplateRaw(context, request, cq));
    }
    // Lists workflows that match the specified filter in the request.
    virtual ::grpc::Status ListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>> AsyncListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>>(AsyncListWorkflowTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>> PrepareAsyncListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>>(PrepareAsyncListWorkflowTemplatesRaw(context, request, cq));
    }
    // Deletes a workflow template. It does not cancel in-progress workflows.
    virtual ::grpc::Status DeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteWorkflowTemplateRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* PrepareAsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* AsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* PrepareAsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncCreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncCreateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncCreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncCreateWorkflowTemplateRaw(context, request, cq));
    }
    ::grpc::Status GetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncGetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncGetWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncGetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncGetWorkflowTemplateRaw(context, request, cq));
    }
    ::grpc::Status InstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncInstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncInstantiateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncInstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncInstantiateWorkflowTemplateRaw(context, request, cq));
    }
    ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncInstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncInstantiateInlineWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> PrepareAsyncInstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(PrepareAsyncInstantiateInlineWorkflowTemplateRaw(context, request, cq));
    }
    ::grpc::Status UpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> AsyncUpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(AsyncUpdateWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>> PrepareAsyncUpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>>(PrepareAsyncUpdateWorkflowTemplateRaw(context, request, cq));
    }
    ::grpc::Status ListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>> AsyncListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>>(AsyncListWorkflowTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>> PrepareAsyncListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>>(PrepareAsyncListWorkflowTemplatesRaw(context, request, cq));
    }
    ::grpc::Status DeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteWorkflowTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteWorkflowTemplateRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* PrepareAsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* AsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* PrepareAsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* AsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* PrepareAsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateWorkflowTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWorkflowTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_InstantiateWorkflowTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_InstantiateInlineWorkflowTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateWorkflowTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_ListWorkflowTemplates_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteWorkflowTemplate_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates new workflow template.
    virtual ::grpc::Status CreateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response);
    // Retrieves the latest workflow template.
    //
    // Can retrieve previously instantiated template by specifying optional
    // version parameter.
    virtual ::grpc::Status GetWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response);
    // Instantiates a template and begins execution.
    //
    // The returned Operation can be used to track execution of
    // workflow by polling
    // [operations.get][google.longrunning.Operations.GetOperation].
    // The Operation will complete when entire workflow is finished.
    //
    // The running workflow can be aborted via
    // [operations.cancel][google.longrunning.Operations.CancelOperation].
    // This will cause any inflight jobs to be cancelled and workflow-owned
    // clusters to be deleted.
    //
    // The [Operation.metadata][google.longrunning.Operation.metadata] will be
    // [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
    //
    // On successful completion,
    // [Operation.response][google.longrunning.Operation.response] will be
    // [Empty][google.protobuf.Empty].
    virtual ::grpc::Status InstantiateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::google::longrunning::Operation* response);
    // Instantiates a template and begins execution.
    //
    // This method is equivalent to executing the sequence
    // [CreateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.CreateWorkflowTemplate], [InstantiateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateWorkflowTemplate],
    // [DeleteWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.DeleteWorkflowTemplate].
    //
    // The returned Operation can be used to track execution of
    // workflow by polling
    // [operations.get][google.longrunning.Operations.GetOperation].
    // The Operation will complete when entire workflow is finished.
    //
    // The running workflow can be aborted via
    // [operations.cancel][google.longrunning.Operations.CancelOperation].
    // This will cause any inflight jobs to be cancelled and workflow-owned
    // clusters to be deleted.
    //
    // The [Operation.metadata][google.longrunning.Operation.metadata] will be
    // [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
    //
    // On successful completion,
    // [Operation.response][google.longrunning.Operation.response] will be
    // [Empty][google.protobuf.Empty].
    virtual ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::google::longrunning::Operation* response);
    // Updates (replaces) workflow template. The updated template
    // must contain version that matches the current server version.
    virtual ::grpc::Status UpdateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response);
    // Lists workflows that match the specified filter in the request.
    virtual ::grpc::Status ListWorkflowTemplates(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response);
    // Deletes a workflow template. It does not cancel in-progress workflows.
    virtual ::grpc::Status DeleteWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InstantiateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_InstantiateWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_InstantiateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InstantiateInlineWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_InstantiateInlineWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_InstantiateInlineWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListWorkflowTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListWorkflowTemplates() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListWorkflowTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWorkflowTemplates(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListWorkflowTemplates(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteWorkflowTemplate() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteWorkflowTemplate(::grpc::ServerContext* context, ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateWorkflowTemplate<WithAsyncMethod_GetWorkflowTemplate<WithAsyncMethod_InstantiateWorkflowTemplate<WithAsyncMethod_InstantiateInlineWorkflowTemplate<WithAsyncMethod_UpdateWorkflowTemplate<WithAsyncMethod_ListWorkflowTemplates<WithAsyncMethod_DeleteWorkflowTemplate<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InstantiateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_InstantiateWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_InstantiateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InstantiateInlineWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_InstantiateInlineWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_InstantiateInlineWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListWorkflowTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListWorkflowTemplates() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListWorkflowTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListWorkflowTemplates(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteWorkflowTemplate() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(std::bind(&WithStreamedUnaryMethod_CreateWorkflowTemplate<BaseClass>::StreamedCreateWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest,::google::cloud::dataproc::v1beta2::WorkflowTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(std::bind(&WithStreamedUnaryMethod_GetWorkflowTemplate<BaseClass>::StreamedGetWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest,::google::cloud::dataproc::v1beta2::WorkflowTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InstantiateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_InstantiateWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_InstantiateWorkflowTemplate<BaseClass>::StreamedInstantiateWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_InstantiateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InstantiateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInstantiateWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate<BaseClass>::StreamedInstantiateInlineWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(std::bind(&WithStreamedUnaryMethod_UpdateWorkflowTemplate<BaseClass>::StreamedUpdateWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest,::google::cloud::dataproc::v1beta2::WorkflowTemplate>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListWorkflowTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListWorkflowTemplates() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>(std::bind(&WithStreamedUnaryMethod_ListWorkflowTemplates<BaseClass>::StreamedListWorkflowTemplates, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListWorkflowTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListWorkflowTemplates(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListWorkflowTemplates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest,::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteWorkflowTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteWorkflowTemplate() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteWorkflowTemplate<BaseClass>::StreamedDeleteWorkflowTemplate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteWorkflowTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteWorkflowTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateWorkflowTemplate<WithStreamedUnaryMethod_GetWorkflowTemplate<WithStreamedUnaryMethod_InstantiateWorkflowTemplate<WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate<WithStreamedUnaryMethod_UpdateWorkflowTemplate<WithStreamedUnaryMethod_ListWorkflowTemplates<WithStreamedUnaryMethod_DeleteWorkflowTemplate<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateWorkflowTemplate<WithStreamedUnaryMethod_GetWorkflowTemplate<WithStreamedUnaryMethod_InstantiateWorkflowTemplate<WithStreamedUnaryMethod_InstantiateInlineWorkflowTemplate<WithStreamedUnaryMethod_UpdateWorkflowTemplate<WithStreamedUnaryMethod_ListWorkflowTemplates<WithStreamedUnaryMethod_DeleteWorkflowTemplate<Service > > > > > > > StreamedService;
};

}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto__INCLUDED
