// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1beta2/workflow_templates.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/dataproc/v1beta2/clusters.pb.h"
#include "google/cloud/dataproc/v1beta2/jobs.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto 

namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[22];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {
class ClusterOperation;
class ClusterOperationDefaultTypeInternal;
extern ClusterOperationDefaultTypeInternal _ClusterOperation_default_instance_;
class ClusterSelector;
class ClusterSelectorDefaultTypeInternal;
extern ClusterSelectorDefaultTypeInternal _ClusterSelector_default_instance_;
class ClusterSelector_ClusterLabelsEntry_DoNotUse;
class ClusterSelector_ClusterLabelsEntry_DoNotUseDefaultTypeInternal;
extern ClusterSelector_ClusterLabelsEntry_DoNotUseDefaultTypeInternal _ClusterSelector_ClusterLabelsEntry_DoNotUse_default_instance_;
class CreateWorkflowTemplateRequest;
class CreateWorkflowTemplateRequestDefaultTypeInternal;
extern CreateWorkflowTemplateRequestDefaultTypeInternal _CreateWorkflowTemplateRequest_default_instance_;
class DeleteWorkflowTemplateRequest;
class DeleteWorkflowTemplateRequestDefaultTypeInternal;
extern DeleteWorkflowTemplateRequestDefaultTypeInternal _DeleteWorkflowTemplateRequest_default_instance_;
class GetWorkflowTemplateRequest;
class GetWorkflowTemplateRequestDefaultTypeInternal;
extern GetWorkflowTemplateRequestDefaultTypeInternal _GetWorkflowTemplateRequest_default_instance_;
class InstantiateInlineWorkflowTemplateRequest;
class InstantiateInlineWorkflowTemplateRequestDefaultTypeInternal;
extern InstantiateInlineWorkflowTemplateRequestDefaultTypeInternal _InstantiateInlineWorkflowTemplateRequest_default_instance_;
class InstantiateWorkflowTemplateRequest;
class InstantiateWorkflowTemplateRequestDefaultTypeInternal;
extern InstantiateWorkflowTemplateRequestDefaultTypeInternal _InstantiateWorkflowTemplateRequest_default_instance_;
class ListWorkflowTemplatesRequest;
class ListWorkflowTemplatesRequestDefaultTypeInternal;
extern ListWorkflowTemplatesRequestDefaultTypeInternal _ListWorkflowTemplatesRequest_default_instance_;
class ListWorkflowTemplatesResponse;
class ListWorkflowTemplatesResponseDefaultTypeInternal;
extern ListWorkflowTemplatesResponseDefaultTypeInternal _ListWorkflowTemplatesResponse_default_instance_;
class ManagedCluster;
class ManagedClusterDefaultTypeInternal;
extern ManagedClusterDefaultTypeInternal _ManagedCluster_default_instance_;
class ManagedCluster_LabelsEntry_DoNotUse;
class ManagedCluster_LabelsEntry_DoNotUseDefaultTypeInternal;
extern ManagedCluster_LabelsEntry_DoNotUseDefaultTypeInternal _ManagedCluster_LabelsEntry_DoNotUse_default_instance_;
class OrderedJob;
class OrderedJobDefaultTypeInternal;
extern OrderedJobDefaultTypeInternal _OrderedJob_default_instance_;
class OrderedJob_LabelsEntry_DoNotUse;
class OrderedJob_LabelsEntry_DoNotUseDefaultTypeInternal;
extern OrderedJob_LabelsEntry_DoNotUseDefaultTypeInternal _OrderedJob_LabelsEntry_DoNotUse_default_instance_;
class UpdateWorkflowTemplateRequest;
class UpdateWorkflowTemplateRequestDefaultTypeInternal;
extern UpdateWorkflowTemplateRequestDefaultTypeInternal _UpdateWorkflowTemplateRequest_default_instance_;
class WorkflowGraph;
class WorkflowGraphDefaultTypeInternal;
extern WorkflowGraphDefaultTypeInternal _WorkflowGraph_default_instance_;
class WorkflowMetadata;
class WorkflowMetadataDefaultTypeInternal;
extern WorkflowMetadataDefaultTypeInternal _WorkflowMetadata_default_instance_;
class WorkflowMetadata_ParametersEntry_DoNotUse;
class WorkflowMetadata_ParametersEntry_DoNotUseDefaultTypeInternal;
extern WorkflowMetadata_ParametersEntry_DoNotUseDefaultTypeInternal _WorkflowMetadata_ParametersEntry_DoNotUse_default_instance_;
class WorkflowNode;
class WorkflowNodeDefaultTypeInternal;
extern WorkflowNodeDefaultTypeInternal _WorkflowNode_default_instance_;
class WorkflowTemplate;
class WorkflowTemplateDefaultTypeInternal;
extern WorkflowTemplateDefaultTypeInternal _WorkflowTemplate_default_instance_;
class WorkflowTemplatePlacement;
class WorkflowTemplatePlacementDefaultTypeInternal;
extern WorkflowTemplatePlacementDefaultTypeInternal _WorkflowTemplatePlacement_default_instance_;
class WorkflowTemplate_LabelsEntry_DoNotUse;
class WorkflowTemplate_LabelsEntry_DoNotUseDefaultTypeInternal;
extern WorkflowTemplate_LabelsEntry_DoNotUseDefaultTypeInternal _WorkflowTemplate_LabelsEntry_DoNotUse_default_instance_;
}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::dataproc::v1beta2::ClusterOperation* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterOperation>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ClusterSelector* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterSelector>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ManagedCluster* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ManagedCluster>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::OrderedJob* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::OrderedJob>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowGraph* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowGraph>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowMetadata* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowMetadata>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowNode* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowNode>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowTemplate* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplate>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement>(Arena*);
template<> ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {

enum WorkflowMetadata_State {
  WorkflowMetadata_State_UNKNOWN = 0,
  WorkflowMetadata_State_PENDING = 1,
  WorkflowMetadata_State_RUNNING = 2,
  WorkflowMetadata_State_DONE = 3,
  WorkflowMetadata_State_WorkflowMetadata_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorkflowMetadata_State_WorkflowMetadata_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorkflowMetadata_State_IsValid(int value);
const WorkflowMetadata_State WorkflowMetadata_State_State_MIN = WorkflowMetadata_State_UNKNOWN;
const WorkflowMetadata_State WorkflowMetadata_State_State_MAX = WorkflowMetadata_State_DONE;
const int WorkflowMetadata_State_State_ARRAYSIZE = WorkflowMetadata_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorkflowMetadata_State_descriptor();
inline const ::std::string& WorkflowMetadata_State_Name(WorkflowMetadata_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorkflowMetadata_State_descriptor(), value);
}
inline bool WorkflowMetadata_State_Parse(
    const ::std::string& name, WorkflowMetadata_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorkflowMetadata_State>(
    WorkflowMetadata_State_descriptor(), name, value);
}
enum WorkflowNode_NodeState {
  WorkflowNode_NodeState_NODE_STATUS_UNSPECIFIED = 0,
  WorkflowNode_NodeState_BLOCKED = 1,
  WorkflowNode_NodeState_RUNNABLE = 2,
  WorkflowNode_NodeState_RUNNING = 3,
  WorkflowNode_NodeState_COMPLETED = 4,
  WorkflowNode_NodeState_FAILED = 5,
  WorkflowNode_NodeState_WorkflowNode_NodeState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorkflowNode_NodeState_WorkflowNode_NodeState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorkflowNode_NodeState_IsValid(int value);
const WorkflowNode_NodeState WorkflowNode_NodeState_NodeState_MIN = WorkflowNode_NodeState_NODE_STATUS_UNSPECIFIED;
const WorkflowNode_NodeState WorkflowNode_NodeState_NodeState_MAX = WorkflowNode_NodeState_FAILED;
const int WorkflowNode_NodeState_NodeState_ARRAYSIZE = WorkflowNode_NodeState_NodeState_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorkflowNode_NodeState_descriptor();
inline const ::std::string& WorkflowNode_NodeState_Name(WorkflowNode_NodeState value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorkflowNode_NodeState_descriptor(), value);
}
inline bool WorkflowNode_NodeState_Parse(
    const ::std::string& name, WorkflowNode_NodeState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorkflowNode_NodeState>(
    WorkflowNode_NodeState_descriptor(), name, value);
}
// ===================================================================

class WorkflowTemplate_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<WorkflowTemplate_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<WorkflowTemplate_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  WorkflowTemplate_LabelsEntry_DoNotUse();
  WorkflowTemplate_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const WorkflowTemplate_LabelsEntry_DoNotUse& other);
  static const WorkflowTemplate_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const WorkflowTemplate_LabelsEntry_DoNotUse*>(&_WorkflowTemplate_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class WorkflowTemplate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.WorkflowTemplate) */ {
 public:
  WorkflowTemplate();
  virtual ~WorkflowTemplate();

  WorkflowTemplate(const WorkflowTemplate& from);

  inline WorkflowTemplate& operator=(const WorkflowTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowTemplate(WorkflowTemplate&& from) noexcept
    : WorkflowTemplate() {
    *this = ::std::move(from);
  }

  inline WorkflowTemplate& operator=(WorkflowTemplate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowTemplate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowTemplate* internal_default_instance() {
    return reinterpret_cast<const WorkflowTemplate*>(
               &_WorkflowTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(WorkflowTemplate* other);
  friend void swap(WorkflowTemplate& a, WorkflowTemplate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowTemplate* New() const final {
    return CreateMaybeMessage<WorkflowTemplate>(NULL);
  }

  WorkflowTemplate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowTemplate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowTemplate& from);
  void MergeFrom(const WorkflowTemplate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowTemplate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 6;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 8;
  ::google::cloud::dataproc::v1beta2::OrderedJob* mutable_jobs(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::OrderedJob >*
      mutable_jobs();
  const ::google::cloud::dataproc::v1beta2::OrderedJob& jobs(int index) const;
  ::google::cloud::dataproc::v1beta2::OrderedJob* add_jobs();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::OrderedJob >&
      jobs() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .google.protobuf.Timestamp create_time = 4;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  private:
  const ::google::protobuf::Timestamp& _internal_create_time() const;
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp update_time = 5;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 5;
  private:
  const ::google::protobuf::Timestamp& _internal_update_time() const;
  public:
  const ::google::protobuf::Timestamp& update_time() const;
  ::google::protobuf::Timestamp* release_update_time();
  ::google::protobuf::Timestamp* mutable_update_time();
  void set_allocated_update_time(::google::protobuf::Timestamp* update_time);

  // .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
  bool has_placement() const;
  void clear_placement();
  static const int kPlacementFieldNumber = 7;
  private:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement& _internal_placement() const;
  public:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement& placement() const;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* release_placement();
  ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* mutable_placement();
  void set_allocated_placement(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* placement);

  // int32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.WorkflowTemplate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      WorkflowTemplate_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::OrderedJob > jobs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* update_time_;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* placement_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkflowTemplatePlacement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement) */ {
 public:
  WorkflowTemplatePlacement();
  virtual ~WorkflowTemplatePlacement();

  WorkflowTemplatePlacement(const WorkflowTemplatePlacement& from);

  inline WorkflowTemplatePlacement& operator=(const WorkflowTemplatePlacement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowTemplatePlacement(WorkflowTemplatePlacement&& from) noexcept
    : WorkflowTemplatePlacement() {
    *this = ::std::move(from);
  }

  inline WorkflowTemplatePlacement& operator=(WorkflowTemplatePlacement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowTemplatePlacement& default_instance();

  enum PlacementCase {
    kManagedCluster = 1,
    kClusterSelector = 2,
    PLACEMENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowTemplatePlacement* internal_default_instance() {
    return reinterpret_cast<const WorkflowTemplatePlacement*>(
               &_WorkflowTemplatePlacement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WorkflowTemplatePlacement* other);
  friend void swap(WorkflowTemplatePlacement& a, WorkflowTemplatePlacement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowTemplatePlacement* New() const final {
    return CreateMaybeMessage<WorkflowTemplatePlacement>(NULL);
  }

  WorkflowTemplatePlacement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowTemplatePlacement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowTemplatePlacement& from);
  void MergeFrom(const WorkflowTemplatePlacement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowTemplatePlacement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
  bool has_managed_cluster() const;
  void clear_managed_cluster();
  static const int kManagedClusterFieldNumber = 1;
  private:
  const ::google::cloud::dataproc::v1beta2::ManagedCluster& _internal_managed_cluster() const;
  public:
  const ::google::cloud::dataproc::v1beta2::ManagedCluster& managed_cluster() const;
  ::google::cloud::dataproc::v1beta2::ManagedCluster* release_managed_cluster();
  ::google::cloud::dataproc::v1beta2::ManagedCluster* mutable_managed_cluster();
  void set_allocated_managed_cluster(::google::cloud::dataproc::v1beta2::ManagedCluster* managed_cluster);

  // .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
  bool has_cluster_selector() const;
  void clear_cluster_selector();
  static const int kClusterSelectorFieldNumber = 2;
  private:
  const ::google::cloud::dataproc::v1beta2::ClusterSelector& _internal_cluster_selector() const;
  public:
  const ::google::cloud::dataproc::v1beta2::ClusterSelector& cluster_selector() const;
  ::google::cloud::dataproc::v1beta2::ClusterSelector* release_cluster_selector();
  ::google::cloud::dataproc::v1beta2::ClusterSelector* mutable_cluster_selector();
  void set_allocated_cluster_selector(::google::cloud::dataproc::v1beta2::ClusterSelector* cluster_selector);

  void clear_placement();
  PlacementCase placement_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
 private:
  void set_has_managed_cluster();
  void set_has_cluster_selector();

  inline bool has_placement() const;
  inline void clear_has_placement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union PlacementUnion {
    PlacementUnion() {}
    ::google::cloud::dataproc::v1beta2::ManagedCluster* managed_cluster_;
    ::google::cloud::dataproc::v1beta2::ClusterSelector* cluster_selector_;
  } placement_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManagedCluster_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ManagedCluster_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ManagedCluster_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ManagedCluster_LabelsEntry_DoNotUse();
  ManagedCluster_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ManagedCluster_LabelsEntry_DoNotUse& other);
  static const ManagedCluster_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ManagedCluster_LabelsEntry_DoNotUse*>(&_ManagedCluster_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ManagedCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.ManagedCluster) */ {
 public:
  ManagedCluster();
  virtual ~ManagedCluster();

  ManagedCluster(const ManagedCluster& from);

  inline ManagedCluster& operator=(const ManagedCluster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManagedCluster(ManagedCluster&& from) noexcept
    : ManagedCluster() {
    *this = ::std::move(from);
  }

  inline ManagedCluster& operator=(ManagedCluster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManagedCluster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManagedCluster* internal_default_instance() {
    return reinterpret_cast<const ManagedCluster*>(
               &_ManagedCluster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ManagedCluster* other);
  friend void swap(ManagedCluster& a, ManagedCluster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManagedCluster* New() const final {
    return CreateMaybeMessage<ManagedCluster>(NULL);
  }

  ManagedCluster* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ManagedCluster>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ManagedCluster& from);
  void MergeFrom(const ManagedCluster& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManagedCluster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string cluster_name = 2;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 2;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 3;
  private:
  const ::google::cloud::dataproc::v1beta2::ClusterConfig& _internal_config() const;
  public:
  const ::google::cloud::dataproc::v1beta2::ClusterConfig& config() const;
  ::google::cloud::dataproc::v1beta2::ClusterConfig* release_config();
  ::google::cloud::dataproc::v1beta2::ClusterConfig* mutable_config();
  void set_allocated_config(::google::cloud::dataproc::v1beta2::ClusterConfig* config);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.ManagedCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ManagedCluster_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  ::google::cloud::dataproc::v1beta2::ClusterConfig* config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterSelector_ClusterLabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ClusterSelector_ClusterLabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ClusterSelector_ClusterLabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ClusterSelector_ClusterLabelsEntry_DoNotUse();
  ClusterSelector_ClusterLabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ClusterSelector_ClusterLabelsEntry_DoNotUse& other);
  static const ClusterSelector_ClusterLabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ClusterSelector_ClusterLabelsEntry_DoNotUse*>(&_ClusterSelector_ClusterLabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ClusterSelector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.ClusterSelector) */ {
 public:
  ClusterSelector();
  virtual ~ClusterSelector();

  ClusterSelector(const ClusterSelector& from);

  inline ClusterSelector& operator=(const ClusterSelector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterSelector(ClusterSelector&& from) noexcept
    : ClusterSelector() {
    *this = ::std::move(from);
  }

  inline ClusterSelector& operator=(ClusterSelector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterSelector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterSelector* internal_default_instance() {
    return reinterpret_cast<const ClusterSelector*>(
               &_ClusterSelector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ClusterSelector* other);
  friend void swap(ClusterSelector& a, ClusterSelector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterSelector* New() const final {
    return CreateMaybeMessage<ClusterSelector>(NULL);
  }

  ClusterSelector* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClusterSelector>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClusterSelector& from);
  void MergeFrom(const ClusterSelector& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClusterSelector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> cluster_labels = 2;
  int cluster_labels_size() const;
  void clear_cluster_labels();
  static const int kClusterLabelsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      cluster_labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_cluster_labels();

  // string zone = 1;
  void clear_zone();
  static const int kZoneFieldNumber = 1;
  const ::std::string& zone() const;
  void set_zone(const ::std::string& value);
  #if LANG_CXX11
  void set_zone(::std::string&& value);
  #endif
  void set_zone(const char* value);
  void set_zone(const char* value, size_t size);
  ::std::string* mutable_zone();
  ::std::string* release_zone();
  void set_allocated_zone(::std::string* zone);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.ClusterSelector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ClusterSelector_ClusterLabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > cluster_labels_;
  ::google::protobuf::internal::ArenaStringPtr zone_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderedJob_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<OrderedJob_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<OrderedJob_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  OrderedJob_LabelsEntry_DoNotUse();
  OrderedJob_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const OrderedJob_LabelsEntry_DoNotUse& other);
  static const OrderedJob_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OrderedJob_LabelsEntry_DoNotUse*>(&_OrderedJob_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class OrderedJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.OrderedJob) */ {
 public:
  OrderedJob();
  virtual ~OrderedJob();

  OrderedJob(const OrderedJob& from);

  inline OrderedJob& operator=(const OrderedJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderedJob(OrderedJob&& from) noexcept
    : OrderedJob() {
    *this = ::std::move(from);
  }

  inline OrderedJob& operator=(OrderedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderedJob& default_instance();

  enum JobTypeCase {
    kHadoopJob = 2,
    kSparkJob = 3,
    kPysparkJob = 4,
    kHiveJob = 5,
    kPigJob = 6,
    kSparkSqlJob = 7,
    JOB_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderedJob* internal_default_instance() {
    return reinterpret_cast<const OrderedJob*>(
               &_OrderedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(OrderedJob* other);
  friend void swap(OrderedJob& a, OrderedJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderedJob* New() const final {
    return CreateMaybeMessage<OrderedJob>(NULL);
  }

  OrderedJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderedJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderedJob& from);
  void MergeFrom(const OrderedJob& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderedJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 8;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // repeated string prerequisite_step_ids = 10;
  int prerequisite_step_ids_size() const;
  void clear_prerequisite_step_ids();
  static const int kPrerequisiteStepIdsFieldNumber = 10;
  const ::std::string& prerequisite_step_ids(int index) const;
  ::std::string* mutable_prerequisite_step_ids(int index);
  void set_prerequisite_step_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_prerequisite_step_ids(int index, ::std::string&& value);
  #endif
  void set_prerequisite_step_ids(int index, const char* value);
  void set_prerequisite_step_ids(int index, const char* value, size_t size);
  ::std::string* add_prerequisite_step_ids();
  void add_prerequisite_step_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_prerequisite_step_ids(::std::string&& value);
  #endif
  void add_prerequisite_step_ids(const char* value);
  void add_prerequisite_step_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& prerequisite_step_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prerequisite_step_ids();

  // string step_id = 1;
  void clear_step_id();
  static const int kStepIdFieldNumber = 1;
  const ::std::string& step_id() const;
  void set_step_id(const ::std::string& value);
  #if LANG_CXX11
  void set_step_id(::std::string&& value);
  #endif
  void set_step_id(const char* value);
  void set_step_id(const char* value, size_t size);
  ::std::string* mutable_step_id();
  ::std::string* release_step_id();
  void set_allocated_step_id(::std::string* step_id);

  // .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
  bool has_scheduling() const;
  void clear_scheduling();
  static const int kSchedulingFieldNumber = 9;
  private:
  const ::google::cloud::dataproc::v1beta2::JobScheduling& _internal_scheduling() const;
  public:
  const ::google::cloud::dataproc::v1beta2::JobScheduling& scheduling() const;
  ::google::cloud::dataproc::v1beta2::JobScheduling* release_scheduling();
  ::google::cloud::dataproc::v1beta2::JobScheduling* mutable_scheduling();
  void set_allocated_scheduling(::google::cloud::dataproc::v1beta2::JobScheduling* scheduling);

  // .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
  bool has_hadoop_job() const;
  void clear_hadoop_job();
  static const int kHadoopJobFieldNumber = 2;
  private:
  const ::google::cloud::dataproc::v1beta2::HadoopJob& _internal_hadoop_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::HadoopJob& hadoop_job() const;
  ::google::cloud::dataproc::v1beta2::HadoopJob* release_hadoop_job();
  ::google::cloud::dataproc::v1beta2::HadoopJob* mutable_hadoop_job();
  void set_allocated_hadoop_job(::google::cloud::dataproc::v1beta2::HadoopJob* hadoop_job);

  // .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
  bool has_spark_job() const;
  void clear_spark_job();
  static const int kSparkJobFieldNumber = 3;
  private:
  const ::google::cloud::dataproc::v1beta2::SparkJob& _internal_spark_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::SparkJob& spark_job() const;
  ::google::cloud::dataproc::v1beta2::SparkJob* release_spark_job();
  ::google::cloud::dataproc::v1beta2::SparkJob* mutable_spark_job();
  void set_allocated_spark_job(::google::cloud::dataproc::v1beta2::SparkJob* spark_job);

  // .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
  bool has_pyspark_job() const;
  void clear_pyspark_job();
  static const int kPysparkJobFieldNumber = 4;
  private:
  const ::google::cloud::dataproc::v1beta2::PySparkJob& _internal_pyspark_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::PySparkJob& pyspark_job() const;
  ::google::cloud::dataproc::v1beta2::PySparkJob* release_pyspark_job();
  ::google::cloud::dataproc::v1beta2::PySparkJob* mutable_pyspark_job();
  void set_allocated_pyspark_job(::google::cloud::dataproc::v1beta2::PySparkJob* pyspark_job);

  // .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
  bool has_hive_job() const;
  void clear_hive_job();
  static const int kHiveJobFieldNumber = 5;
  private:
  const ::google::cloud::dataproc::v1beta2::HiveJob& _internal_hive_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::HiveJob& hive_job() const;
  ::google::cloud::dataproc::v1beta2::HiveJob* release_hive_job();
  ::google::cloud::dataproc::v1beta2::HiveJob* mutable_hive_job();
  void set_allocated_hive_job(::google::cloud::dataproc::v1beta2::HiveJob* hive_job);

  // .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
  bool has_pig_job() const;
  void clear_pig_job();
  static const int kPigJobFieldNumber = 6;
  private:
  const ::google::cloud::dataproc::v1beta2::PigJob& _internal_pig_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::PigJob& pig_job() const;
  ::google::cloud::dataproc::v1beta2::PigJob* release_pig_job();
  ::google::cloud::dataproc::v1beta2::PigJob* mutable_pig_job();
  void set_allocated_pig_job(::google::cloud::dataproc::v1beta2::PigJob* pig_job);

  // .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
  bool has_spark_sql_job() const;
  void clear_spark_sql_job();
  static const int kSparkSqlJobFieldNumber = 7;
  private:
  const ::google::cloud::dataproc::v1beta2::SparkSqlJob& _internal_spark_sql_job() const;
  public:
  const ::google::cloud::dataproc::v1beta2::SparkSqlJob& spark_sql_job() const;
  ::google::cloud::dataproc::v1beta2::SparkSqlJob* release_spark_sql_job();
  ::google::cloud::dataproc::v1beta2::SparkSqlJob* mutable_spark_sql_job();
  void set_allocated_spark_sql_job(::google::cloud::dataproc::v1beta2::SparkSqlJob* spark_sql_job);

  void clear_job_type();
  JobTypeCase job_type_case() const;
  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.OrderedJob)
 private:
  void set_has_hadoop_job();
  void set_has_spark_job();
  void set_has_pyspark_job();
  void set_has_hive_job();
  void set_has_pig_job();
  void set_has_spark_sql_job();

  inline bool has_job_type() const;
  inline void clear_has_job_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      OrderedJob_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prerequisite_step_ids_;
  ::google::protobuf::internal::ArenaStringPtr step_id_;
  ::google::cloud::dataproc::v1beta2::JobScheduling* scheduling_;
  union JobTypeUnion {
    JobTypeUnion() {}
    ::google::cloud::dataproc::v1beta2::HadoopJob* hadoop_job_;
    ::google::cloud::dataproc::v1beta2::SparkJob* spark_job_;
    ::google::cloud::dataproc::v1beta2::PySparkJob* pyspark_job_;
    ::google::cloud::dataproc::v1beta2::HiveJob* hive_job_;
    ::google::cloud::dataproc::v1beta2::PigJob* pig_job_;
    ::google::cloud::dataproc::v1beta2::SparkSqlJob* spark_sql_job_;
  } job_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkflowMetadata_ParametersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<WorkflowMetadata_ParametersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<WorkflowMetadata_ParametersEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  WorkflowMetadata_ParametersEntry_DoNotUse();
  WorkflowMetadata_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const WorkflowMetadata_ParametersEntry_DoNotUse& other);
  static const WorkflowMetadata_ParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const WorkflowMetadata_ParametersEntry_DoNotUse*>(&_WorkflowMetadata_ParametersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class WorkflowMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.WorkflowMetadata) */ {
 public:
  WorkflowMetadata();
  virtual ~WorkflowMetadata();

  WorkflowMetadata(const WorkflowMetadata& from);

  inline WorkflowMetadata& operator=(const WorkflowMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowMetadata(WorkflowMetadata&& from) noexcept
    : WorkflowMetadata() {
    *this = ::std::move(from);
  }

  inline WorkflowMetadata& operator=(WorkflowMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowMetadata* internal_default_instance() {
    return reinterpret_cast<const WorkflowMetadata*>(
               &_WorkflowMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(WorkflowMetadata* other);
  friend void swap(WorkflowMetadata& a, WorkflowMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowMetadata* New() const final {
    return CreateMaybeMessage<WorkflowMetadata>(NULL);
  }

  WorkflowMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowMetadata& from);
  void MergeFrom(const WorkflowMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  typedef WorkflowMetadata_State State;
  static const State UNKNOWN =
    WorkflowMetadata_State_UNKNOWN;
  static const State PENDING =
    WorkflowMetadata_State_PENDING;
  static const State RUNNING =
    WorkflowMetadata_State_RUNNING;
  static const State DONE =
    WorkflowMetadata_State_DONE;
  static inline bool State_IsValid(int value) {
    return WorkflowMetadata_State_IsValid(value);
  }
  static const State State_MIN =
    WorkflowMetadata_State_State_MIN;
  static const State State_MAX =
    WorkflowMetadata_State_State_MAX;
  static const int State_ARRAYSIZE =
    WorkflowMetadata_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return WorkflowMetadata_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return WorkflowMetadata_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return WorkflowMetadata_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, string> parameters = 8;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      parameters() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_parameters();

  // string template = 1;
  void clear_template_();
  static const int kTemplateFieldNumber = 1;
  const ::std::string& template_() const;
  void set_template_(const ::std::string& value);
  #if LANG_CXX11
  void set_template_(::std::string&& value);
  #endif
  void set_template_(const char* value);
  void set_template_(const char* value, size_t size);
  ::std::string* mutable_template_();
  ::std::string* release_template_();
  void set_allocated_template_(::std::string* template_);

  // string cluster_name = 7;
  void clear_cluster_name();
  static const int kClusterNameFieldNumber = 7;
  const ::std::string& cluster_name() const;
  void set_cluster_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_name(::std::string&& value);
  #endif
  void set_cluster_name(const char* value);
  void set_cluster_name(const char* value, size_t size);
  ::std::string* mutable_cluster_name();
  ::std::string* release_cluster_name();
  void set_allocated_cluster_name(::std::string* cluster_name);

  // .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
  bool has_create_cluster() const;
  void clear_create_cluster();
  static const int kCreateClusterFieldNumber = 3;
  private:
  const ::google::cloud::dataproc::v1beta2::ClusterOperation& _internal_create_cluster() const;
  public:
  const ::google::cloud::dataproc::v1beta2::ClusterOperation& create_cluster() const;
  ::google::cloud::dataproc::v1beta2::ClusterOperation* release_create_cluster();
  ::google::cloud::dataproc::v1beta2::ClusterOperation* mutable_create_cluster();
  void set_allocated_create_cluster(::google::cloud::dataproc::v1beta2::ClusterOperation* create_cluster);

  // .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
  bool has_graph() const;
  void clear_graph();
  static const int kGraphFieldNumber = 4;
  private:
  const ::google::cloud::dataproc::v1beta2::WorkflowGraph& _internal_graph() const;
  public:
  const ::google::cloud::dataproc::v1beta2::WorkflowGraph& graph() const;
  ::google::cloud::dataproc::v1beta2::WorkflowGraph* release_graph();
  ::google::cloud::dataproc::v1beta2::WorkflowGraph* mutable_graph();
  void set_allocated_graph(::google::cloud::dataproc::v1beta2::WorkflowGraph* graph);

  // .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
  bool has_delete_cluster() const;
  void clear_delete_cluster();
  static const int kDeleteClusterFieldNumber = 5;
  private:
  const ::google::cloud::dataproc::v1beta2::ClusterOperation& _internal_delete_cluster() const;
  public:
  const ::google::cloud::dataproc::v1beta2::ClusterOperation& delete_cluster() const;
  ::google::cloud::dataproc::v1beta2::ClusterOperation* release_delete_cluster();
  ::google::cloud::dataproc::v1beta2::ClusterOperation* mutable_delete_cluster();
  void set_allocated_delete_cluster(::google::cloud::dataproc::v1beta2::ClusterOperation* delete_cluster);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State state() const;
  void set_state(::google::cloud::dataproc::v1beta2::WorkflowMetadata_State value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.WorkflowMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      WorkflowMetadata_ParametersEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > parameters_;
  ::google::protobuf::internal::ArenaStringPtr template__;
  ::google::protobuf::internal::ArenaStringPtr cluster_name_;
  ::google::cloud::dataproc::v1beta2::ClusterOperation* create_cluster_;
  ::google::cloud::dataproc::v1beta2::WorkflowGraph* graph_;
  ::google::cloud::dataproc::v1beta2::ClusterOperation* delete_cluster_;
  ::google::protobuf::int32 version_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.ClusterOperation) */ {
 public:
  ClusterOperation();
  virtual ~ClusterOperation();

  ClusterOperation(const ClusterOperation& from);

  inline ClusterOperation& operator=(const ClusterOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClusterOperation(ClusterOperation&& from) noexcept
    : ClusterOperation() {
    *this = ::std::move(from);
  }

  inline ClusterOperation& operator=(ClusterOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterOperation* internal_default_instance() {
    return reinterpret_cast<const ClusterOperation*>(
               &_ClusterOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ClusterOperation* other);
  friend void swap(ClusterOperation& a, ClusterOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterOperation* New() const final {
    return CreateMaybeMessage<ClusterOperation>(NULL);
  }

  ClusterOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClusterOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClusterOperation& from);
  void MergeFrom(const ClusterOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClusterOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_id(::std::string&& value);
  #endif
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // bool done = 3;
  void clear_done();
  static const int kDoneFieldNumber = 3;
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.ClusterOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  bool done_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkflowGraph : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.WorkflowGraph) */ {
 public:
  WorkflowGraph();
  virtual ~WorkflowGraph();

  WorkflowGraph(const WorkflowGraph& from);

  inline WorkflowGraph& operator=(const WorkflowGraph& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowGraph(WorkflowGraph&& from) noexcept
    : WorkflowGraph() {
    *this = ::std::move(from);
  }

  inline WorkflowGraph& operator=(WorkflowGraph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowGraph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowGraph* internal_default_instance() {
    return reinterpret_cast<const WorkflowGraph*>(
               &_WorkflowGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(WorkflowGraph* other);
  friend void swap(WorkflowGraph& a, WorkflowGraph& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowGraph* New() const final {
    return CreateMaybeMessage<WorkflowGraph>(NULL);
  }

  WorkflowGraph* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowGraph>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowGraph& from);
  void MergeFrom(const WorkflowGraph& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowGraph* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::google::cloud::dataproc::v1beta2::WorkflowNode* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowNode >*
      mutable_nodes();
  const ::google::cloud::dataproc::v1beta2::WorkflowNode& nodes(int index) const;
  ::google::cloud::dataproc::v1beta2::WorkflowNode* add_nodes();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowNode >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.WorkflowGraph)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowNode > nodes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkflowNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.WorkflowNode) */ {
 public:
  WorkflowNode();
  virtual ~WorkflowNode();

  WorkflowNode(const WorkflowNode& from);

  inline WorkflowNode& operator=(const WorkflowNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowNode(WorkflowNode&& from) noexcept
    : WorkflowNode() {
    *this = ::std::move(from);
  }

  inline WorkflowNode& operator=(WorkflowNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkflowNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowNode* internal_default_instance() {
    return reinterpret_cast<const WorkflowNode*>(
               &_WorkflowNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(WorkflowNode* other);
  friend void swap(WorkflowNode& a, WorkflowNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowNode* New() const final {
    return CreateMaybeMessage<WorkflowNode>(NULL);
  }

  WorkflowNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowNode& from);
  void MergeFrom(const WorkflowNode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef WorkflowNode_NodeState NodeState;
  static const NodeState NODE_STATUS_UNSPECIFIED =
    WorkflowNode_NodeState_NODE_STATUS_UNSPECIFIED;
  static const NodeState BLOCKED =
    WorkflowNode_NodeState_BLOCKED;
  static const NodeState RUNNABLE =
    WorkflowNode_NodeState_RUNNABLE;
  static const NodeState RUNNING =
    WorkflowNode_NodeState_RUNNING;
  static const NodeState COMPLETED =
    WorkflowNode_NodeState_COMPLETED;
  static const NodeState FAILED =
    WorkflowNode_NodeState_FAILED;
  static inline bool NodeState_IsValid(int value) {
    return WorkflowNode_NodeState_IsValid(value);
  }
  static const NodeState NodeState_MIN =
    WorkflowNode_NodeState_NodeState_MIN;
  static const NodeState NodeState_MAX =
    WorkflowNode_NodeState_NodeState_MAX;
  static const int NodeState_ARRAYSIZE =
    WorkflowNode_NodeState_NodeState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NodeState_descriptor() {
    return WorkflowNode_NodeState_descriptor();
  }
  static inline const ::std::string& NodeState_Name(NodeState value) {
    return WorkflowNode_NodeState_Name(value);
  }
  static inline bool NodeState_Parse(const ::std::string& name,
      NodeState* value) {
    return WorkflowNode_NodeState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string prerequisite_step_ids = 2;
  int prerequisite_step_ids_size() const;
  void clear_prerequisite_step_ids();
  static const int kPrerequisiteStepIdsFieldNumber = 2;
  const ::std::string& prerequisite_step_ids(int index) const;
  ::std::string* mutable_prerequisite_step_ids(int index);
  void set_prerequisite_step_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_prerequisite_step_ids(int index, ::std::string&& value);
  #endif
  void set_prerequisite_step_ids(int index, const char* value);
  void set_prerequisite_step_ids(int index, const char* value, size_t size);
  ::std::string* add_prerequisite_step_ids();
  void add_prerequisite_step_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_prerequisite_step_ids(::std::string&& value);
  #endif
  void add_prerequisite_step_ids(const char* value);
  void add_prerequisite_step_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& prerequisite_step_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prerequisite_step_ids();

  // string step_id = 1;
  void clear_step_id();
  static const int kStepIdFieldNumber = 1;
  const ::std::string& step_id() const;
  void set_step_id(const ::std::string& value);
  #if LANG_CXX11
  void set_step_id(::std::string&& value);
  #endif
  void set_step_id(const char* value);
  void set_step_id(const char* value, size_t size);
  ::std::string* mutable_step_id();
  ::std::string* release_step_id();
  void set_allocated_step_id(::std::string* step_id);

  // string job_id = 3;
  void clear_job_id();
  static const int kJobIdFieldNumber = 3;
  const ::std::string& job_id() const;
  void set_job_id(const ::std::string& value);
  #if LANG_CXX11
  void set_job_id(::std::string&& value);
  #endif
  void set_job_id(const char* value);
  void set_job_id(const char* value, size_t size);
  ::std::string* mutable_job_id();
  ::std::string* release_job_id();
  void set_allocated_job_id(::std::string* job_id);

  // string error = 6;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState state() const;
  void set_state(::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.WorkflowNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prerequisite_step_ids_;
  ::google::protobuf::internal::ArenaStringPtr step_id_;
  ::google::protobuf::internal::ArenaStringPtr job_id_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest) */ {
 public:
  CreateWorkflowTemplateRequest();
  virtual ~CreateWorkflowTemplateRequest();

  CreateWorkflowTemplateRequest(const CreateWorkflowTemplateRequest& from);

  inline CreateWorkflowTemplateRequest& operator=(const CreateWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateWorkflowTemplateRequest(CreateWorkflowTemplateRequest&& from) noexcept
    : CreateWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline CreateWorkflowTemplateRequest& operator=(CreateWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const CreateWorkflowTemplateRequest*>(
               &_CreateWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CreateWorkflowTemplateRequest* other);
  friend void swap(CreateWorkflowTemplateRequest& a, CreateWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<CreateWorkflowTemplateRequest>(NULL);
  }

  CreateWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateWorkflowTemplateRequest& from);
  void MergeFrom(const CreateWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  bool has_template_() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 2;
  private:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& _internal_template_() const;
  public:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& template_() const;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* release_template_();
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* mutable_template_();
  void set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* template__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest) */ {
 public:
  GetWorkflowTemplateRequest();
  virtual ~GetWorkflowTemplateRequest();

  GetWorkflowTemplateRequest(const GetWorkflowTemplateRequest& from);

  inline GetWorkflowTemplateRequest& operator=(const GetWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorkflowTemplateRequest(GetWorkflowTemplateRequest&& from) noexcept
    : GetWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline GetWorkflowTemplateRequest& operator=(GetWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const GetWorkflowTemplateRequest*>(
               &_GetWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GetWorkflowTemplateRequest* other);
  friend void swap(GetWorkflowTemplateRequest& a, GetWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<GetWorkflowTemplateRequest>(NULL);
  }

  GetWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetWorkflowTemplateRequest& from);
  void MergeFrom(const GetWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstantiateWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest) */ {
 public:
  InstantiateWorkflowTemplateRequest();
  virtual ~InstantiateWorkflowTemplateRequest();

  InstantiateWorkflowTemplateRequest(const InstantiateWorkflowTemplateRequest& from);

  inline InstantiateWorkflowTemplateRequest& operator=(const InstantiateWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstantiateWorkflowTemplateRequest(InstantiateWorkflowTemplateRequest&& from) noexcept
    : InstantiateWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline InstantiateWorkflowTemplateRequest& operator=(InstantiateWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstantiateWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstantiateWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const InstantiateWorkflowTemplateRequest*>(
               &_InstantiateWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(InstantiateWorkflowTemplateRequest* other);
  friend void swap(InstantiateWorkflowTemplateRequest& a, InstantiateWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstantiateWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<InstantiateWorkflowTemplateRequest>(NULL);
  }

  InstantiateWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstantiateWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstantiateWorkflowTemplateRequest& from);
  void MergeFrom(const InstantiateWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstantiateWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string instance_id = 3;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 3;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstantiateInlineWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest) */ {
 public:
  InstantiateInlineWorkflowTemplateRequest();
  virtual ~InstantiateInlineWorkflowTemplateRequest();

  InstantiateInlineWorkflowTemplateRequest(const InstantiateInlineWorkflowTemplateRequest& from);

  inline InstantiateInlineWorkflowTemplateRequest& operator=(const InstantiateInlineWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstantiateInlineWorkflowTemplateRequest(InstantiateInlineWorkflowTemplateRequest&& from) noexcept
    : InstantiateInlineWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline InstantiateInlineWorkflowTemplateRequest& operator=(InstantiateInlineWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstantiateInlineWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstantiateInlineWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const InstantiateInlineWorkflowTemplateRequest*>(
               &_InstantiateInlineWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(InstantiateInlineWorkflowTemplateRequest* other);
  friend void swap(InstantiateInlineWorkflowTemplateRequest& a, InstantiateInlineWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstantiateInlineWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<InstantiateInlineWorkflowTemplateRequest>(NULL);
  }

  InstantiateInlineWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstantiateInlineWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstantiateInlineWorkflowTemplateRequest& from);
  void MergeFrom(const InstantiateInlineWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstantiateInlineWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string instance_id = 3;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 3;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  bool has_template_() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 2;
  private:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& _internal_template_() const;
  public:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& template_() const;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* release_template_();
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* mutable_template_();
  void set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* template__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest) */ {
 public:
  UpdateWorkflowTemplateRequest();
  virtual ~UpdateWorkflowTemplateRequest();

  UpdateWorkflowTemplateRequest(const UpdateWorkflowTemplateRequest& from);

  inline UpdateWorkflowTemplateRequest& operator=(const UpdateWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateWorkflowTemplateRequest(UpdateWorkflowTemplateRequest&& from) noexcept
    : UpdateWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline UpdateWorkflowTemplateRequest& operator=(UpdateWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateWorkflowTemplateRequest*>(
               &_UpdateWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UpdateWorkflowTemplateRequest* other);
  friend void swap(UpdateWorkflowTemplateRequest& a, UpdateWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<UpdateWorkflowTemplateRequest>(NULL);
  }

  UpdateWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateWorkflowTemplateRequest& from);
  void MergeFrom(const UpdateWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
  bool has_template_() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 1;
  private:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& _internal_template_() const;
  public:
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& template_() const;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* release_template_();
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* mutable_template_();
  void set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* template__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListWorkflowTemplatesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest) */ {
 public:
  ListWorkflowTemplatesRequest();
  virtual ~ListWorkflowTemplatesRequest();

  ListWorkflowTemplatesRequest(const ListWorkflowTemplatesRequest& from);

  inline ListWorkflowTemplatesRequest& operator=(const ListWorkflowTemplatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWorkflowTemplatesRequest(ListWorkflowTemplatesRequest&& from) noexcept
    : ListWorkflowTemplatesRequest() {
    *this = ::std::move(from);
  }

  inline ListWorkflowTemplatesRequest& operator=(ListWorkflowTemplatesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWorkflowTemplatesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWorkflowTemplatesRequest* internal_default_instance() {
    return reinterpret_cast<const ListWorkflowTemplatesRequest*>(
               &_ListWorkflowTemplatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ListWorkflowTemplatesRequest* other);
  friend void swap(ListWorkflowTemplatesRequest& a, ListWorkflowTemplatesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWorkflowTemplatesRequest* New() const final {
    return CreateMaybeMessage<ListWorkflowTemplatesRequest>(NULL);
  }

  ListWorkflowTemplatesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListWorkflowTemplatesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListWorkflowTemplatesRequest& from);
  void MergeFrom(const ListWorkflowTemplatesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListWorkflowTemplatesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListWorkflowTemplatesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse) */ {
 public:
  ListWorkflowTemplatesResponse();
  virtual ~ListWorkflowTemplatesResponse();

  ListWorkflowTemplatesResponse(const ListWorkflowTemplatesResponse& from);

  inline ListWorkflowTemplatesResponse& operator=(const ListWorkflowTemplatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWorkflowTemplatesResponse(ListWorkflowTemplatesResponse&& from) noexcept
    : ListWorkflowTemplatesResponse() {
    *this = ::std::move(from);
  }

  inline ListWorkflowTemplatesResponse& operator=(ListWorkflowTemplatesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListWorkflowTemplatesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWorkflowTemplatesResponse* internal_default_instance() {
    return reinterpret_cast<const ListWorkflowTemplatesResponse*>(
               &_ListWorkflowTemplatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ListWorkflowTemplatesResponse* other);
  friend void swap(ListWorkflowTemplatesResponse& a, ListWorkflowTemplatesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWorkflowTemplatesResponse* New() const final {
    return CreateMaybeMessage<ListWorkflowTemplatesResponse>(NULL);
  }

  ListWorkflowTemplatesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListWorkflowTemplatesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListWorkflowTemplatesResponse& from);
  void MergeFrom(const ListWorkflowTemplatesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListWorkflowTemplatesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
  int templates_size() const;
  void clear_templates();
  static const int kTemplatesFieldNumber = 1;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* mutable_templates(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >*
      mutable_templates();
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& templates(int index) const;
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* add_templates();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >&
      templates() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowTemplate > templates_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteWorkflowTemplateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest) */ {
 public:
  DeleteWorkflowTemplateRequest();
  virtual ~DeleteWorkflowTemplateRequest();

  DeleteWorkflowTemplateRequest(const DeleteWorkflowTemplateRequest& from);

  inline DeleteWorkflowTemplateRequest& operator=(const DeleteWorkflowTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteWorkflowTemplateRequest(DeleteWorkflowTemplateRequest&& from) noexcept
    : DeleteWorkflowTemplateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteWorkflowTemplateRequest& operator=(DeleteWorkflowTemplateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteWorkflowTemplateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteWorkflowTemplateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteWorkflowTemplateRequest*>(
               &_DeleteWorkflowTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(DeleteWorkflowTemplateRequest* other);
  friend void swap(DeleteWorkflowTemplateRequest& a, DeleteWorkflowTemplateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteWorkflowTemplateRequest* New() const final {
    return CreateMaybeMessage<DeleteWorkflowTemplateRequest>(NULL);
  }

  DeleteWorkflowTemplateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteWorkflowTemplateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteWorkflowTemplateRequest& from);
  void MergeFrom(const DeleteWorkflowTemplateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteWorkflowTemplateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// WorkflowTemplate

// string id = 2;
inline void WorkflowTemplate::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowTemplate::id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
  return id_.GetNoArena();
}
inline void WorkflowTemplate::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
}
#if LANG_CXX11
inline void WorkflowTemplate::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
}
#endif
inline void WorkflowTemplate::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
}
inline void WorkflowTemplate::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
}
inline ::std::string* WorkflowTemplate::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowTemplate::release_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowTemplate::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplate.id)
}

// string name = 1;
inline void WorkflowTemplate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowTemplate::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
  return name_.GetNoArena();
}
inline void WorkflowTemplate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
}
#if LANG_CXX11
inline void WorkflowTemplate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
}
#endif
inline void WorkflowTemplate::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
}
inline void WorkflowTemplate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
}
inline ::std::string* WorkflowTemplate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowTemplate::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowTemplate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplate.name)
}

// int32 version = 3;
inline void WorkflowTemplate::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 WorkflowTemplate::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.version)
  return version_;
}
inline void WorkflowTemplate::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowTemplate.version)
}

// .google.protobuf.Timestamp create_time = 4;
inline bool WorkflowTemplate::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& WorkflowTemplate::_internal_create_time() const {
  return *create_time_;
}
inline const ::google::protobuf::Timestamp& WorkflowTemplate::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* WorkflowTemplate::release_create_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplate.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* WorkflowTemplate::mutable_create_time() {
  
  if (create_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    create_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.create_time)
  return create_time_;
}
inline void WorkflowTemplate::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplate.create_time)
}

// .google.protobuf.Timestamp update_time = 5;
inline bool WorkflowTemplate::has_update_time() const {
  return this != internal_default_instance() && update_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& WorkflowTemplate::_internal_update_time() const {
  return *update_time_;
}
inline const ::google::protobuf::Timestamp& WorkflowTemplate::update_time() const {
  const ::google::protobuf::Timestamp* p = update_time_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.update_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* WorkflowTemplate::release_update_time() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplate.update_time)
  
  ::google::protobuf::Timestamp* temp = update_time_;
  update_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* WorkflowTemplate::mutable_update_time() {
  
  if (update_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    update_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.update_time)
  return update_time_;
}
inline void WorkflowTemplate::set_allocated_update_time(::google::protobuf::Timestamp* update_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_time_);
  }
  if (update_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(update_time)->GetArena();
    if (message_arena != submessage_arena) {
      update_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_time, submessage_arena);
    }
    
  } else {
    
  }
  update_time_ = update_time;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplate.update_time)
}

// map<string, string> labels = 6;
inline int WorkflowTemplate::labels_size() const {
  return labels_.size();
}
inline void WorkflowTemplate::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
WorkflowTemplate::labels() const {
  // @@protoc_insertion_point(field_map:google.cloud.dataproc.v1beta2.WorkflowTemplate.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
WorkflowTemplate::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.dataproc.v1beta2.WorkflowTemplate.labels)
  return labels_.MutableMap();
}

// .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
inline bool WorkflowTemplate::has_placement() const {
  return this != internal_default_instance() && placement_ != NULL;
}
inline void WorkflowTemplate::clear_placement() {
  if (GetArenaNoVirtual() == NULL && placement_ != NULL) {
    delete placement_;
  }
  placement_ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement& WorkflowTemplate::_internal_placement() const {
  return *placement_;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement& WorkflowTemplate::placement() const {
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* p = placement_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.placement)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement*>(
      &::google::cloud::dataproc::v1beta2::_WorkflowTemplatePlacement_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* WorkflowTemplate::release_placement() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplate.placement)
  
  ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* temp = placement_;
  placement_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* WorkflowTemplate::mutable_placement() {
  
  if (placement_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement>(GetArenaNoVirtual());
    placement_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.placement)
  return placement_;
}
inline void WorkflowTemplate::set_allocated_placement(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* placement) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete placement_;
  }
  if (placement) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      placement = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, placement, submessage_arena);
    }
    
  } else {
    
  }
  placement_ = placement;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplate.placement)
}

// repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
inline int WorkflowTemplate::jobs_size() const {
  return jobs_.size();
}
inline void WorkflowTemplate::clear_jobs() {
  jobs_.Clear();
}
inline ::google::cloud::dataproc::v1beta2::OrderedJob* WorkflowTemplate::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplate.jobs)
  return jobs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::OrderedJob >*
WorkflowTemplate::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1beta2.WorkflowTemplate.jobs)
  return &jobs_;
}
inline const ::google::cloud::dataproc::v1beta2::OrderedJob& WorkflowTemplate::jobs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplate.jobs)
  return jobs_.Get(index);
}
inline ::google::cloud::dataproc::v1beta2::OrderedJob* WorkflowTemplate::add_jobs() {
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.WorkflowTemplate.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::OrderedJob >&
WorkflowTemplate::jobs() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1beta2.WorkflowTemplate.jobs)
  return jobs_;
}

// -------------------------------------------------------------------

// WorkflowTemplatePlacement

// .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
inline bool WorkflowTemplatePlacement::has_managed_cluster() const {
  return placement_case() == kManagedCluster;
}
inline void WorkflowTemplatePlacement::set_has_managed_cluster() {
  _oneof_case_[0] = kManagedCluster;
}
inline void WorkflowTemplatePlacement::clear_managed_cluster() {
  if (has_managed_cluster()) {
    delete placement_.managed_cluster_;
    clear_has_placement();
  }
}
inline const ::google::cloud::dataproc::v1beta2::ManagedCluster& WorkflowTemplatePlacement::_internal_managed_cluster() const {
  return *placement_.managed_cluster_;
}
inline ::google::cloud::dataproc::v1beta2::ManagedCluster* WorkflowTemplatePlacement::release_managed_cluster() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.managed_cluster)
  if (has_managed_cluster()) {
    clear_has_placement();
      ::google::cloud::dataproc::v1beta2::ManagedCluster* temp = placement_.managed_cluster_;
    placement_.managed_cluster_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::ManagedCluster& WorkflowTemplatePlacement::managed_cluster() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.managed_cluster)
  return has_managed_cluster()
      ? *placement_.managed_cluster_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::ManagedCluster*>(&::google::cloud::dataproc::v1beta2::_ManagedCluster_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::ManagedCluster* WorkflowTemplatePlacement::mutable_managed_cluster() {
  if (!has_managed_cluster()) {
    clear_placement();
    set_has_managed_cluster();
    placement_.managed_cluster_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ManagedCluster >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.managed_cluster)
  return placement_.managed_cluster_;
}

// .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
inline bool WorkflowTemplatePlacement::has_cluster_selector() const {
  return placement_case() == kClusterSelector;
}
inline void WorkflowTemplatePlacement::set_has_cluster_selector() {
  _oneof_case_[0] = kClusterSelector;
}
inline void WorkflowTemplatePlacement::clear_cluster_selector() {
  if (has_cluster_selector()) {
    delete placement_.cluster_selector_;
    clear_has_placement();
  }
}
inline const ::google::cloud::dataproc::v1beta2::ClusterSelector& WorkflowTemplatePlacement::_internal_cluster_selector() const {
  return *placement_.cluster_selector_;
}
inline ::google::cloud::dataproc::v1beta2::ClusterSelector* WorkflowTemplatePlacement::release_cluster_selector() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.cluster_selector)
  if (has_cluster_selector()) {
    clear_has_placement();
      ::google::cloud::dataproc::v1beta2::ClusterSelector* temp = placement_.cluster_selector_;
    placement_.cluster_selector_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::ClusterSelector& WorkflowTemplatePlacement::cluster_selector() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.cluster_selector)
  return has_cluster_selector()
      ? *placement_.cluster_selector_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::ClusterSelector*>(&::google::cloud::dataproc::v1beta2::_ClusterSelector_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::ClusterSelector* WorkflowTemplatePlacement::mutable_cluster_selector() {
  if (!has_cluster_selector()) {
    clear_placement();
    set_has_cluster_selector();
    placement_.cluster_selector_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterSelector >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.cluster_selector)
  return placement_.cluster_selector_;
}

inline bool WorkflowTemplatePlacement::has_placement() const {
  return placement_case() != PLACEMENT_NOT_SET;
}
inline void WorkflowTemplatePlacement::clear_has_placement() {
  _oneof_case_[0] = PLACEMENT_NOT_SET;
}
inline WorkflowTemplatePlacement::PlacementCase WorkflowTemplatePlacement::placement_case() const {
  return WorkflowTemplatePlacement::PlacementCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ManagedCluster

// string cluster_name = 2;
inline void ManagedCluster::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManagedCluster::cluster_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void ManagedCluster::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
}
#if LANG_CXX11
inline void ManagedCluster::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
}
#endif
inline void ManagedCluster::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
}
inline void ManagedCluster::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
}
inline ::std::string* ManagedCluster::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManagedCluster::release_cluster_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManagedCluster::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name)
}

// .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
inline bool ManagedCluster::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterConfig& ManagedCluster::_internal_config() const {
  return *config_;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterConfig& ManagedCluster::config() const {
  const ::google::cloud::dataproc::v1beta2::ClusterConfig* p = config_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ManagedCluster.config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::ClusterConfig*>(
      &::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::ClusterConfig* ManagedCluster::release_config() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ManagedCluster.config)
  
  ::google::cloud::dataproc::v1beta2::ClusterConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::ClusterConfig* ManagedCluster::mutable_config() {
  
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterConfig>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ManagedCluster.config)
  return config_;
}
inline void ManagedCluster::set_allocated_config(::google::cloud::dataproc::v1beta2::ClusterConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ManagedCluster.config)
}

// map<string, string> labels = 4;
inline int ManagedCluster::labels_size() const {
  return labels_.size();
}
inline void ManagedCluster::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ManagedCluster::labels() const {
  // @@protoc_insertion_point(field_map:google.cloud.dataproc.v1beta2.ManagedCluster.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ManagedCluster::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.dataproc.v1beta2.ManagedCluster.labels)
  return labels_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClusterSelector

// string zone = 1;
inline void ClusterSelector::clear_zone() {
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterSelector::zone() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
  return zone_.GetNoArena();
}
inline void ClusterSelector::set_zone(const ::std::string& value) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
}
#if LANG_CXX11
inline void ClusterSelector::set_zone(::std::string&& value) {
  
  zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
}
#endif
inline void ClusterSelector::set_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
}
inline void ClusterSelector::set_zone(const char* value, size_t size) {
  
  zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
}
inline ::std::string* ClusterSelector::mutable_zone() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
  return zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterSelector::release_zone() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
  
  return zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterSelector::set_allocated_zone(::std::string* zone) {
  if (zone != NULL) {
    
  } else {
    
  }
  zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ClusterSelector.zone)
}

// map<string, string> cluster_labels = 2;
inline int ClusterSelector::cluster_labels_size() const {
  return cluster_labels_.size();
}
inline void ClusterSelector::clear_cluster_labels() {
  cluster_labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ClusterSelector::cluster_labels() const {
  // @@protoc_insertion_point(field_map:google.cloud.dataproc.v1beta2.ClusterSelector.cluster_labels)
  return cluster_labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ClusterSelector::mutable_cluster_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.dataproc.v1beta2.ClusterSelector.cluster_labels)
  return cluster_labels_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OrderedJob

// string step_id = 1;
inline void OrderedJob::clear_step_id() {
  step_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderedJob::step_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
  return step_id_.GetNoArena();
}
inline void OrderedJob::set_step_id(const ::std::string& value) {
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
}
#if LANG_CXX11
inline void OrderedJob::set_step_id(::std::string&& value) {
  
  step_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
}
#endif
inline void OrderedJob::set_step_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
}
inline void OrderedJob::set_step_id(const char* value, size_t size) {
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
}
inline ::std::string* OrderedJob::mutable_step_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
  return step_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderedJob::release_step_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
  
  return step_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderedJob::set_allocated_step_id(::std::string* step_id) {
  if (step_id != NULL) {
    
  } else {
    
  }
  step_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), step_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.step_id)
}

// .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
inline bool OrderedJob::has_hadoop_job() const {
  return job_type_case() == kHadoopJob;
}
inline void OrderedJob::set_has_hadoop_job() {
  _oneof_case_[0] = kHadoopJob;
}
inline const ::google::cloud::dataproc::v1beta2::HadoopJob& OrderedJob::_internal_hadoop_job() const {
  return *job_type_.hadoop_job_;
}
inline ::google::cloud::dataproc::v1beta2::HadoopJob* OrderedJob::release_hadoop_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.hadoop_job)
  if (has_hadoop_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::HadoopJob* temp = job_type_.hadoop_job_;
    job_type_.hadoop_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::HadoopJob& OrderedJob::hadoop_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.hadoop_job)
  return has_hadoop_job()
      ? *job_type_.hadoop_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::HadoopJob*>(&::google::cloud::dataproc::v1beta2::_HadoopJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::HadoopJob* OrderedJob::mutable_hadoop_job() {
  if (!has_hadoop_job()) {
    clear_job_type();
    set_has_hadoop_job();
    job_type_.hadoop_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::HadoopJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.hadoop_job)
  return job_type_.hadoop_job_;
}

// .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
inline bool OrderedJob::has_spark_job() const {
  return job_type_case() == kSparkJob;
}
inline void OrderedJob::set_has_spark_job() {
  _oneof_case_[0] = kSparkJob;
}
inline const ::google::cloud::dataproc::v1beta2::SparkJob& OrderedJob::_internal_spark_job() const {
  return *job_type_.spark_job_;
}
inline ::google::cloud::dataproc::v1beta2::SparkJob* OrderedJob::release_spark_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.spark_job)
  if (has_spark_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::SparkJob* temp = job_type_.spark_job_;
    job_type_.spark_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::SparkJob& OrderedJob::spark_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.spark_job)
  return has_spark_job()
      ? *job_type_.spark_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::SparkJob*>(&::google::cloud::dataproc::v1beta2::_SparkJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::SparkJob* OrderedJob::mutable_spark_job() {
  if (!has_spark_job()) {
    clear_job_type();
    set_has_spark_job();
    job_type_.spark_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::SparkJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.spark_job)
  return job_type_.spark_job_;
}

// .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
inline bool OrderedJob::has_pyspark_job() const {
  return job_type_case() == kPysparkJob;
}
inline void OrderedJob::set_has_pyspark_job() {
  _oneof_case_[0] = kPysparkJob;
}
inline const ::google::cloud::dataproc::v1beta2::PySparkJob& OrderedJob::_internal_pyspark_job() const {
  return *job_type_.pyspark_job_;
}
inline ::google::cloud::dataproc::v1beta2::PySparkJob* OrderedJob::release_pyspark_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.pyspark_job)
  if (has_pyspark_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::PySparkJob* temp = job_type_.pyspark_job_;
    job_type_.pyspark_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::PySparkJob& OrderedJob::pyspark_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.pyspark_job)
  return has_pyspark_job()
      ? *job_type_.pyspark_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::PySparkJob*>(&::google::cloud::dataproc::v1beta2::_PySparkJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::PySparkJob* OrderedJob::mutable_pyspark_job() {
  if (!has_pyspark_job()) {
    clear_job_type();
    set_has_pyspark_job();
    job_type_.pyspark_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::PySparkJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.pyspark_job)
  return job_type_.pyspark_job_;
}

// .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
inline bool OrderedJob::has_hive_job() const {
  return job_type_case() == kHiveJob;
}
inline void OrderedJob::set_has_hive_job() {
  _oneof_case_[0] = kHiveJob;
}
inline const ::google::cloud::dataproc::v1beta2::HiveJob& OrderedJob::_internal_hive_job() const {
  return *job_type_.hive_job_;
}
inline ::google::cloud::dataproc::v1beta2::HiveJob* OrderedJob::release_hive_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.hive_job)
  if (has_hive_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::HiveJob* temp = job_type_.hive_job_;
    job_type_.hive_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::HiveJob& OrderedJob::hive_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.hive_job)
  return has_hive_job()
      ? *job_type_.hive_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::HiveJob*>(&::google::cloud::dataproc::v1beta2::_HiveJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::HiveJob* OrderedJob::mutable_hive_job() {
  if (!has_hive_job()) {
    clear_job_type();
    set_has_hive_job();
    job_type_.hive_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::HiveJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.hive_job)
  return job_type_.hive_job_;
}

// .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
inline bool OrderedJob::has_pig_job() const {
  return job_type_case() == kPigJob;
}
inline void OrderedJob::set_has_pig_job() {
  _oneof_case_[0] = kPigJob;
}
inline const ::google::cloud::dataproc::v1beta2::PigJob& OrderedJob::_internal_pig_job() const {
  return *job_type_.pig_job_;
}
inline ::google::cloud::dataproc::v1beta2::PigJob* OrderedJob::release_pig_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.pig_job)
  if (has_pig_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::PigJob* temp = job_type_.pig_job_;
    job_type_.pig_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::PigJob& OrderedJob::pig_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.pig_job)
  return has_pig_job()
      ? *job_type_.pig_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::PigJob*>(&::google::cloud::dataproc::v1beta2::_PigJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::PigJob* OrderedJob::mutable_pig_job() {
  if (!has_pig_job()) {
    clear_job_type();
    set_has_pig_job();
    job_type_.pig_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::PigJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.pig_job)
  return job_type_.pig_job_;
}

// .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
inline bool OrderedJob::has_spark_sql_job() const {
  return job_type_case() == kSparkSqlJob;
}
inline void OrderedJob::set_has_spark_sql_job() {
  _oneof_case_[0] = kSparkSqlJob;
}
inline const ::google::cloud::dataproc::v1beta2::SparkSqlJob& OrderedJob::_internal_spark_sql_job() const {
  return *job_type_.spark_sql_job_;
}
inline ::google::cloud::dataproc::v1beta2::SparkSqlJob* OrderedJob::release_spark_sql_job() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.spark_sql_job)
  if (has_spark_sql_job()) {
    clear_has_job_type();
      ::google::cloud::dataproc::v1beta2::SparkSqlJob* temp = job_type_.spark_sql_job_;
    job_type_.spark_sql_job_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::cloud::dataproc::v1beta2::SparkSqlJob& OrderedJob::spark_sql_job() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.spark_sql_job)
  return has_spark_sql_job()
      ? *job_type_.spark_sql_job_
      : *reinterpret_cast< ::google::cloud::dataproc::v1beta2::SparkSqlJob*>(&::google::cloud::dataproc::v1beta2::_SparkSqlJob_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::SparkSqlJob* OrderedJob::mutable_spark_sql_job() {
  if (!has_spark_sql_job()) {
    clear_job_type();
    set_has_spark_sql_job();
    job_type_.spark_sql_job_ = CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::SparkSqlJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.spark_sql_job)
  return job_type_.spark_sql_job_;
}

// map<string, string> labels = 8;
inline int OrderedJob::labels_size() const {
  return labels_.size();
}
inline void OrderedJob::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
OrderedJob::labels() const {
  // @@protoc_insertion_point(field_map:google.cloud.dataproc.v1beta2.OrderedJob.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
OrderedJob::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.dataproc.v1beta2.OrderedJob.labels)
  return labels_.MutableMap();
}

// .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
inline bool OrderedJob::has_scheduling() const {
  return this != internal_default_instance() && scheduling_ != NULL;
}
inline const ::google::cloud::dataproc::v1beta2::JobScheduling& OrderedJob::_internal_scheduling() const {
  return *scheduling_;
}
inline const ::google::cloud::dataproc::v1beta2::JobScheduling& OrderedJob::scheduling() const {
  const ::google::cloud::dataproc::v1beta2::JobScheduling* p = scheduling_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.scheduling)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::JobScheduling*>(
      &::google::cloud::dataproc::v1beta2::_JobScheduling_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::JobScheduling* OrderedJob::release_scheduling() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.OrderedJob.scheduling)
  
  ::google::cloud::dataproc::v1beta2::JobScheduling* temp = scheduling_;
  scheduling_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::JobScheduling* OrderedJob::mutable_scheduling() {
  
  if (scheduling_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::JobScheduling>(GetArenaNoVirtual());
    scheduling_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.scheduling)
  return scheduling_;
}
inline void OrderedJob::set_allocated_scheduling(::google::cloud::dataproc::v1beta2::JobScheduling* scheduling) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scheduling_);
  }
  if (scheduling) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scheduling = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scheduling, submessage_arena);
    }
    
  } else {
    
  }
  scheduling_ = scheduling;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.scheduling)
}

// repeated string prerequisite_step_ids = 10;
inline int OrderedJob::prerequisite_step_ids_size() const {
  return prerequisite_step_ids_.size();
}
inline void OrderedJob::clear_prerequisite_step_ids() {
  prerequisite_step_ids_.Clear();
}
inline const ::std::string& OrderedJob::prerequisite_step_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  return prerequisite_step_ids_.Get(index);
}
inline ::std::string* OrderedJob::mutable_prerequisite_step_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  return prerequisite_step_ids_.Mutable(index);
}
inline void OrderedJob::set_prerequisite_step_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  prerequisite_step_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void OrderedJob::set_prerequisite_step_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  prerequisite_step_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void OrderedJob::set_prerequisite_step_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prerequisite_step_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
inline void OrderedJob::set_prerequisite_step_ids(int index, const char* value, size_t size) {
  prerequisite_step_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
inline ::std::string* OrderedJob::add_prerequisite_step_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  return prerequisite_step_ids_.Add();
}
inline void OrderedJob::add_prerequisite_step_ids(const ::std::string& value) {
  prerequisite_step_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
#if LANG_CXX11
inline void OrderedJob::add_prerequisite_step_ids(::std::string&& value) {
  prerequisite_step_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
#endif
inline void OrderedJob::add_prerequisite_step_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prerequisite_step_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
inline void OrderedJob::add_prerequisite_step_ids(const char* value, size_t size) {
  prerequisite_step_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OrderedJob::prerequisite_step_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  return prerequisite_step_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OrderedJob::mutable_prerequisite_step_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids)
  return &prerequisite_step_ids_;
}

inline bool OrderedJob::has_job_type() const {
  return job_type_case() != JOB_TYPE_NOT_SET;
}
inline void OrderedJob::clear_has_job_type() {
  _oneof_case_[0] = JOB_TYPE_NOT_SET;
}
inline OrderedJob::JobTypeCase OrderedJob::job_type_case() const {
  return OrderedJob::JobTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WorkflowMetadata

// string template = 1;
inline void WorkflowMetadata::clear_template_() {
  template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowMetadata::template_() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
  return template__.GetNoArena();
}
inline void WorkflowMetadata::set_template_(const ::std::string& value) {
  
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
}
#if LANG_CXX11
inline void WorkflowMetadata::set_template_(::std::string&& value) {
  
  template__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
}
#endif
inline void WorkflowMetadata::set_template_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
}
inline void WorkflowMetadata::set_template_(const char* value, size_t size) {
  
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
}
inline ::std::string* WorkflowMetadata::mutable_template_() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
  return template__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowMetadata::release_template_() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
  
  return template__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowMetadata::set_allocated_template_(::std::string* template_) {
  if (template_ != NULL) {
    
  } else {
    
  }
  template__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), template_);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowMetadata.template)
}

// int32 version = 2;
inline void WorkflowMetadata::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 WorkflowMetadata::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.version)
  return version_;
}
inline void WorkflowMetadata::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowMetadata.version)
}

// .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
inline bool WorkflowMetadata::has_create_cluster() const {
  return this != internal_default_instance() && create_cluster_ != NULL;
}
inline void WorkflowMetadata::clear_create_cluster() {
  if (GetArenaNoVirtual() == NULL && create_cluster_ != NULL) {
    delete create_cluster_;
  }
  create_cluster_ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterOperation& WorkflowMetadata::_internal_create_cluster() const {
  return *create_cluster_;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterOperation& WorkflowMetadata::create_cluster() const {
  const ::google::cloud::dataproc::v1beta2::ClusterOperation* p = create_cluster_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.create_cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::ClusterOperation*>(
      &::google::cloud::dataproc::v1beta2::_ClusterOperation_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::ClusterOperation* WorkflowMetadata::release_create_cluster() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowMetadata.create_cluster)
  
  ::google::cloud::dataproc::v1beta2::ClusterOperation* temp = create_cluster_;
  create_cluster_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::ClusterOperation* WorkflowMetadata::mutable_create_cluster() {
  
  if (create_cluster_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterOperation>(GetArenaNoVirtual());
    create_cluster_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowMetadata.create_cluster)
  return create_cluster_;
}
inline void WorkflowMetadata::set_allocated_create_cluster(::google::cloud::dataproc::v1beta2::ClusterOperation* create_cluster) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete create_cluster_;
  }
  if (create_cluster) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      create_cluster = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_cluster, submessage_arena);
    }
    
  } else {
    
  }
  create_cluster_ = create_cluster;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowMetadata.create_cluster)
}

// .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
inline bool WorkflowMetadata::has_graph() const {
  return this != internal_default_instance() && graph_ != NULL;
}
inline void WorkflowMetadata::clear_graph() {
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
    delete graph_;
  }
  graph_ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowGraph& WorkflowMetadata::_internal_graph() const {
  return *graph_;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowGraph& WorkflowMetadata::graph() const {
  const ::google::cloud::dataproc::v1beta2::WorkflowGraph* p = graph_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.graph)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::WorkflowGraph*>(
      &::google::cloud::dataproc::v1beta2::_WorkflowGraph_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowGraph* WorkflowMetadata::release_graph() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowMetadata.graph)
  
  ::google::cloud::dataproc::v1beta2::WorkflowGraph* temp = graph_;
  graph_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowGraph* WorkflowMetadata::mutable_graph() {
  
  if (graph_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowGraph>(GetArenaNoVirtual());
    graph_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowMetadata.graph)
  return graph_;
}
inline void WorkflowMetadata::set_allocated_graph(::google::cloud::dataproc::v1beta2::WorkflowGraph* graph) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete graph_;
  }
  if (graph) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graph = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph, submessage_arena);
    }
    
  } else {
    
  }
  graph_ = graph;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowMetadata.graph)
}

// .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
inline bool WorkflowMetadata::has_delete_cluster() const {
  return this != internal_default_instance() && delete_cluster_ != NULL;
}
inline void WorkflowMetadata::clear_delete_cluster() {
  if (GetArenaNoVirtual() == NULL && delete_cluster_ != NULL) {
    delete delete_cluster_;
  }
  delete_cluster_ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterOperation& WorkflowMetadata::_internal_delete_cluster() const {
  return *delete_cluster_;
}
inline const ::google::cloud::dataproc::v1beta2::ClusterOperation& WorkflowMetadata::delete_cluster() const {
  const ::google::cloud::dataproc::v1beta2::ClusterOperation* p = delete_cluster_;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.delete_cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::ClusterOperation*>(
      &::google::cloud::dataproc::v1beta2::_ClusterOperation_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::ClusterOperation* WorkflowMetadata::release_delete_cluster() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowMetadata.delete_cluster)
  
  ::google::cloud::dataproc::v1beta2::ClusterOperation* temp = delete_cluster_;
  delete_cluster_ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::ClusterOperation* WorkflowMetadata::mutable_delete_cluster() {
  
  if (delete_cluster_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::ClusterOperation>(GetArenaNoVirtual());
    delete_cluster_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowMetadata.delete_cluster)
  return delete_cluster_;
}
inline void WorkflowMetadata::set_allocated_delete_cluster(::google::cloud::dataproc::v1beta2::ClusterOperation* delete_cluster) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete delete_cluster_;
  }
  if (delete_cluster) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_cluster = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_cluster, submessage_arena);
    }
    
  } else {
    
  }
  delete_cluster_ = delete_cluster;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowMetadata.delete_cluster)
}

// .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
inline void WorkflowMetadata::clear_state() {
  state_ = 0;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State WorkflowMetadata::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.state)
  return static_cast< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State >(state_);
}
inline void WorkflowMetadata::set_state(::google::cloud::dataproc::v1beta2::WorkflowMetadata_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowMetadata.state)
}

// string cluster_name = 7;
inline void WorkflowMetadata::clear_cluster_name() {
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowMetadata::cluster_name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
  return cluster_name_.GetNoArena();
}
inline void WorkflowMetadata::set_cluster_name(const ::std::string& value) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
}
#if LANG_CXX11
inline void WorkflowMetadata::set_cluster_name(::std::string&& value) {
  
  cluster_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
}
#endif
inline void WorkflowMetadata::set_cluster_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
}
inline void WorkflowMetadata::set_cluster_name(const char* value, size_t size) {
  
  cluster_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
}
inline ::std::string* WorkflowMetadata::mutable_cluster_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
  return cluster_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowMetadata::release_cluster_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
  
  return cluster_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowMetadata::set_allocated_cluster_name(::std::string* cluster_name) {
  if (cluster_name != NULL) {
    
  } else {
    
  }
  cluster_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name)
}

// map<string, string> parameters = 8;
inline int WorkflowMetadata::parameters_size() const {
  return parameters_.size();
}
inline void WorkflowMetadata::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
WorkflowMetadata::parameters() const {
  // @@protoc_insertion_point(field_map:google.cloud.dataproc.v1beta2.WorkflowMetadata.parameters)
  return parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
WorkflowMetadata::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:google.cloud.dataproc.v1beta2.WorkflowMetadata.parameters)
  return parameters_.MutableMap();
}

// -------------------------------------------------------------------

// ClusterOperation

// string operation_id = 1;
inline void ClusterOperation::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperation::operation_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
  return operation_id_.GetNoArena();
}
inline void ClusterOperation::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
}
#if LANG_CXX11
inline void ClusterOperation::set_operation_id(::std::string&& value) {
  
  operation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
}
#endif
inline void ClusterOperation::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
}
inline void ClusterOperation::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
}
inline ::std::string* ClusterOperation::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperation::release_operation_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperation::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ClusterOperation.operation_id)
}

// string error = 2;
inline void ClusterOperation::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterOperation::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ClusterOperation.error)
  return error_.GetNoArena();
}
inline void ClusterOperation::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ClusterOperation.error)
}
#if LANG_CXX11
inline void ClusterOperation::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ClusterOperation.error)
}
#endif
inline void ClusterOperation::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ClusterOperation.error)
}
inline void ClusterOperation::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ClusterOperation.error)
}
inline ::std::string* ClusterOperation::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ClusterOperation.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterOperation::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ClusterOperation.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterOperation::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ClusterOperation.error)
}

// bool done = 3;
inline void ClusterOperation::clear_done() {
  done_ = false;
}
inline bool ClusterOperation::done() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ClusterOperation.done)
  return done_;
}
inline void ClusterOperation::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ClusterOperation.done)
}

// -------------------------------------------------------------------

// WorkflowGraph

// repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
inline int WorkflowGraph::nodes_size() const {
  return nodes_.size();
}
inline void WorkflowGraph::clear_nodes() {
  nodes_.Clear();
}
inline ::google::cloud::dataproc::v1beta2::WorkflowNode* WorkflowGraph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowGraph.nodes)
  return nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowNode >*
WorkflowGraph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1beta2.WorkflowGraph.nodes)
  return &nodes_;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowNode& WorkflowGraph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowGraph.nodes)
  return nodes_.Get(index);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowNode* WorkflowGraph::add_nodes() {
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.WorkflowGraph.nodes)
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowNode >&
WorkflowGraph::nodes() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1beta2.WorkflowGraph.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// WorkflowNode

// string step_id = 1;
inline void WorkflowNode::clear_step_id() {
  step_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowNode::step_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
  return step_id_.GetNoArena();
}
inline void WorkflowNode::set_step_id(const ::std::string& value) {
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
}
#if LANG_CXX11
inline void WorkflowNode::set_step_id(::std::string&& value) {
  
  step_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
}
#endif
inline void WorkflowNode::set_step_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
}
inline void WorkflowNode::set_step_id(const char* value, size_t size) {
  
  step_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
}
inline ::std::string* WorkflowNode::mutable_step_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
  return step_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowNode::release_step_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
  
  return step_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowNode::set_allocated_step_id(::std::string* step_id) {
  if (step_id != NULL) {
    
  } else {
    
  }
  step_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), step_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowNode.step_id)
}

// repeated string prerequisite_step_ids = 2;
inline int WorkflowNode::prerequisite_step_ids_size() const {
  return prerequisite_step_ids_.size();
}
inline void WorkflowNode::clear_prerequisite_step_ids() {
  prerequisite_step_ids_.Clear();
}
inline const ::std::string& WorkflowNode::prerequisite_step_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  return prerequisite_step_ids_.Get(index);
}
inline ::std::string* WorkflowNode::mutable_prerequisite_step_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  return prerequisite_step_ids_.Mutable(index);
}
inline void WorkflowNode::set_prerequisite_step_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  prerequisite_step_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void WorkflowNode::set_prerequisite_step_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  prerequisite_step_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void WorkflowNode::set_prerequisite_step_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prerequisite_step_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
inline void WorkflowNode::set_prerequisite_step_ids(int index, const char* value, size_t size) {
  prerequisite_step_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
inline ::std::string* WorkflowNode::add_prerequisite_step_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  return prerequisite_step_ids_.Add();
}
inline void WorkflowNode::add_prerequisite_step_ids(const ::std::string& value) {
  prerequisite_step_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
#if LANG_CXX11
inline void WorkflowNode::add_prerequisite_step_ids(::std::string&& value) {
  prerequisite_step_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
#endif
inline void WorkflowNode::add_prerequisite_step_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  prerequisite_step_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
inline void WorkflowNode::add_prerequisite_step_ids(const char* value, size_t size) {
  prerequisite_step_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WorkflowNode::prerequisite_step_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  return prerequisite_step_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WorkflowNode::mutable_prerequisite_step_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids)
  return &prerequisite_step_ids_;
}

// string job_id = 3;
inline void WorkflowNode::clear_job_id() {
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowNode::job_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
  return job_id_.GetNoArena();
}
inline void WorkflowNode::set_job_id(const ::std::string& value) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
}
#if LANG_CXX11
inline void WorkflowNode::set_job_id(::std::string&& value) {
  
  job_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
}
#endif
inline void WorkflowNode::set_job_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
}
inline void WorkflowNode::set_job_id(const char* value, size_t size) {
  
  job_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
}
inline ::std::string* WorkflowNode::mutable_job_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
  return job_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowNode::release_job_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
  
  return job_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowNode::set_allocated_job_id(::std::string* job_id) {
  if (job_id != NULL) {
    
  } else {
    
  }
  job_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), job_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowNode.job_id)
}

// .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
inline void WorkflowNode::clear_state() {
  state_ = 0;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState WorkflowNode::state() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowNode.state)
  return static_cast< ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState >(state_);
}
inline void WorkflowNode::set_state(::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.state)
}

// string error = 6;
inline void WorkflowNode::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowNode::error() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.WorkflowNode.error)
  return error_.GetNoArena();
}
inline void WorkflowNode::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.WorkflowNode.error)
}
#if LANG_CXX11
inline void WorkflowNode::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.WorkflowNode.error)
}
#endif
inline void WorkflowNode::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.WorkflowNode.error)
}
inline void WorkflowNode::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.WorkflowNode.error)
}
inline ::std::string* WorkflowNode::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.WorkflowNode.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowNode::release_error() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.WorkflowNode.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowNode::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowNode.error)
}

// -------------------------------------------------------------------

// CreateWorkflowTemplateRequest

// string parent = 1;
inline void CreateWorkflowTemplateRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateWorkflowTemplateRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateWorkflowTemplateRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
}
#if LANG_CXX11
inline void CreateWorkflowTemplateRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
}
#endif
inline void CreateWorkflowTemplateRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
}
inline void CreateWorkflowTemplateRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
}
inline ::std::string* CreateWorkflowTemplateRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateWorkflowTemplateRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateWorkflowTemplateRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent)
}

// .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
inline bool CreateWorkflowTemplateRequest::has_template_() const {
  return this != internal_default_instance() && template__ != NULL;
}
inline void CreateWorkflowTemplateRequest::clear_template_() {
  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& CreateWorkflowTemplateRequest::_internal_template_() const {
  return *template__;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& CreateWorkflowTemplateRequest::template_() const {
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate* p = template__;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.template)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      &::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* CreateWorkflowTemplateRequest::release_template_() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.template)
  
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* temp = template__;
  template__ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* CreateWorkflowTemplateRequest::mutable_template_() {
  
  if (template__ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplate>(GetArenaNoVirtual());
    template__ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.template)
  return template__;
}
inline void CreateWorkflowTemplateRequest::set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete template__;
  }
  if (template_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      template_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, template_, submessage_arena);
    }
    
  } else {
    
  }
  template__ = template_;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.template)
}

// -------------------------------------------------------------------

// GetWorkflowTemplateRequest

// string name = 1;
inline void GetWorkflowTemplateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowTemplateRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
  return name_.GetNoArena();
}
inline void GetWorkflowTemplateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
}
#if LANG_CXX11
inline void GetWorkflowTemplateRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
}
#endif
inline void GetWorkflowTemplateRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
}
inline void GetWorkflowTemplateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
}
inline ::std::string* GetWorkflowTemplateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowTemplateRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowTemplateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name)
}

// int32 version = 2;
inline void GetWorkflowTemplateRequest::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 GetWorkflowTemplateRequest::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.version)
  return version_;
}
inline void GetWorkflowTemplateRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.version)
}

// -------------------------------------------------------------------

// InstantiateWorkflowTemplateRequest

// string name = 1;
inline void InstantiateWorkflowTemplateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantiateWorkflowTemplateRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
  return name_.GetNoArena();
}
inline void InstantiateWorkflowTemplateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
}
#if LANG_CXX11
inline void InstantiateWorkflowTemplateRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
}
#endif
inline void InstantiateWorkflowTemplateRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
}
inline void InstantiateWorkflowTemplateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
}
inline ::std::string* InstantiateWorkflowTemplateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantiateWorkflowTemplateRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantiateWorkflowTemplateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name)
}

// int32 version = 2;
inline void InstantiateWorkflowTemplateRequest::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 InstantiateWorkflowTemplateRequest::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.version)
  return version_;
}
inline void InstantiateWorkflowTemplateRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.version)
}

// string instance_id = 3;
inline void InstantiateWorkflowTemplateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantiateWorkflowTemplateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void InstantiateWorkflowTemplateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
}
#if LANG_CXX11
inline void InstantiateWorkflowTemplateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
}
#endif
inline void InstantiateWorkflowTemplateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
}
inline void InstantiateWorkflowTemplateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
}
inline ::std::string* InstantiateWorkflowTemplateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantiateWorkflowTemplateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantiateWorkflowTemplateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id)
}

// -------------------------------------------------------------------

// InstantiateInlineWorkflowTemplateRequest

// string parent = 1;
inline void InstantiateInlineWorkflowTemplateRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantiateInlineWorkflowTemplateRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
  return parent_.GetNoArena();
}
inline void InstantiateInlineWorkflowTemplateRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
}
#if LANG_CXX11
inline void InstantiateInlineWorkflowTemplateRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
}
#endif
inline void InstantiateInlineWorkflowTemplateRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
}
inline void InstantiateInlineWorkflowTemplateRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
}
inline ::std::string* InstantiateInlineWorkflowTemplateRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantiateInlineWorkflowTemplateRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantiateInlineWorkflowTemplateRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent)
}

// .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
inline bool InstantiateInlineWorkflowTemplateRequest::has_template_() const {
  return this != internal_default_instance() && template__ != NULL;
}
inline void InstantiateInlineWorkflowTemplateRequest::clear_template_() {
  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& InstantiateInlineWorkflowTemplateRequest::_internal_template_() const {
  return *template__;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& InstantiateInlineWorkflowTemplateRequest::template_() const {
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate* p = template__;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.template)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      &::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* InstantiateInlineWorkflowTemplateRequest::release_template_() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.template)
  
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* temp = template__;
  template__ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* InstantiateInlineWorkflowTemplateRequest::mutable_template_() {
  
  if (template__ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplate>(GetArenaNoVirtual());
    template__ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.template)
  return template__;
}
inline void InstantiateInlineWorkflowTemplateRequest::set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete template__;
  }
  if (template_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      template_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, template_, submessage_arena);
    }
    
  } else {
    
  }
  template__ = template_;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.template)
}

// string instance_id = 3;
inline void InstantiateInlineWorkflowTemplateRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstantiateInlineWorkflowTemplateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void InstantiateInlineWorkflowTemplateRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
}
#if LANG_CXX11
inline void InstantiateInlineWorkflowTemplateRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
}
#endif
inline void InstantiateInlineWorkflowTemplateRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
}
inline void InstantiateInlineWorkflowTemplateRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
}
inline ::std::string* InstantiateInlineWorkflowTemplateRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstantiateInlineWorkflowTemplateRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstantiateInlineWorkflowTemplateRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id)
}

// -------------------------------------------------------------------

// UpdateWorkflowTemplateRequest

// .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
inline bool UpdateWorkflowTemplateRequest::has_template_() const {
  return this != internal_default_instance() && template__ != NULL;
}
inline void UpdateWorkflowTemplateRequest::clear_template_() {
  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& UpdateWorkflowTemplateRequest::_internal_template_() const {
  return *template__;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& UpdateWorkflowTemplateRequest::template_() const {
  const ::google::cloud::dataproc::v1beta2::WorkflowTemplate* p = template__;
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest.template)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      &::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* UpdateWorkflowTemplateRequest::release_template_() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest.template)
  
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate* temp = template__;
  template__ = NULL;
  return temp;
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* UpdateWorkflowTemplateRequest::mutable_template_() {
  
  if (template__ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::dataproc::v1beta2::WorkflowTemplate>(GetArenaNoVirtual());
    template__ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest.template)
  return template__;
}
inline void UpdateWorkflowTemplateRequest::set_allocated_template_(::google::cloud::dataproc::v1beta2::WorkflowTemplate* template_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete template__;
  }
  if (template_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      template_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, template_, submessage_arena);
    }
    
  } else {
    
  }
  template__ = template_;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest.template)
}

// -------------------------------------------------------------------

// ListWorkflowTemplatesRequest

// string parent = 1;
inline void ListWorkflowTemplatesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWorkflowTemplatesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListWorkflowTemplatesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
}
#if LANG_CXX11
inline void ListWorkflowTemplatesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
}
#endif
inline void ListWorkflowTemplatesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
}
inline void ListWorkflowTemplatesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
}
inline ::std::string* ListWorkflowTemplatesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWorkflowTemplatesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWorkflowTemplatesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent)
}

// int32 page_size = 2;
inline void ListWorkflowTemplatesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListWorkflowTemplatesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_size)
  return page_size_;
}
inline void ListWorkflowTemplatesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_size)
}

// string page_token = 3;
inline void ListWorkflowTemplatesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWorkflowTemplatesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListWorkflowTemplatesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
}
#if LANG_CXX11
inline void ListWorkflowTemplatesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
}
#endif
inline void ListWorkflowTemplatesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
}
inline void ListWorkflowTemplatesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
}
inline ::std::string* ListWorkflowTemplatesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWorkflowTemplatesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWorkflowTemplatesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token)
}

// -------------------------------------------------------------------

// ListWorkflowTemplatesResponse

// repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
inline int ListWorkflowTemplatesResponse::templates_size() const {
  return templates_.size();
}
inline void ListWorkflowTemplatesResponse::clear_templates() {
  templates_.Clear();
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* ListWorkflowTemplatesResponse::mutable_templates(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.templates)
  return templates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >*
ListWorkflowTemplatesResponse::mutable_templates() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.templates)
  return &templates_;
}
inline const ::google::cloud::dataproc::v1beta2::WorkflowTemplate& ListWorkflowTemplatesResponse::templates(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.templates)
  return templates_.Get(index);
}
inline ::google::cloud::dataproc::v1beta2::WorkflowTemplate* ListWorkflowTemplatesResponse::add_templates() {
  // @@protoc_insertion_point(field_add:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.templates)
  return templates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >&
ListWorkflowTemplatesResponse::templates() const {
  // @@protoc_insertion_point(field_list:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.templates)
  return templates_;
}

// string next_page_token = 2;
inline void ListWorkflowTemplatesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListWorkflowTemplatesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListWorkflowTemplatesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListWorkflowTemplatesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
}
#endif
inline void ListWorkflowTemplatesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
}
inline void ListWorkflowTemplatesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
}
inline ::std::string* ListWorkflowTemplatesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListWorkflowTemplatesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListWorkflowTemplatesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteWorkflowTemplateRequest

// string name = 1;
inline void DeleteWorkflowTemplateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteWorkflowTemplateRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
  return name_.GetNoArena();
}
inline void DeleteWorkflowTemplateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
}
#if LANG_CXX11
inline void DeleteWorkflowTemplateRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
}
#endif
inline void DeleteWorkflowTemplateRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
}
inline void DeleteWorkflowTemplateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
}
inline ::std::string* DeleteWorkflowTemplateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteWorkflowTemplateRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteWorkflowTemplateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name)
}

// int32 version = 2;
inline void DeleteWorkflowTemplateRequest::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 DeleteWorkflowTemplateRequest::version() const {
  // @@protoc_insertion_point(field_get:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.version)
  return version_;
}
inline void DeleteWorkflowTemplateRequest::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State>() {
  return ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State_descriptor();
}
template <> struct is_proto_enum< ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState>() {
  return ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto
