// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1beta2/clusters.proto

#include "google/cloud/dataproc/v1beta2/clusters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterMetrics_HdfsMetricsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterMetrics_YarnMetricsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DiskConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GceClusterConfig_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ManagedGroupConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SoftwareConfig_PropertiesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClusterStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GceClusterConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NodeInitializationAction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SoftwareConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ClusterMetrics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LifecycleConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_InstanceGroupConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Cluster;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ClusterConfig;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {
class Cluster_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster_LabelsEntry_DoNotUse>
      _instance;
} _Cluster_LabelsEntry_DoNotUse_default_instance_;
class ClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cluster>
      _instance;
} _Cluster_default_instance_;
class ClusterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterConfig>
      _instance;
} _ClusterConfig_default_instance_;
class GceClusterConfig_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GceClusterConfig_MetadataEntry_DoNotUse>
      _instance;
} _GceClusterConfig_MetadataEntry_DoNotUse_default_instance_;
class GceClusterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GceClusterConfig>
      _instance;
} _GceClusterConfig_default_instance_;
class InstanceGroupConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstanceGroupConfig>
      _instance;
} _InstanceGroupConfig_default_instance_;
class ManagedGroupConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagedGroupConfig>
      _instance;
} _ManagedGroupConfig_default_instance_;
class AcceleratorConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceleratorConfig>
      _instance;
} _AcceleratorConfig_default_instance_;
class DiskConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiskConfig>
      _instance;
} _DiskConfig_default_instance_;
class LifecycleConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LifecycleConfig>
      _instance;
  const ::google::protobuf::Timestamp* auto_delete_time_;
  const ::google::protobuf::Duration* auto_delete_ttl_;
} _LifecycleConfig_default_instance_;
class NodeInitializationActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeInitializationAction>
      _instance;
} _NodeInitializationAction_default_instance_;
class ClusterStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterStatus>
      _instance;
} _ClusterStatus_default_instance_;
class SoftwareConfig_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SoftwareConfig_PropertiesEntry_DoNotUse>
      _instance;
} _SoftwareConfig_PropertiesEntry_DoNotUse_default_instance_;
class SoftwareConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SoftwareConfig>
      _instance;
} _SoftwareConfig_default_instance_;
class ClusterMetrics_HdfsMetricsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterMetrics_HdfsMetricsEntry_DoNotUse>
      _instance;
} _ClusterMetrics_HdfsMetricsEntry_DoNotUse_default_instance_;
class ClusterMetrics_YarnMetricsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterMetrics_YarnMetricsEntry_DoNotUse>
      _instance;
} _ClusterMetrics_YarnMetricsEntry_DoNotUse_default_instance_;
class ClusterMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterMetrics>
      _instance;
} _ClusterMetrics_default_instance_;
class CreateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterRequest>
      _instance;
} _CreateClusterRequest_default_instance_;
class UpdateClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateClusterRequest>
      _instance;
} _UpdateClusterRequest_default_instance_;
class DeleteClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteClusterRequest>
      _instance;
} _DeleteClusterRequest_default_instance_;
class GetClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetClusterRequest>
      _instance;
} _GetClusterRequest_default_instance_;
class ListClustersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersRequest>
      _instance;
} _ListClustersRequest_default_instance_;
class ListClustersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListClustersResponse>
      _instance;
} _ListClustersResponse_default_instance_;
class DiagnoseClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiagnoseClusterRequest>
      _instance;
} _DiagnoseClusterRequest_default_instance_;
class DiagnoseClusterResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiagnoseClusterResults>
      _instance;
} _DiagnoseClusterResults_default_instance_;
}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto {
static void InitDefaultsCluster_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_Cluster_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Cluster_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCluster_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsCluster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_Cluster_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::Cluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::Cluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Cluster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCluster}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster_LabelsEntry_DoNotUse.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterStatus.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterMetrics.base,}};

static void InitDefaultsClusterConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ClusterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ClusterConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsClusterConfig}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GceClusterConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_InstanceGroupConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_SoftwareConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_LifecycleConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_NodeInitializationAction.base,}};

static void InitDefaultsGceClusterConfig_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_GceClusterConfig_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GceClusterConfig_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGceClusterConfig_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsGceClusterConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_GceClusterConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::GceClusterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::GceClusterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GceClusterConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGceClusterConfig}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GceClusterConfig_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsInstanceGroupConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_InstanceGroupConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::InstanceGroupConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::InstanceGroupConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_InstanceGroupConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsInstanceGroupConfig}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiskConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ManagedGroupConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_AcceleratorConfig.base,}};

static void InitDefaultsManagedGroupConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ManagedGroupConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ManagedGroupConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ManagedGroupConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManagedGroupConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManagedGroupConfig}, {}};

static void InitDefaultsAcceleratorConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_AcceleratorConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::AcceleratorConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::AcceleratorConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AcceleratorConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAcceleratorConfig}, {}};

static void InitDefaultsDiskConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_DiskConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::DiskConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::DiskConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiskConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiskConfig}, {}};

static void InitDefaultsLifecycleConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_LifecycleConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::LifecycleConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::LifecycleConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LifecycleConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLifecycleConfig}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsNodeInitializationAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_NodeInitializationAction_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::NodeInitializationAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::NodeInitializationAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NodeInitializationAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNodeInitializationAction}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsClusterStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterStatus_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ClusterStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterStatus}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsSoftwareConfig_PropertiesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_SoftwareConfig_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SoftwareConfig_PropertiesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSoftwareConfig_PropertiesEntry_DoNotUse}, {}};

static void InitDefaultsSoftwareConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_SoftwareConfig_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::SoftwareConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::SoftwareConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SoftwareConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSoftwareConfig}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_SoftwareConfig_PropertiesEntry_DoNotUse.base,}};

static void InitDefaultsClusterMetrics_HdfsMetricsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterMetrics_HdfsMetricsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterMetrics_HdfsMetricsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterMetrics_HdfsMetricsEntry_DoNotUse}, {}};

static void InitDefaultsClusterMetrics_YarnMetricsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterMetrics_YarnMetricsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterMetrics_YarnMetricsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterMetrics_YarnMetricsEntry_DoNotUse}, {}};

static void InitDefaultsClusterMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterMetrics_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ClusterMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClusterMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClusterMetrics}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterMetrics_HdfsMetricsEntry_DoNotUse.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterMetrics_YarnMetricsEntry_DoNotUse.base,}};

static void InitDefaultsCreateClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_CreateClusterRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::CreateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::CreateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateClusterRequest}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster.base,}};

static void InitDefaultsUpdateClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_UpdateClusterRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::UpdateClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::UpdateClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UpdateClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUpdateClusterRequest}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsDeleteClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_DeleteClusterRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::DeleteClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::DeleteClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteClusterRequest}, {}};

static void InitDefaultsGetClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_GetClusterRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::GetClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::GetClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetClusterRequest}, {}};

static void InitDefaultsListClustersRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ListClustersRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ListClustersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ListClustersRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListClustersRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListClustersRequest}, {}};

static void InitDefaultsListClustersResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ListClustersResponse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ListClustersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ListClustersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListClustersResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListClustersResponse}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster.base,}};

static void InitDefaultsDiagnoseClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_DiagnoseClusterRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiagnoseClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiagnoseClusterRequest}, {}};

static void InitDefaultsDiagnoseClusterResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_DiagnoseClusterResults_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::DiagnoseClusterResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::DiagnoseClusterResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiagnoseClusterResults =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiagnoseClusterResults}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Cluster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GceClusterConfig_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GceClusterConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstanceGroupConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagedGroupConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AcceleratorConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiskConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LifecycleConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeInitializationAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SoftwareConfig_PropertiesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SoftwareConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterMetrics_HdfsMetricsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterMetrics_YarnMetricsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterMetrics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListClustersResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiagnoseClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiagnoseClusterResults.base);
}

::google::protobuf::Metadata file_level_metadata[25];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, status_history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, cluster_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::Cluster, metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, config_bucket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, gce_cluster_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, master_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, worker_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, secondary_worker_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, software_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, lifecycle_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterConfig, initialization_actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, zone_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, network_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, subnetwork_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, internal_ip_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, service_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, service_account_scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GceClusterConfig, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, num_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, instance_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, image_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, machine_type_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, disk_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, is_preemptible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, managed_group_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, accelerators_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstanceGroupConfig, min_cpu_platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedGroupConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedGroupConfig, instance_template_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedGroupConfig, instance_group_manager_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::AcceleratorConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::AcceleratorConfig, accelerator_type_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::AcceleratorConfig, accelerator_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiskConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiskConfig, boot_disk_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiskConfig, boot_disk_size_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiskConfig, num_local_ssds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::LifecycleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::LifecycleConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::LifecycleConfig, idle_delete_ttl_),
  offsetof(::google::cloud::dataproc::v1beta2::LifecycleConfigDefaultTypeInternal, auto_delete_time_),
  offsetof(::google::cloud::dataproc::v1beta2::LifecycleConfigDefaultTypeInternal, auto_delete_ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::LifecycleConfig, ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::NodeInitializationAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::NodeInitializationAction, executable_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::NodeInitializationAction, execution_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterStatus, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterStatus, state_start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterStatus, substate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig, image_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::SoftwareConfig, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics, hdfs_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterMetrics, yarn_metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateClusterRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateClusterRequest, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateClusterRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, graceful_decommission_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateClusterRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, cluster_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteClusterRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetClusterRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetClusterRequest, cluster_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersResponse, clusters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListClustersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest, cluster_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DiagnoseClusterResults, output_uri_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::cloud::dataproc::v1beta2::Cluster)},
  { 22, -1, sizeof(::google::cloud::dataproc::v1beta2::ClusterConfig)},
  { 35, 42, sizeof(::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse)},
  { 44, -1, sizeof(::google::cloud::dataproc::v1beta2::GceClusterConfig)},
  { 57, -1, sizeof(::google::cloud::dataproc::v1beta2::InstanceGroupConfig)},
  { 71, -1, sizeof(::google::cloud::dataproc::v1beta2::ManagedGroupConfig)},
  { 78, -1, sizeof(::google::cloud::dataproc::v1beta2::AcceleratorConfig)},
  { 85, -1, sizeof(::google::cloud::dataproc::v1beta2::DiskConfig)},
  { 93, -1, sizeof(::google::cloud::dataproc::v1beta2::LifecycleConfig)},
  { 102, -1, sizeof(::google::cloud::dataproc::v1beta2::NodeInitializationAction)},
  { 109, -1, sizeof(::google::cloud::dataproc::v1beta2::ClusterStatus)},
  { 118, 125, sizeof(::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse)},
  { 127, -1, sizeof(::google::cloud::dataproc::v1beta2::SoftwareConfig)},
  { 134, 141, sizeof(::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse)},
  { 143, 150, sizeof(::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse)},
  { 152, -1, sizeof(::google::cloud::dataproc::v1beta2::ClusterMetrics)},
  { 159, -1, sizeof(::google::cloud::dataproc::v1beta2::CreateClusterRequest)},
  { 168, -1, sizeof(::google::cloud::dataproc::v1beta2::UpdateClusterRequest)},
  { 180, -1, sizeof(::google::cloud::dataproc::v1beta2::DeleteClusterRequest)},
  { 190, -1, sizeof(::google::cloud::dataproc::v1beta2::GetClusterRequest)},
  { 198, -1, sizeof(::google::cloud::dataproc::v1beta2::ListClustersRequest)},
  { 208, -1, sizeof(::google::cloud::dataproc::v1beta2::ListClustersResponse)},
  { 215, -1, sizeof(::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest)},
  { 223, -1, sizeof(::google::cloud::dataproc::v1beta2::DiagnoseClusterResults)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_Cluster_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_Cluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_GceClusterConfig_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_GceClusterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_InstanceGroupConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ManagedGroupConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_AcceleratorConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_DiskConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_LifecycleConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_NodeInitializationAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_SoftwareConfig_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_SoftwareConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterMetrics_HdfsMetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterMetrics_YarnMetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterMetrics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_CreateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_UpdateClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_DeleteClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_GetClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ListClustersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ListClustersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_DiagnoseClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_DiagnoseClusterResults_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/dataproc/v1beta2/clusters.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/cloud/dataproc/v1beta2/clusters"
      ".proto\022\035google.cloud.dataproc.v1beta2\032\034g"
      "oogle/api/annotations.proto\032*google/clou"
      "d/dataproc/v1beta2/shared.proto\032#google/"
      "longrunning/operations.proto\032\036google/pro"
      "tobuf/duration.proto\032 google/protobuf/fi"
      "eld_mask.proto\032\037google/protobuf/timestam"
      "p.proto\"\276\003\n\007Cluster\022\022\n\nproject_id\030\001 \001(\t\022"
      "\024\n\014cluster_name\030\002 \001(\t\022<\n\006config\030\003 \001(\0132,."
      "google.cloud.dataproc.v1beta2.ClusterCon"
      "fig\022B\n\006labels\030\010 \003(\01322.google.cloud.datap"
      "roc.v1beta2.Cluster.LabelsEntry\022<\n\006statu"
      "s\030\004 \001(\0132,.google.cloud.dataproc.v1beta2."
      "ClusterStatus\022D\n\016status_history\030\007 \003(\0132,."
      "google.cloud.dataproc.v1beta2.ClusterSta"
      "tus\022\024\n\014cluster_uuid\030\006 \001(\t\022>\n\007metrics\030\t \001"
      "(\0132-.google.cloud.dataproc.v1beta2.Clust"
      "erMetrics\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\t:\0028\001\"\311\004\n\rClusterConfig\022\025\n\rco"
      "nfig_bucket\030\001 \001(\t\022K\n\022gce_cluster_config\030"
      "\010 \001(\0132/.google.cloud.dataproc.v1beta2.Gc"
      "eClusterConfig\022I\n\rmaster_config\030\t \001(\01322."
      "google.cloud.dataproc.v1beta2.InstanceGr"
      "oupConfig\022I\n\rworker_config\030\n \001(\01322.googl"
      "e.cloud.dataproc.v1beta2.InstanceGroupCo"
      "nfig\022S\n\027secondary_worker_config\030\014 \001(\01322."
      "google.cloud.dataproc.v1beta2.InstanceGr"
      "oupConfig\022F\n\017software_config\030\r \001(\0132-.goo"
      "gle.cloud.dataproc.v1beta2.SoftwareConfi"
      "g\022H\n\020lifecycle_config\030\016 \001(\0132..google.clo"
      "ud.dataproc.v1beta2.LifecycleConfig\022W\n\026i"
      "nitialization_actions\030\013 \003(\01327.google.clo"
      "ud.dataproc.v1beta2.NodeInitializationAc"
      "tion\"\264\002\n\020GceClusterConfig\022\020\n\010zone_uri\030\001 "
      "\001(\t\022\023\n\013network_uri\030\002 \001(\t\022\026\n\016subnetwork_u"
      "ri\030\006 \001(\t\022\030\n\020internal_ip_only\030\007 \001(\010\022\027\n\017se"
      "rvice_account\030\010 \001(\t\022\036\n\026service_account_s"
      "copes\030\003 \003(\t\022\014\n\004tags\030\004 \003(\t\022O\n\010metadata\030\005 "
      "\003(\0132=.google.cloud.dataproc.v1beta2.GceC"
      "lusterConfig.MetadataEntry\032/\n\rMetadataEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\374\002\n\023"
      "InstanceGroupConfig\022\025\n\rnum_instances\030\001 \001"
      "(\005\022\026\n\016instance_names\030\002 \003(\t\022\021\n\timage_uri\030"
      "\003 \001(\t\022\030\n\020machine_type_uri\030\004 \001(\t\022>\n\013disk_"
      "config\030\005 \001(\0132).google.cloud.dataproc.v1b"
      "eta2.DiskConfig\022\026\n\016is_preemptible\030\006 \001(\010\022"
      "O\n\024managed_group_config\030\007 \001(\01321.google.c"
      "loud.dataproc.v1beta2.ManagedGroupConfig"
      "\022F\n\014accelerators\030\010 \003(\01320.google.cloud.da"
      "taproc.v1beta2.AcceleratorConfig\022\030\n\020min_"
      "cpu_platform\030\t \001(\t\"Y\n\022ManagedGroupConfig"
      "\022\036\n\026instance_template_name\030\001 \001(\t\022#\n\033inst"
      "ance_group_manager_name\030\002 \001(\t\"L\n\021Acceler"
      "atorConfig\022\034\n\024accelerator_type_uri\030\001 \001(\t"
      "\022\031\n\021accelerator_count\030\002 \001(\005\"W\n\nDiskConfi"
      "g\022\026\n\016boot_disk_type\030\003 \001(\t\022\031\n\021boot_disk_s"
      "ize_gb\030\001 \001(\005\022\026\n\016num_local_ssds\030\002 \001(\005\"\272\001\n"
      "\017LifecycleConfig\0222\n\017idle_delete_ttl\030\001 \001("
      "\0132\031.google.protobuf.Duration\0226\n\020auto_del"
      "ete_time\030\002 \001(\0132\032.google.protobuf.Timesta"
      "mpH\000\0224\n\017auto_delete_ttl\030\003 \001(\0132\031.google.p"
      "rotobuf.DurationH\000B\005\n\003ttl\"i\n\030NodeInitial"
      "izationAction\022\027\n\017executable_file\030\001 \001(\t\0224"
      "\n\021execution_timeout\030\002 \001(\0132\031.google.proto"
      "buf.Duration\"\367\002\n\rClusterStatus\022A\n\005state\030"
      "\001 \001(\01622.google.cloud.dataproc.v1beta2.Cl"
      "usterStatus.State\022\016\n\006detail\030\002 \001(\t\0224\n\020sta"
      "te_start_time\030\003 \001(\0132\032.google.protobuf.Ti"
      "mestamp\022G\n\010substate\030\004 \001(\01625.google.cloud"
      ".dataproc.v1beta2.ClusterStatus.Substate"
      "\"V\n\005State\022\013\n\007UNKNOWN\020\000\022\014\n\010CREATING\020\001\022\013\n\007"
      "RUNNING\020\002\022\t\n\005ERROR\020\003\022\014\n\010DELETING\020\004\022\014\n\010UP"
      "DATING\020\005\"<\n\010Substate\022\017\n\013UNSPECIFIED\020\000\022\r\n"
      "\tUNHEALTHY\020\001\022\020\n\014STALE_STATUS\020\002\"\255\001\n\016Softw"
      "areConfig\022\025\n\rimage_version\030\001 \001(\t\022Q\n\nprop"
      "erties\030\002 \003(\0132=.google.cloud.dataproc.v1b"
      "eta2.SoftwareConfig.PropertiesEntry\0321\n\017P"
      "ropertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"\244\002\n\016ClusterMetrics\022T\n\014hdfs_metric"
      "s\030\001 \003(\0132>.google.cloud.dataproc.v1beta2."
      "ClusterMetrics.HdfsMetricsEntry\022T\n\014yarn_"
      "metrics\030\002 \003(\0132>.google.cloud.dataproc.v1"
      "beta2.ClusterMetrics.YarnMetricsEntry\0322\n"
      "\020HdfsMetricsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\003:\0028\001\0322\n\020YarnMetricsEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\003:\0028\001\"\207\001\n\024CreateClusterR"
      "equest\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006region\030\003 \001"
      "(\t\0227\n\007cluster\030\002 \001(\0132&.google.cloud.datap"
      "roc.v1beta2.Cluster\022\022\n\nrequest_id\030\004 \001(\t\""
      "\220\002\n\024UpdateClusterRequest\022\022\n\nproject_id\030\001"
      " \001(\t\022\016\n\006region\030\005 \001(\t\022\024\n\014cluster_name\030\002 \001"
      "(\t\0227\n\007cluster\030\003 \001(\0132&.google.cloud.datap"
      "roc.v1beta2.Cluster\022@\n\035graceful_decommis"
      "sion_timeout\030\006 \001(\0132\031.google.protobuf.Dur"
      "ation\022/\n\013update_mask\030\004 \001(\0132\032.google.prot"
      "obuf.FieldMask\022\022\n\nrequest_id\030\007 \001(\t\"z\n\024De"
      "leteClusterRequest\022\022\n\nproject_id\030\001 \001(\t\022\016"
      "\n\006region\030\003 \001(\t\022\024\n\014cluster_name\030\002 \001(\t\022\024\n\014"
      "cluster_uuid\030\004 \001(\t\022\022\n\nrequest_id\030\005 \001(\t\"M"
      "\n\021GetClusterRequest\022\022\n\nproject_id\030\001 \001(\t\022"
      "\016\n\006region\030\003 \001(\t\022\024\n\014cluster_name\030\002 \001(\t\"p\n"
      "\023ListClustersRequest\022\022\n\nproject_id\030\001 \001(\t"
      "\022\016\n\006region\030\004 \001(\t\022\016\n\006filter\030\005 \001(\t\022\021\n\tpage"
      "_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"i\n\024ListC"
      "lustersResponse\0228\n\010clusters\030\001 \003(\0132&.goog"
      "le.cloud.dataproc.v1beta2.Cluster\022\027\n\017nex"
      "t_page_token\030\002 \001(\t\"R\n\026DiagnoseClusterReq"
      "uest\022\022\n\nproject_id\030\001 \001(\t\022\016\n\006region\030\003 \001(\t"
      "\022\024\n\014cluster_name\030\002 \001(\t\",\n\026DiagnoseCluste"
      "rResults\022\022\n\noutput_uri\030\001 \001(\t2\370\010\n\021Cluster"
      "Controller\022\256\001\n\rCreateCluster\0223.google.cl"
      "oud.dataproc.v1beta2.CreateClusterReques"
      "t\032\035.google.longrunning.Operation\"I\202\323\344\223\002C"
      "\"8/v1beta2/projects/{project_id}/regions"
      "/{region}/clusters:\007cluster\022\275\001\n\rUpdateCl"
      "uster\0223.google.cloud.dataproc.v1beta2.Up"
      "dateClusterRequest\032\035.google.longrunning."
      "Operation\"X\202\323\344\223\002R2G/v1beta2/projects/{pr"
      "oject_id}/regions/{region}/clusters/{clu"
      "ster_name}:\007cluster\022\264\001\n\rDeleteCluster\0223."
      "google.cloud.dataproc.v1beta2.DeleteClus"
      "terRequest\032\035.google.longrunning.Operatio"
      "n\"O\202\323\344\223\002I*G/v1beta2/projects/{project_id"
      "}/regions/{region}/clusters/{cluster_nam"
      "e}\022\267\001\n\nGetCluster\0220.google.cloud.datapro"
      "c.v1beta2.GetClusterRequest\032&.google.clo"
      "ud.dataproc.v1beta2.Cluster\"O\202\323\344\223\002I\022G/v1"
      "beta2/projects/{project_id}/regions/{reg"
      "ion}/clusters/{cluster_name}\022\271\001\n\014ListClu"
      "sters\0222.google.cloud.dataproc.v1beta2.Li"
      "stClustersRequest\0323.google.cloud.datapro"
      "c.v1beta2.ListClustersResponse\"@\202\323\344\223\002:\0228"
      "/v1beta2/projects/{project_id}/regions/{"
      "region}/clusters\022\304\001\n\017DiagnoseCluster\0225.g"
      "oogle.cloud.dataproc.v1beta2.DiagnoseClu"
      "sterRequest\032\035.google.longrunning.Operati"
      "on\"[\202\323\344\223\002U\"P/v1beta2/projects/{project_i"
      "d}/regions/{region}/clusters/{cluster_na"
      "me}:diagnose:\001*B{\n!com.google.cloud.data"
      "proc.v1beta2B\rClustersProtoP\001ZEgoogle.go"
      "lang.org/genproto/googleapis/cloud/datap"
      "roc/v1beta2;dataprocb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dataproc/v1beta2/clusters.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fshared_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {
const ::google::protobuf::EnumDescriptor* ClusterStatus_State_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_enum_descriptors[0];
}
bool ClusterStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClusterStatus_State ClusterStatus::UNKNOWN;
const ClusterStatus_State ClusterStatus::CREATING;
const ClusterStatus_State ClusterStatus::RUNNING;
const ClusterStatus_State ClusterStatus::ERROR;
const ClusterStatus_State ClusterStatus::DELETING;
const ClusterStatus_State ClusterStatus::UPDATING;
const ClusterStatus_State ClusterStatus::State_MIN;
const ClusterStatus_State ClusterStatus::State_MAX;
const int ClusterStatus::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClusterStatus_Substate_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_enum_descriptors[1];
}
bool ClusterStatus_Substate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClusterStatus_Substate ClusterStatus::UNSPECIFIED;
const ClusterStatus_Substate ClusterStatus::UNHEALTHY;
const ClusterStatus_Substate ClusterStatus::STALE_STATUS;
const ClusterStatus_Substate ClusterStatus::Substate_MIN;
const ClusterStatus_Substate ClusterStatus::Substate_MAX;
const int ClusterStatus::Substate_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

Cluster_LabelsEntry_DoNotUse::Cluster_LabelsEntry_DoNotUse() {}
Cluster_LabelsEntry_DoNotUse::Cluster_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Cluster_LabelsEntry_DoNotUse::MergeFrom(const Cluster_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Cluster_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[0];
}
void Cluster_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Cluster::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_Cluster_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterConfig*>(
      ::google::cloud::dataproc::v1beta2::ClusterConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_Cluster_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterStatus*>(
      ::google::cloud::dataproc::v1beta2::ClusterStatus::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_Cluster_default_instance_._instance.get_mutable()->metrics_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterMetrics*>(
      ::google::cloud::dataproc::v1beta2::ClusterMetrics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cluster::kProjectIdFieldNumber;
const int Cluster::kClusterNameFieldNumber;
const int Cluster::kConfigFieldNumber;
const int Cluster::kLabelsFieldNumber;
const int Cluster::kStatusFieldNumber;
const int Cluster::kStatusHistoryFieldNumber;
const int Cluster::kClusterUuidFieldNumber;
const int Cluster::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cluster::Cluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.Cluster)
}
Cluster::Cluster(const Cluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_history_(from.status_history_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_uuid().size() > 0) {
    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  if (from.has_config()) {
    config_ = new ::google::cloud::dataproc::v1beta2::ClusterConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::cloud::dataproc::v1beta2::ClusterStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_metrics()) {
    metrics_ = new ::google::cloud::dataproc::v1beta2::ClusterMetrics(*from.metrics_);
  } else {
    metrics_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.Cluster)
}

void Cluster::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metrics_) -
      reinterpret_cast<char*>(&config_)) + sizeof(metrics_));
}

Cluster::~Cluster() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.Cluster)
  SharedDtor();
}

void Cluster::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete metrics_;
}

void Cluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Cluster::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cluster& Cluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_Cluster.base);
  return *internal_default_instance();
}


void Cluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_history_.Clear();
  labels_.Clear();
  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && metrics_ != NULL) {
    delete metrics_;
  }
  metrics_ = NULL;
  _internal_metadata_.Clear();
}

bool Cluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.Cluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.Cluster.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.Cluster.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_uuid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.Cluster.cluster_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1beta2.ClusterStatus status_history = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_status_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          Cluster_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Cluster_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterMetrics metrics = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.Cluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.Cluster)
  return false;
#undef DO_
}

void Cluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus status = 4;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_status(), output);
  }

  // string cluster_uuid = 6;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.cluster_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cluster_uuid(), output);
  }

  // repeated .google.cloud.dataproc.v1beta2.ClusterStatus status_history = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->status_history(static_cast<int>(i)),
      output);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Cluster_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Cluster_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.ClusterMetrics metrics = 9;
  if (this->has_metrics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_metrics(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.Cluster)
}

::google::protobuf::uint8* Cluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.Cluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus status = 4;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_status(), deterministic, target);
  }

  // string cluster_uuid = 6;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.Cluster.cluster_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cluster_uuid(), target);
  }

  // repeated .google.cloud.dataproc.v1beta2.ClusterStatus status_history = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->status_history(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.Cluster.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Cluster_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Cluster_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.ClusterMetrics metrics = 9;
  if (this->has_metrics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_metrics(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.Cluster)
  return target;
}

size_t Cluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.Cluster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1beta2.ClusterStatus status_history = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->status_history_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->status_history(static_cast<int>(i)));
    }
  }

  // map<string, string> labels = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<Cluster_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string cluster_uuid = 6;
  if (this->cluster_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_uuid());
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus status = 4;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.cloud.dataproc.v1beta2.ClusterMetrics metrics = 9;
  if (this->has_metrics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metrics_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  const Cluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.Cluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.Cluster)
    MergeFrom(*source);
  }
}

void Cluster::MergeFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.Cluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_history_.MergeFrom(from.status_history_);
  labels_.MergeFrom(from.labels_);
  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.cluster_uuid().size() > 0) {

    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  if (from.has_config()) {
    mutable_config()->::google::cloud::dataproc::v1beta2::ClusterConfig::MergeFrom(from.config());
  }
  if (from.has_status()) {
    mutable_status()->::google::cloud::dataproc::v1beta2::ClusterStatus::MergeFrom(from.status());
  }
  if (from.has_metrics()) {
    mutable_metrics()->::google::cloud::dataproc::v1beta2::ClusterMetrics::MergeFrom(from.metrics());
  }
}

void Cluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cluster::CopyFrom(const Cluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.Cluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cluster::IsInitialized() const {
  return true;
}

void Cluster::Swap(Cluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cluster::InternalSwap(Cluster* other) {
  using std::swap;
  CastToBase(&status_history_)->InternalSwap(CastToBase(&other->status_history_));
  labels_.Swap(&other->labels_);
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_uuid_.Swap(&other->cluster_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(status_, other->status_);
  swap(metrics_, other->metrics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Cluster::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterConfig::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->gce_cluster_config_ = const_cast< ::google::cloud::dataproc::v1beta2::GceClusterConfig*>(
      ::google::cloud::dataproc::v1beta2::GceClusterConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->master_config_ = const_cast< ::google::cloud::dataproc::v1beta2::InstanceGroupConfig*>(
      ::google::cloud::dataproc::v1beta2::InstanceGroupConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->worker_config_ = const_cast< ::google::cloud::dataproc::v1beta2::InstanceGroupConfig*>(
      ::google::cloud::dataproc::v1beta2::InstanceGroupConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->secondary_worker_config_ = const_cast< ::google::cloud::dataproc::v1beta2::InstanceGroupConfig*>(
      ::google::cloud::dataproc::v1beta2::InstanceGroupConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->software_config_ = const_cast< ::google::cloud::dataproc::v1beta2::SoftwareConfig*>(
      ::google::cloud::dataproc::v1beta2::SoftwareConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_ClusterConfig_default_instance_._instance.get_mutable()->lifecycle_config_ = const_cast< ::google::cloud::dataproc::v1beta2::LifecycleConfig*>(
      ::google::cloud::dataproc::v1beta2::LifecycleConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterConfig::kConfigBucketFieldNumber;
const int ClusterConfig::kGceClusterConfigFieldNumber;
const int ClusterConfig::kMasterConfigFieldNumber;
const int ClusterConfig::kWorkerConfigFieldNumber;
const int ClusterConfig::kSecondaryWorkerConfigFieldNumber;
const int ClusterConfig::kSoftwareConfigFieldNumber;
const int ClusterConfig::kLifecycleConfigFieldNumber;
const int ClusterConfig::kInitializationActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterConfig::ClusterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ClusterConfig)
}
ClusterConfig::ClusterConfig(const ClusterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      initialization_actions_(from.initialization_actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_bucket().size() > 0) {
    config_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_bucket_);
  }
  if (from.has_gce_cluster_config()) {
    gce_cluster_config_ = new ::google::cloud::dataproc::v1beta2::GceClusterConfig(*from.gce_cluster_config_);
  } else {
    gce_cluster_config_ = NULL;
  }
  if (from.has_master_config()) {
    master_config_ = new ::google::cloud::dataproc::v1beta2::InstanceGroupConfig(*from.master_config_);
  } else {
    master_config_ = NULL;
  }
  if (from.has_worker_config()) {
    worker_config_ = new ::google::cloud::dataproc::v1beta2::InstanceGroupConfig(*from.worker_config_);
  } else {
    worker_config_ = NULL;
  }
  if (from.has_secondary_worker_config()) {
    secondary_worker_config_ = new ::google::cloud::dataproc::v1beta2::InstanceGroupConfig(*from.secondary_worker_config_);
  } else {
    secondary_worker_config_ = NULL;
  }
  if (from.has_software_config()) {
    software_config_ = new ::google::cloud::dataproc::v1beta2::SoftwareConfig(*from.software_config_);
  } else {
    software_config_ = NULL;
  }
  if (from.has_lifecycle_config()) {
    lifecycle_config_ = new ::google::cloud::dataproc::v1beta2::LifecycleConfig(*from.lifecycle_config_);
  } else {
    lifecycle_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ClusterConfig)
}

void ClusterConfig::SharedCtor() {
  config_bucket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gce_cluster_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lifecycle_config_) -
      reinterpret_cast<char*>(&gce_cluster_config_)) + sizeof(lifecycle_config_));
}

ClusterConfig::~ClusterConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ClusterConfig)
  SharedDtor();
}

void ClusterConfig::SharedDtor() {
  config_bucket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gce_cluster_config_;
  if (this != internal_default_instance()) delete master_config_;
  if (this != internal_default_instance()) delete worker_config_;
  if (this != internal_default_instance()) delete secondary_worker_config_;
  if (this != internal_default_instance()) delete software_config_;
  if (this != internal_default_instance()) delete lifecycle_config_;
}

void ClusterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterConfig& ClusterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterConfig.base);
  return *internal_default_instance();
}


void ClusterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initialization_actions_.Clear();
  config_bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && gce_cluster_config_ != NULL) {
    delete gce_cluster_config_;
  }
  gce_cluster_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && master_config_ != NULL) {
    delete master_config_;
  }
  master_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && worker_config_ != NULL) {
    delete worker_config_;
  }
  worker_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_worker_config_ != NULL) {
    delete secondary_worker_config_;
  }
  secondary_worker_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && software_config_ != NULL) {
    delete software_config_;
  }
  software_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && lifecycle_config_ != NULL) {
    delete lifecycle_config_;
  }
  lifecycle_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ClusterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string config_bucket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_bucket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_bucket().data(), static_cast<int>(this->config_bucket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterConfig.config_bucket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.GceClusterConfig gce_cluster_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gce_cluster_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.InstanceGroupConfig master_config = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.InstanceGroupConfig worker_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_worker_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1beta2.NodeInitializationAction initialization_actions = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_initialization_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.InstanceGroupConfig secondary_worker_config = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_secondary_worker_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.SoftwareConfig software_config = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_software_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.LifecycleConfig lifecycle_config = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lifecycle_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ClusterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ClusterConfig)
  return false;
#undef DO_
}

void ClusterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_bucket = 1;
  if (this->config_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_bucket().data(), static_cast<int>(this->config_bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterConfig.config_bucket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->config_bucket(), output);
  }

  // .google.cloud.dataproc.v1beta2.GceClusterConfig gce_cluster_config = 8;
  if (this->has_gce_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_gce_cluster_config(), output);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig master_config = 9;
  if (this->has_master_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_master_config(), output);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig worker_config = 10;
  if (this->has_worker_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_worker_config(), output);
  }

  // repeated .google.cloud.dataproc.v1beta2.NodeInitializationAction initialization_actions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initialization_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->initialization_actions(static_cast<int>(i)),
      output);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig secondary_worker_config = 12;
  if (this->has_secondary_worker_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_secondary_worker_config(), output);
  }

  // .google.cloud.dataproc.v1beta2.SoftwareConfig software_config = 13;
  if (this->has_software_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_software_config(), output);
  }

  // .google.cloud.dataproc.v1beta2.LifecycleConfig lifecycle_config = 14;
  if (this->has_lifecycle_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_lifecycle_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ClusterConfig)
}

::google::protobuf::uint8* ClusterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_bucket = 1;
  if (this->config_bucket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_bucket().data(), static_cast<int>(this->config_bucket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterConfig.config_bucket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->config_bucket(), target);
  }

  // .google.cloud.dataproc.v1beta2.GceClusterConfig gce_cluster_config = 8;
  if (this->has_gce_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_gce_cluster_config(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig master_config = 9;
  if (this->has_master_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_master_config(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig worker_config = 10;
  if (this->has_worker_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_worker_config(), deterministic, target);
  }

  // repeated .google.cloud.dataproc.v1beta2.NodeInitializationAction initialization_actions = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initialization_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->initialization_actions(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig secondary_worker_config = 12;
  if (this->has_secondary_worker_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_secondary_worker_config(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.SoftwareConfig software_config = 13;
  if (this->has_software_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_software_config(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.LifecycleConfig lifecycle_config = 14;
  if (this->has_lifecycle_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_lifecycle_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ClusterConfig)
  return target;
}

size_t ClusterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1beta2.NodeInitializationAction initialization_actions = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->initialization_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initialization_actions(static_cast<int>(i)));
    }
  }

  // string config_bucket = 1;
  if (this->config_bucket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_bucket());
  }

  // .google.cloud.dataproc.v1beta2.GceClusterConfig gce_cluster_config = 8;
  if (this->has_gce_cluster_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gce_cluster_config_);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig master_config = 9;
  if (this->has_master_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_config_);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig worker_config = 10;
  if (this->has_worker_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *worker_config_);
  }

  // .google.cloud.dataproc.v1beta2.InstanceGroupConfig secondary_worker_config = 12;
  if (this->has_secondary_worker_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *secondary_worker_config_);
  }

  // .google.cloud.dataproc.v1beta2.SoftwareConfig software_config = 13;
  if (this->has_software_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *software_config_);
  }

  // .google.cloud.dataproc.v1beta2.LifecycleConfig lifecycle_config = 14;
  if (this->has_lifecycle_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lifecycle_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ClusterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ClusterConfig)
    MergeFrom(*source);
  }
}

void ClusterConfig::MergeFrom(const ClusterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initialization_actions_.MergeFrom(from.initialization_actions_);
  if (from.config_bucket().size() > 0) {

    config_bucket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_bucket_);
  }
  if (from.has_gce_cluster_config()) {
    mutable_gce_cluster_config()->::google::cloud::dataproc::v1beta2::GceClusterConfig::MergeFrom(from.gce_cluster_config());
  }
  if (from.has_master_config()) {
    mutable_master_config()->::google::cloud::dataproc::v1beta2::InstanceGroupConfig::MergeFrom(from.master_config());
  }
  if (from.has_worker_config()) {
    mutable_worker_config()->::google::cloud::dataproc::v1beta2::InstanceGroupConfig::MergeFrom(from.worker_config());
  }
  if (from.has_secondary_worker_config()) {
    mutable_secondary_worker_config()->::google::cloud::dataproc::v1beta2::InstanceGroupConfig::MergeFrom(from.secondary_worker_config());
  }
  if (from.has_software_config()) {
    mutable_software_config()->::google::cloud::dataproc::v1beta2::SoftwareConfig::MergeFrom(from.software_config());
  }
  if (from.has_lifecycle_config()) {
    mutable_lifecycle_config()->::google::cloud::dataproc::v1beta2::LifecycleConfig::MergeFrom(from.lifecycle_config());
  }
}

void ClusterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterConfig::CopyFrom(const ClusterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterConfig::IsInitialized() const {
  return true;
}

void ClusterConfig::Swap(ClusterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterConfig::InternalSwap(ClusterConfig* other) {
  using std::swap;
  CastToBase(&initialization_actions_)->InternalSwap(CastToBase(&other->initialization_actions_));
  config_bucket_.Swap(&other->config_bucket_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gce_cluster_config_, other->gce_cluster_config_);
  swap(master_config_, other->master_config_);
  swap(worker_config_, other->worker_config_);
  swap(secondary_worker_config_, other->secondary_worker_config_);
  swap(software_config_, other->software_config_);
  swap(lifecycle_config_, other->lifecycle_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

GceClusterConfig_MetadataEntry_DoNotUse::GceClusterConfig_MetadataEntry_DoNotUse() {}
GceClusterConfig_MetadataEntry_DoNotUse::GceClusterConfig_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void GceClusterConfig_MetadataEntry_DoNotUse::MergeFrom(const GceClusterConfig_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GceClusterConfig_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[3];
}
void GceClusterConfig_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void GceClusterConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GceClusterConfig::kZoneUriFieldNumber;
const int GceClusterConfig::kNetworkUriFieldNumber;
const int GceClusterConfig::kSubnetworkUriFieldNumber;
const int GceClusterConfig::kInternalIpOnlyFieldNumber;
const int GceClusterConfig::kServiceAccountFieldNumber;
const int GceClusterConfig::kServiceAccountScopesFieldNumber;
const int GceClusterConfig::kTagsFieldNumber;
const int GceClusterConfig::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GceClusterConfig::GceClusterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GceClusterConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.GceClusterConfig)
}
GceClusterConfig::GceClusterConfig(const GceClusterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      service_account_scopes_(from.service_account_scopes_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  zone_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone_uri().size() > 0) {
    zone_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_uri_);
  }
  network_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.network_uri().size() > 0) {
    network_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_uri_);
  }
  subnetwork_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subnetwork_uri().size() > 0) {
    subnetwork_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_uri_);
  }
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_account().size() > 0) {
    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  internal_ip_only_ = from.internal_ip_only_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.GceClusterConfig)
}

void GceClusterConfig::SharedCtor() {
  zone_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_ip_only_ = false;
}

GceClusterConfig::~GceClusterConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.GceClusterConfig)
  SharedDtor();
}

void GceClusterConfig::SharedDtor() {
  zone_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GceClusterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GceClusterConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GceClusterConfig& GceClusterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GceClusterConfig.base);
  return *internal_default_instance();
}


void GceClusterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_account_scopes_.Clear();
  tags_.Clear();
  metadata_.Clear();
  zone_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subnetwork_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_ip_only_ = false;
  _internal_metadata_.Clear();
}

bool GceClusterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string zone_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_uri().data(), static_cast<int>(this->zone_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.zone_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string network_uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->network_uri().data(), static_cast<int>(this->network_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.network_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string service_account_scopes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_service_account_scopes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account_scopes(this->service_account_scopes_size() - 1).data(),
            static_cast<int>(this->service_account_scopes(this->service_account_scopes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account_scopes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          GceClusterConfig_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GceClusterConfig_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subnetwork_uri = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subnetwork_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnetwork_uri().data(), static_cast<int>(this->subnetwork_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.subnetwork_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool internal_ip_only = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &internal_ip_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_account = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_account().data(), static_cast<int>(this->service_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.GceClusterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.GceClusterConfig)
  return false;
#undef DO_
}

void GceClusterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string zone_uri = 1;
  if (this->zone_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_uri().data(), static_cast<int>(this->zone_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.zone_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->zone_uri(), output);
  }

  // string network_uri = 2;
  if (this->network_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network_uri().data(), static_cast<int>(this->network_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.network_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->network_uri(), output);
  }

  // repeated string service_account_scopes = 3;
  for (int i = 0, n = this->service_account_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account_scopes(i).data(), static_cast<int>(this->service_account_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account_scopes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->service_account_scopes(i), output);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tags(i), output);
  }

  // map<string, string> metadata = 5;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GceClusterConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<GceClusterConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string subnetwork_uri = 6;
  if (this->subnetwork_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_uri().data(), static_cast<int>(this->subnetwork_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.subnetwork_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->subnetwork_uri(), output);
  }

  // bool internal_ip_only = 7;
  if (this->internal_ip_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->internal_ip_only(), output);
  }

  // string service_account = 8;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->service_account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.GceClusterConfig)
}

::google::protobuf::uint8* GceClusterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string zone_uri = 1;
  if (this->zone_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_uri().data(), static_cast<int>(this->zone_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.zone_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->zone_uri(), target);
  }

  // string network_uri = 2;
  if (this->network_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->network_uri().data(), static_cast<int>(this->network_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.network_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->network_uri(), target);
  }

  // repeated string service_account_scopes = 3;
  for (int i = 0, n = this->service_account_scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account_scopes(i).data(), static_cast<int>(this->service_account_scopes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account_scopes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->service_account_scopes(i), target);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->tags(i), target);
  }

  // map<string, string> metadata = 5;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.GceClusterConfig.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<GceClusterConfig_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<GceClusterConfig_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string subnetwork_uri = 6;
  if (this->subnetwork_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnetwork_uri().data(), static_cast<int>(this->subnetwork_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.subnetwork_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->subnetwork_uri(), target);
  }

  // bool internal_ip_only = 7;
  if (this->internal_ip_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->internal_ip_only(), target);
  }

  // string service_account = 8;
  if (this->service_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_account().data(), static_cast<int>(this->service_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GceClusterConfig.service_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->service_account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.GceClusterConfig)
  return target;
}

size_t GceClusterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string service_account_scopes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->service_account_scopes_size());
  for (int i = 0, n = this->service_account_scopes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->service_account_scopes(i));
  }

  // repeated string tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // map<string, string> metadata = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<GceClusterConfig_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string zone_uri = 1;
  if (this->zone_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_uri());
  }

  // string network_uri = 2;
  if (this->network_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->network_uri());
  }

  // string subnetwork_uri = 6;
  if (this->subnetwork_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subnetwork_uri());
  }

  // string service_account = 8;
  if (this->service_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_account());
  }

  // bool internal_ip_only = 7;
  if (this->internal_ip_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GceClusterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const GceClusterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GceClusterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.GceClusterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.GceClusterConfig)
    MergeFrom(*source);
  }
}

void GceClusterConfig::MergeFrom(const GceClusterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_account_scopes_.MergeFrom(from.service_account_scopes_);
  tags_.MergeFrom(from.tags_);
  metadata_.MergeFrom(from.metadata_);
  if (from.zone_uri().size() > 0) {

    zone_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_uri_);
  }
  if (from.network_uri().size() > 0) {

    network_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_uri_);
  }
  if (from.subnetwork_uri().size() > 0) {

    subnetwork_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subnetwork_uri_);
  }
  if (from.service_account().size() > 0) {

    service_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_account_);
  }
  if (from.internal_ip_only() != 0) {
    set_internal_ip_only(from.internal_ip_only());
  }
}

void GceClusterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GceClusterConfig::CopyFrom(const GceClusterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.GceClusterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GceClusterConfig::IsInitialized() const {
  return true;
}

void GceClusterConfig::Swap(GceClusterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GceClusterConfig::InternalSwap(GceClusterConfig* other) {
  using std::swap;
  service_account_scopes_.InternalSwap(CastToBase(&other->service_account_scopes_));
  tags_.InternalSwap(CastToBase(&other->tags_));
  metadata_.Swap(&other->metadata_);
  zone_uri_.Swap(&other->zone_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  network_uri_.Swap(&other->network_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subnetwork_uri_.Swap(&other->subnetwork_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_account_.Swap(&other->service_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(internal_ip_only_, other->internal_ip_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GceClusterConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstanceGroupConfig::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_InstanceGroupConfig_default_instance_._instance.get_mutable()->disk_config_ = const_cast< ::google::cloud::dataproc::v1beta2::DiskConfig*>(
      ::google::cloud::dataproc::v1beta2::DiskConfig::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_InstanceGroupConfig_default_instance_._instance.get_mutable()->managed_group_config_ = const_cast< ::google::cloud::dataproc::v1beta2::ManagedGroupConfig*>(
      ::google::cloud::dataproc::v1beta2::ManagedGroupConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstanceGroupConfig::kNumInstancesFieldNumber;
const int InstanceGroupConfig::kInstanceNamesFieldNumber;
const int InstanceGroupConfig::kImageUriFieldNumber;
const int InstanceGroupConfig::kMachineTypeUriFieldNumber;
const int InstanceGroupConfig::kDiskConfigFieldNumber;
const int InstanceGroupConfig::kIsPreemptibleFieldNumber;
const int InstanceGroupConfig::kManagedGroupConfigFieldNumber;
const int InstanceGroupConfig::kAcceleratorsFieldNumber;
const int InstanceGroupConfig::kMinCpuPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstanceGroupConfig::InstanceGroupConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_InstanceGroupConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
}
InstanceGroupConfig::InstanceGroupConfig(const InstanceGroupConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instance_names_(from.instance_names_),
      accelerators_(from.accelerators_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_uri().size() > 0) {
    image_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_uri_);
  }
  machine_type_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machine_type_uri().size() > 0) {
    machine_type_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_uri_);
  }
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.min_cpu_platform().size() > 0) {
    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.has_disk_config()) {
    disk_config_ = new ::google::cloud::dataproc::v1beta2::DiskConfig(*from.disk_config_);
  } else {
    disk_config_ = NULL;
  }
  if (from.has_managed_group_config()) {
    managed_group_config_ = new ::google::cloud::dataproc::v1beta2::ManagedGroupConfig(*from.managed_group_config_);
  } else {
    managed_group_config_ = NULL;
  }
  ::memcpy(&num_instances_, &from.num_instances_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_preemptible_) -
    reinterpret_cast<char*>(&num_instances_)) + sizeof(is_preemptible_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
}

void InstanceGroupConfig::SharedCtor() {
  image_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&disk_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_preemptible_) -
      reinterpret_cast<char*>(&disk_config_)) + sizeof(is_preemptible_));
}

InstanceGroupConfig::~InstanceGroupConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  SharedDtor();
}

void InstanceGroupConfig::SharedDtor() {
  image_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete disk_config_;
  if (this != internal_default_instance()) delete managed_group_config_;
}

void InstanceGroupConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstanceGroupConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstanceGroupConfig& InstanceGroupConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_InstanceGroupConfig.base);
  return *internal_default_instance();
}


void InstanceGroupConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_names_.Clear();
  accelerators_.Clear();
  image_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_type_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_cpu_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && disk_config_ != NULL) {
    delete disk_config_;
  }
  disk_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && managed_group_config_ != NULL) {
    delete managed_group_config_;
  }
  managed_group_config_ = NULL;
  ::memset(&num_instances_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_preemptible_) -
      reinterpret_cast<char*>(&num_instances_)) + sizeof(is_preemptible_));
  _internal_metadata_.Clear();
}

bool InstanceGroupConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_instances = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_instances_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string instance_names = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_instance_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_names(this->instance_names_size() - 1).data(),
            static_cast<int>(this->instance_names(this->instance_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstanceGroupConfig.instance_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_uri().data(), static_cast<int>(this->image_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstanceGroupConfig.image_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string machine_type_uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_type_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machine_type_uri().data(), static_cast<int>(this->machine_type_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstanceGroupConfig.machine_type_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.DiskConfig disk_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disk_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_preemptible = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_preemptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ManagedGroupConfig managed_group_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_managed_group_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1beta2.AcceleratorConfig accelerators = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accelerators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string min_cpu_platform = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_min_cpu_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstanceGroupConfig.min_cpu_platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  return false;
#undef DO_
}

void InstanceGroupConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_instances = 1;
  if (this->num_instances() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_instances(), output);
  }

  // repeated string instance_names = 2;
  for (int i = 0, n = this->instance_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_names(i).data(), static_cast<int>(this->instance_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.instance_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->instance_names(i), output);
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.image_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->image_uri(), output);
  }

  // string machine_type_uri = 4;
  if (this->machine_type_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type_uri().data(), static_cast<int>(this->machine_type_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.machine_type_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->machine_type_uri(), output);
  }

  // .google.cloud.dataproc.v1beta2.DiskConfig disk_config = 5;
  if (this->has_disk_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_disk_config(), output);
  }

  // bool is_preemptible = 6;
  if (this->is_preemptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_preemptible(), output);
  }

  // .google.cloud.dataproc.v1beta2.ManagedGroupConfig managed_group_config = 7;
  if (this->has_managed_group_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_managed_group_config(), output);
  }

  // repeated .google.cloud.dataproc.v1beta2.AcceleratorConfig accelerators = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->accelerators(static_cast<int>(i)),
      output);
  }

  // string min_cpu_platform = 9;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.min_cpu_platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->min_cpu_platform(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
}

::google::protobuf::uint8* InstanceGroupConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_instances = 1;
  if (this->num_instances() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_instances(), target);
  }

  // repeated string instance_names = 2;
  for (int i = 0, n = this->instance_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_names(i).data(), static_cast<int>(this->instance_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.instance_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->instance_names(i), target);
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_uri().data(), static_cast<int>(this->image_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.image_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->image_uri(), target);
  }

  // string machine_type_uri = 4;
  if (this->machine_type_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machine_type_uri().data(), static_cast<int>(this->machine_type_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.machine_type_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->machine_type_uri(), target);
  }

  // .google.cloud.dataproc.v1beta2.DiskConfig disk_config = 5;
  if (this->has_disk_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_disk_config(), deterministic, target);
  }

  // bool is_preemptible = 6;
  if (this->is_preemptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_preemptible(), target);
  }

  // .google.cloud.dataproc.v1beta2.ManagedGroupConfig managed_group_config = 7;
  if (this->has_managed_group_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_managed_group_config(), deterministic, target);
  }

  // repeated .google.cloud.dataproc.v1beta2.AcceleratorConfig accelerators = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accelerators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->accelerators(static_cast<int>(i)), deterministic, target);
  }

  // string min_cpu_platform = 9;
  if (this->min_cpu_platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->min_cpu_platform().data(), static_cast<int>(this->min_cpu_platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstanceGroupConfig.min_cpu_platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->min_cpu_platform(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  return target;
}

size_t InstanceGroupConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string instance_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->instance_names_size());
  for (int i = 0, n = this->instance_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->instance_names(i));
  }

  // repeated .google.cloud.dataproc.v1beta2.AcceleratorConfig accelerators = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->accelerators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accelerators(static_cast<int>(i)));
    }
  }

  // string image_uri = 3;
  if (this->image_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_uri());
  }

  // string machine_type_uri = 4;
  if (this->machine_type_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machine_type_uri());
  }

  // string min_cpu_platform = 9;
  if (this->min_cpu_platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->min_cpu_platform());
  }

  // .google.cloud.dataproc.v1beta2.DiskConfig disk_config = 5;
  if (this->has_disk_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *disk_config_);
  }

  // .google.cloud.dataproc.v1beta2.ManagedGroupConfig managed_group_config = 7;
  if (this->has_managed_group_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *managed_group_config_);
  }

  // int32 num_instances = 1;
  if (this->num_instances() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_instances());
  }

  // bool is_preemptible = 6;
  if (this->is_preemptible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstanceGroupConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const InstanceGroupConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstanceGroupConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
    MergeFrom(*source);
  }
}

void InstanceGroupConfig::MergeFrom(const InstanceGroupConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instance_names_.MergeFrom(from.instance_names_);
  accelerators_.MergeFrom(from.accelerators_);
  if (from.image_uri().size() > 0) {

    image_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_uri_);
  }
  if (from.machine_type_uri().size() > 0) {

    machine_type_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_type_uri_);
  }
  if (from.min_cpu_platform().size() > 0) {

    min_cpu_platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.min_cpu_platform_);
  }
  if (from.has_disk_config()) {
    mutable_disk_config()->::google::cloud::dataproc::v1beta2::DiskConfig::MergeFrom(from.disk_config());
  }
  if (from.has_managed_group_config()) {
    mutable_managed_group_config()->::google::cloud::dataproc::v1beta2::ManagedGroupConfig::MergeFrom(from.managed_group_config());
  }
  if (from.num_instances() != 0) {
    set_num_instances(from.num_instances());
  }
  if (from.is_preemptible() != 0) {
    set_is_preemptible(from.is_preemptible());
  }
}

void InstanceGroupConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstanceGroupConfig::CopyFrom(const InstanceGroupConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.InstanceGroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstanceGroupConfig::IsInitialized() const {
  return true;
}

void InstanceGroupConfig::Swap(InstanceGroupConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstanceGroupConfig::InternalSwap(InstanceGroupConfig* other) {
  using std::swap;
  instance_names_.InternalSwap(CastToBase(&other->instance_names_));
  CastToBase(&accelerators_)->InternalSwap(CastToBase(&other->accelerators_));
  image_uri_.Swap(&other->image_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_type_uri_.Swap(&other->machine_type_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  min_cpu_platform_.Swap(&other->min_cpu_platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(disk_config_, other->disk_config_);
  swap(managed_group_config_, other->managed_group_config_);
  swap(num_instances_, other->num_instances_);
  swap(is_preemptible_, other->is_preemptible_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstanceGroupConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManagedGroupConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagedGroupConfig::kInstanceTemplateNameFieldNumber;
const int ManagedGroupConfig::kInstanceGroupManagerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagedGroupConfig::ManagedGroupConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ManagedGroupConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
}
ManagedGroupConfig::ManagedGroupConfig(const ManagedGroupConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_template_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_template_name().size() > 0) {
    instance_template_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_template_name_);
  }
  instance_group_manager_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_group_manager_name().size() > 0) {
    instance_group_manager_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_group_manager_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
}

void ManagedGroupConfig::SharedCtor() {
  instance_template_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_group_manager_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ManagedGroupConfig::~ManagedGroupConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  SharedDtor();
}

void ManagedGroupConfig::SharedDtor() {
  instance_template_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_group_manager_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ManagedGroupConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManagedGroupConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManagedGroupConfig& ManagedGroupConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ManagedGroupConfig.base);
  return *internal_default_instance();
}


void ManagedGroupConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_template_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_group_manager_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ManagedGroupConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string instance_template_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_template_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_template_name().data(), static_cast<int>(this->instance_template_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_template_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_group_manager_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_group_manager_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_group_manager_name().data(), static_cast<int>(this->instance_group_manager_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_group_manager_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  return false;
#undef DO_
}

void ManagedGroupConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_template_name = 1;
  if (this->instance_template_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_template_name().data(), static_cast<int>(this->instance_template_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_template_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instance_template_name(), output);
  }

  // string instance_group_manager_name = 2;
  if (this->instance_group_manager_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_manager_name().data(), static_cast<int>(this->instance_group_manager_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_group_manager_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_group_manager_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
}

::google::protobuf::uint8* ManagedGroupConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance_template_name = 1;
  if (this->instance_template_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_template_name().data(), static_cast<int>(this->instance_template_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_template_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instance_template_name(), target);
  }

  // string instance_group_manager_name = 2;
  if (this->instance_group_manager_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_group_manager_name().data(), static_cast<int>(this->instance_group_manager_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedGroupConfig.instance_group_manager_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_group_manager_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  return target;
}

size_t ManagedGroupConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string instance_template_name = 1;
  if (this->instance_template_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_template_name());
  }

  // string instance_group_manager_name = 2;
  if (this->instance_group_manager_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_group_manager_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedGroupConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedGroupConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagedGroupConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
    MergeFrom(*source);
  }
}

void ManagedGroupConfig::MergeFrom(const ManagedGroupConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_template_name().size() > 0) {

    instance_template_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_template_name_);
  }
  if (from.instance_group_manager_name().size() > 0) {

    instance_group_manager_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_group_manager_name_);
  }
}

void ManagedGroupConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedGroupConfig::CopyFrom(const ManagedGroupConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ManagedGroupConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedGroupConfig::IsInitialized() const {
  return true;
}

void ManagedGroupConfig::Swap(ManagedGroupConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagedGroupConfig::InternalSwap(ManagedGroupConfig* other) {
  using std::swap;
  instance_template_name_.Swap(&other->instance_template_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_group_manager_name_.Swap(&other->instance_group_manager_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManagedGroupConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AcceleratorConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceleratorConfig::kAcceleratorTypeUriFieldNumber;
const int AcceleratorConfig::kAcceleratorCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceleratorConfig::AcceleratorConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_AcceleratorConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.AcceleratorConfig)
}
AcceleratorConfig::AcceleratorConfig(const AcceleratorConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accelerator_type_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accelerator_type_uri().size() > 0) {
    accelerator_type_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_uri_);
  }
  accelerator_count_ = from.accelerator_count_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.AcceleratorConfig)
}

void AcceleratorConfig::SharedCtor() {
  accelerator_type_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = 0;
}

AcceleratorConfig::~AcceleratorConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  SharedDtor();
}

void AcceleratorConfig::SharedDtor() {
  accelerator_type_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceleratorConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AcceleratorConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceleratorConfig& AcceleratorConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_AcceleratorConfig.base);
  return *internal_default_instance();
}


void AcceleratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accelerator_type_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accelerator_count_ = 0;
  _internal_metadata_.Clear();
}

bool AcceleratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string accelerator_type_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accelerator_type_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accelerator_type_uri().data(), static_cast<int>(this->accelerator_type_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.AcceleratorConfig.accelerator_type_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 accelerator_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accelerator_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  return false;
#undef DO_
}

void AcceleratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accelerator_type_uri = 1;
  if (this->accelerator_type_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type_uri().data(), static_cast<int>(this->accelerator_type_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.AcceleratorConfig.accelerator_type_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accelerator_type_uri(), output);
  }

  // int32 accelerator_count = 2;
  if (this->accelerator_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->accelerator_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.AcceleratorConfig)
}

::google::protobuf::uint8* AcceleratorConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string accelerator_type_uri = 1;
  if (this->accelerator_type_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accelerator_type_uri().data(), static_cast<int>(this->accelerator_type_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.AcceleratorConfig.accelerator_type_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accelerator_type_uri(), target);
  }

  // int32 accelerator_count = 2;
  if (this->accelerator_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->accelerator_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  return target;
}

size_t AcceleratorConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string accelerator_type_uri = 1;
  if (this->accelerator_type_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accelerator_type_uri());
  }

  // int32 accelerator_count = 2;
  if (this->accelerator_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accelerator_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcceleratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceleratorConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceleratorConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.AcceleratorConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.AcceleratorConfig)
    MergeFrom(*source);
  }
}

void AcceleratorConfig::MergeFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accelerator_type_uri().size() > 0) {

    accelerator_type_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accelerator_type_uri_);
  }
  if (from.accelerator_count() != 0) {
    set_accelerator_count(from.accelerator_count());
  }
}

void AcceleratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceleratorConfig::CopyFrom(const AcceleratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.AcceleratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceleratorConfig::IsInitialized() const {
  return true;
}

void AcceleratorConfig::Swap(AcceleratorConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceleratorConfig::InternalSwap(AcceleratorConfig* other) {
  using std::swap;
  accelerator_type_uri_.Swap(&other->accelerator_type_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accelerator_count_, other->accelerator_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AcceleratorConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiskConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiskConfig::kBootDiskTypeFieldNumber;
const int DiskConfig::kBootDiskSizeGbFieldNumber;
const int DiskConfig::kNumLocalSsdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiskConfig::DiskConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiskConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.DiskConfig)
}
DiskConfig::DiskConfig(const DiskConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  boot_disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.boot_disk_type().size() > 0) {
    boot_disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_type_);
  }
  ::memcpy(&boot_disk_size_gb_, &from.boot_disk_size_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_local_ssds_) -
    reinterpret_cast<char*>(&boot_disk_size_gb_)) + sizeof(num_local_ssds_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.DiskConfig)
}

void DiskConfig::SharedCtor() {
  boot_disk_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&boot_disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_local_ssds_) -
      reinterpret_cast<char*>(&boot_disk_size_gb_)) + sizeof(num_local_ssds_));
}

DiskConfig::~DiskConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.DiskConfig)
  SharedDtor();
}

void DiskConfig::SharedDtor() {
  boot_disk_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiskConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiskConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiskConfig& DiskConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiskConfig.base);
  return *internal_default_instance();
}


void DiskConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.DiskConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boot_disk_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&boot_disk_size_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_local_ssds_) -
      reinterpret_cast<char*>(&boot_disk_size_gb_)) + sizeof(num_local_ssds_));
  _internal_metadata_.Clear();
}

bool DiskConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.DiskConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 boot_disk_size_gb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boot_disk_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_local_ssds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_local_ssds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string boot_disk_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boot_disk_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->boot_disk_type().data(), static_cast<int>(this->boot_disk_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DiskConfig.boot_disk_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.DiskConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.DiskConfig)
  return false;
#undef DO_
}

void DiskConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.DiskConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 boot_disk_size_gb = 1;
  if (this->boot_disk_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boot_disk_size_gb(), output);
  }

  // int32 num_local_ssds = 2;
  if (this->num_local_ssds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_local_ssds(), output);
  }

  // string boot_disk_type = 3;
  if (this->boot_disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_type().data(), static_cast<int>(this->boot_disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiskConfig.boot_disk_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->boot_disk_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.DiskConfig)
}

::google::protobuf::uint8* DiskConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.DiskConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 boot_disk_size_gb = 1;
  if (this->boot_disk_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boot_disk_size_gb(), target);
  }

  // int32 num_local_ssds = 2;
  if (this->num_local_ssds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_local_ssds(), target);
  }

  // string boot_disk_type = 3;
  if (this->boot_disk_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boot_disk_type().data(), static_cast<int>(this->boot_disk_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiskConfig.boot_disk_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->boot_disk_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.DiskConfig)
  return target;
}

size_t DiskConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.DiskConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string boot_disk_type = 3;
  if (this->boot_disk_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->boot_disk_type());
  }

  // int32 boot_disk_size_gb = 1;
  if (this->boot_disk_size_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->boot_disk_size_gb());
  }

  // int32 num_local_ssds = 2;
  if (this->num_local_ssds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_local_ssds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiskConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.DiskConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DiskConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiskConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.DiskConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.DiskConfig)
    MergeFrom(*source);
  }
}

void DiskConfig::MergeFrom(const DiskConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.DiskConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.boot_disk_type().size() > 0) {

    boot_disk_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boot_disk_type_);
  }
  if (from.boot_disk_size_gb() != 0) {
    set_boot_disk_size_gb(from.boot_disk_size_gb());
  }
  if (from.num_local_ssds() != 0) {
    set_num_local_ssds(from.num_local_ssds());
  }
}

void DiskConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.DiskConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiskConfig::CopyFrom(const DiskConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.DiskConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiskConfig::IsInitialized() const {
  return true;
}

void DiskConfig::Swap(DiskConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiskConfig::InternalSwap(DiskConfig* other) {
  using std::swap;
  boot_disk_type_.Swap(&other->boot_disk_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(boot_disk_size_gb_, other->boot_disk_size_gb_);
  swap(num_local_ssds_, other->num_local_ssds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiskConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LifecycleConfig::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_LifecycleConfig_default_instance_._instance.get_mutable()->idle_delete_ttl_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_LifecycleConfig_default_instance_.auto_delete_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_LifecycleConfig_default_instance_.auto_delete_ttl_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void LifecycleConfig::clear_idle_delete_ttl() {
  if (GetArenaNoVirtual() == NULL && idle_delete_ttl_ != NULL) {
    delete idle_delete_ttl_;
  }
  idle_delete_ttl_ = NULL;
}
void LifecycleConfig::set_allocated_auto_delete_time(::google::protobuf::Timestamp* auto_delete_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ttl();
  if (auto_delete_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(auto_delete_time)->GetArena();
    if (message_arena != submessage_arena) {
      auto_delete_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auto_delete_time, submessage_arena);
    }
    set_has_auto_delete_time();
    ttl_.auto_delete_time_ = auto_delete_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.LifecycleConfig.auto_delete_time)
}
void LifecycleConfig::clear_auto_delete_time() {
  if (has_auto_delete_time()) {
    delete ttl_.auto_delete_time_;
    clear_has_ttl();
  }
}
void LifecycleConfig::set_allocated_auto_delete_ttl(::google::protobuf::Duration* auto_delete_ttl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_ttl();
  if (auto_delete_ttl) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(auto_delete_ttl)->GetArena();
    if (message_arena != submessage_arena) {
      auto_delete_ttl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auto_delete_ttl, submessage_arena);
    }
    set_has_auto_delete_ttl();
    ttl_.auto_delete_ttl_ = auto_delete_ttl;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.LifecycleConfig.auto_delete_ttl)
}
void LifecycleConfig::clear_auto_delete_ttl() {
  if (has_auto_delete_ttl()) {
    delete ttl_.auto_delete_ttl_;
    clear_has_ttl();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LifecycleConfig::kIdleDeleteTtlFieldNumber;
const int LifecycleConfig::kAutoDeleteTimeFieldNumber;
const int LifecycleConfig::kAutoDeleteTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LifecycleConfig::LifecycleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_LifecycleConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.LifecycleConfig)
}
LifecycleConfig::LifecycleConfig(const LifecycleConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_idle_delete_ttl()) {
    idle_delete_ttl_ = new ::google::protobuf::Duration(*from.idle_delete_ttl_);
  } else {
    idle_delete_ttl_ = NULL;
  }
  clear_has_ttl();
  switch (from.ttl_case()) {
    case kAutoDeleteTime: {
      mutable_auto_delete_time()->::google::protobuf::Timestamp::MergeFrom(from.auto_delete_time());
      break;
    }
    case kAutoDeleteTtl: {
      mutable_auto_delete_ttl()->::google::protobuf::Duration::MergeFrom(from.auto_delete_ttl());
      break;
    }
    case TTL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.LifecycleConfig)
}

void LifecycleConfig::SharedCtor() {
  idle_delete_ttl_ = NULL;
  clear_has_ttl();
}

LifecycleConfig::~LifecycleConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.LifecycleConfig)
  SharedDtor();
}

void LifecycleConfig::SharedDtor() {
  if (this != internal_default_instance()) delete idle_delete_ttl_;
  if (has_ttl()) {
    clear_ttl();
  }
}

void LifecycleConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LifecycleConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LifecycleConfig& LifecycleConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_LifecycleConfig.base);
  return *internal_default_instance();
}


void LifecycleConfig::clear_ttl() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  switch (ttl_case()) {
    case kAutoDeleteTime: {
      delete ttl_.auto_delete_time_;
      break;
    }
    case kAutoDeleteTtl: {
      delete ttl_.auto_delete_ttl_;
      break;
    }
    case TTL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TTL_NOT_SET;
}


void LifecycleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && idle_delete_ttl_ != NULL) {
    delete idle_delete_ttl_;
  }
  idle_delete_ttl_ = NULL;
  clear_ttl();
  _internal_metadata_.Clear();
}

bool LifecycleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration idle_delete_ttl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_idle_delete_ttl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp auto_delete_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auto_delete_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration auto_delete_ttl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auto_delete_ttl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.LifecycleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.LifecycleConfig)
  return false;
#undef DO_
}

void LifecycleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration idle_delete_ttl = 1;
  if (this->has_idle_delete_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_idle_delete_ttl(), output);
  }

  // .google.protobuf.Timestamp auto_delete_time = 2;
  if (has_auto_delete_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_auto_delete_time(), output);
  }

  // .google.protobuf.Duration auto_delete_ttl = 3;
  if (has_auto_delete_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_auto_delete_ttl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.LifecycleConfig)
}

::google::protobuf::uint8* LifecycleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration idle_delete_ttl = 1;
  if (this->has_idle_delete_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_idle_delete_ttl(), deterministic, target);
  }

  // .google.protobuf.Timestamp auto_delete_time = 2;
  if (has_auto_delete_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_auto_delete_time(), deterministic, target);
  }

  // .google.protobuf.Duration auto_delete_ttl = 3;
  if (has_auto_delete_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_auto_delete_ttl(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.LifecycleConfig)
  return target;
}

size_t LifecycleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration idle_delete_ttl = 1;
  if (this->has_idle_delete_ttl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *idle_delete_ttl_);
  }

  switch (ttl_case()) {
    // .google.protobuf.Timestamp auto_delete_time = 2;
    case kAutoDeleteTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ttl_.auto_delete_time_);
      break;
    }
    // .google.protobuf.Duration auto_delete_ttl = 3;
    case kAutoDeleteTtl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ttl_.auto_delete_ttl_);
      break;
    }
    case TTL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LifecycleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LifecycleConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LifecycleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.LifecycleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.LifecycleConfig)
    MergeFrom(*source);
  }
}

void LifecycleConfig::MergeFrom(const LifecycleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_idle_delete_ttl()) {
    mutable_idle_delete_ttl()->::google::protobuf::Duration::MergeFrom(from.idle_delete_ttl());
  }
  switch (from.ttl_case()) {
    case kAutoDeleteTime: {
      mutable_auto_delete_time()->::google::protobuf::Timestamp::MergeFrom(from.auto_delete_time());
      break;
    }
    case kAutoDeleteTtl: {
      mutable_auto_delete_ttl()->::google::protobuf::Duration::MergeFrom(from.auto_delete_ttl());
      break;
    }
    case TTL_NOT_SET: {
      break;
    }
  }
}

void LifecycleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LifecycleConfig::CopyFrom(const LifecycleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.LifecycleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LifecycleConfig::IsInitialized() const {
  return true;
}

void LifecycleConfig::Swap(LifecycleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LifecycleConfig::InternalSwap(LifecycleConfig* other) {
  using std::swap;
  swap(idle_delete_ttl_, other->idle_delete_ttl_);
  swap(ttl_, other->ttl_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LifecycleConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeInitializationAction::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_NodeInitializationAction_default_instance_._instance.get_mutable()->execution_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void NodeInitializationAction::clear_execution_timeout() {
  if (GetArenaNoVirtual() == NULL && execution_timeout_ != NULL) {
    delete execution_timeout_;
  }
  execution_timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeInitializationAction::kExecutableFileFieldNumber;
const int NodeInitializationAction::kExecutionTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeInitializationAction::NodeInitializationAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_NodeInitializationAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.NodeInitializationAction)
}
NodeInitializationAction::NodeInitializationAction(const NodeInitializationAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  executable_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.executable_file().size() > 0) {
    executable_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executable_file_);
  }
  if (from.has_execution_timeout()) {
    execution_timeout_ = new ::google::protobuf::Duration(*from.execution_timeout_);
  } else {
    execution_timeout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.NodeInitializationAction)
}

void NodeInitializationAction::SharedCtor() {
  executable_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  execution_timeout_ = NULL;
}

NodeInitializationAction::~NodeInitializationAction() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  SharedDtor();
}

void NodeInitializationAction::SharedDtor() {
  executable_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete execution_timeout_;
}

void NodeInitializationAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeInitializationAction::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeInitializationAction& NodeInitializationAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_NodeInitializationAction.base);
  return *internal_default_instance();
}


void NodeInitializationAction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  executable_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && execution_timeout_ != NULL) {
    delete execution_timeout_;
  }
  execution_timeout_ = NULL;
  _internal_metadata_.Clear();
}

bool NodeInitializationAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string executable_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_executable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->executable_file().data(), static_cast<int>(this->executable_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.NodeInitializationAction.executable_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration execution_timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  return false;
#undef DO_
}

void NodeInitializationAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string executable_file = 1;
  if (this->executable_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->executable_file().data(), static_cast<int>(this->executable_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.NodeInitializationAction.executable_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->executable_file(), output);
  }

  // .google.protobuf.Duration execution_timeout = 2;
  if (this->has_execution_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_execution_timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.NodeInitializationAction)
}

::google::protobuf::uint8* NodeInitializationAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string executable_file = 1;
  if (this->executable_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->executable_file().data(), static_cast<int>(this->executable_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.NodeInitializationAction.executable_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->executable_file(), target);
  }

  // .google.protobuf.Duration execution_timeout = 2;
  if (this->has_execution_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_execution_timeout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  return target;
}

size_t NodeInitializationAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string executable_file = 1;
  if (this->executable_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->executable_file());
  }

  // .google.protobuf.Duration execution_timeout = 2;
  if (this->has_execution_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *execution_timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeInitializationAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeInitializationAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeInitializationAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.NodeInitializationAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.NodeInitializationAction)
    MergeFrom(*source);
  }
}

void NodeInitializationAction::MergeFrom(const NodeInitializationAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.executable_file().size() > 0) {

    executable_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.executable_file_);
  }
  if (from.has_execution_timeout()) {
    mutable_execution_timeout()->::google::protobuf::Duration::MergeFrom(from.execution_timeout());
  }
}

void NodeInitializationAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeInitializationAction::CopyFrom(const NodeInitializationAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.NodeInitializationAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeInitializationAction::IsInitialized() const {
  return true;
}

void NodeInitializationAction::Swap(NodeInitializationAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeInitializationAction::InternalSwap(NodeInitializationAction* other) {
  using std::swap;
  executable_file_.Swap(&other->executable_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(execution_timeout_, other->execution_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeInitializationAction::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterStatus::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_ClusterStatus_default_instance_._instance.get_mutable()->state_start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void ClusterStatus::clear_state_start_time() {
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterStatus::kStateFieldNumber;
const int ClusterStatus::kDetailFieldNumber;
const int ClusterStatus::kStateStartTimeFieldNumber;
const int ClusterStatus::kSubstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterStatus::ClusterStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ClusterStatus)
}
ClusterStatus::ClusterStatus(const ClusterStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detail().size() > 0) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.has_state_start_time()) {
    state_start_time_ = new ::google::protobuf::Timestamp(*from.state_start_time_);
  } else {
    state_start_time_ = NULL;
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&substate_) -
    reinterpret_cast<char*>(&state_)) + sizeof(substate_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ClusterStatus)
}

void ClusterStatus::SharedCtor() {
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&substate_) -
      reinterpret_cast<char*>(&state_start_time_)) + sizeof(substate_));
}

ClusterStatus::~ClusterStatus() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ClusterStatus)
  SharedDtor();
}

void ClusterStatus::SharedDtor() {
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_start_time_;
}

void ClusterStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterStatus::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterStatus& ClusterStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterStatus.base);
  return *internal_default_instance();
}


void ClusterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_start_time_ != NULL) {
    delete state_start_time_;
  }
  state_start_time_ = NULL;
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&substate_) -
      reinterpret_cast<char*>(&state_)) + sizeof(substate_));
  _internal_metadata_.Clear();
}

bool ClusterStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1beta2.ClusterStatus.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1beta2::ClusterStatus_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detail().data(), static_cast<int>(this->detail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterStatus.detail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp state_start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterStatus.Substate substate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_substate(static_cast< ::google::cloud::dataproc::v1beta2::ClusterStatus_Substate >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ClusterStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ClusterStatus)
  return false;
#undef DO_
}

void ClusterStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.ClusterStatus.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterStatus.detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detail(), output);
  }

  // .google.protobuf.Timestamp state_start_time = 3;
  if (this->has_state_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_state_start_time(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus.Substate substate = 4;
  if (this->substate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->substate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ClusterStatus)
}

::google::protobuf::uint8* ClusterStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.ClusterStatus.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // string detail = 2;
  if (this->detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detail().data(), static_cast<int>(this->detail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterStatus.detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detail(), target);
  }

  // .google.protobuf.Timestamp state_start_time = 3;
  if (this->has_state_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_state_start_time(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus.Substate substate = 4;
  if (this->substate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->substate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ClusterStatus)
  return target;
}

size_t ClusterStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string detail = 2;
  if (this->detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  // .google.protobuf.Timestamp state_start_time = 3;
  if (this->has_state_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_start_time_);
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .google.cloud.dataproc.v1beta2.ClusterStatus.Substate substate = 4;
  if (this->substate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->substate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ClusterStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ClusterStatus)
    MergeFrom(*source);
  }
}

void ClusterStatus::MergeFrom(const ClusterStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.detail().size() > 0) {

    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  if (from.has_state_start_time()) {
    mutable_state_start_time()->::google::protobuf::Timestamp::MergeFrom(from.state_start_time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.substate() != 0) {
    set_substate(from.substate());
  }
}

void ClusterStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterStatus::CopyFrom(const ClusterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ClusterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterStatus::IsInitialized() const {
  return true;
}

void ClusterStatus::Swap(ClusterStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterStatus::InternalSwap(ClusterStatus* other) {
  using std::swap;
  detail_.Swap(&other->detail_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_start_time_, other->state_start_time_);
  swap(state_, other->state_);
  swap(substate_, other->substate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterStatus::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SoftwareConfig_PropertiesEntry_DoNotUse::SoftwareConfig_PropertiesEntry_DoNotUse() {}
SoftwareConfig_PropertiesEntry_DoNotUse::SoftwareConfig_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SoftwareConfig_PropertiesEntry_DoNotUse::MergeFrom(const SoftwareConfig_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SoftwareConfig_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[12];
}
void SoftwareConfig_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SoftwareConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SoftwareConfig::kImageVersionFieldNumber;
const int SoftwareConfig::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SoftwareConfig::SoftwareConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_SoftwareConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.SoftwareConfig)
}
SoftwareConfig::SoftwareConfig(const SoftwareConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  image_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_version().size() > 0) {
    image_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_version_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.SoftwareConfig)
}

void SoftwareConfig::SharedCtor() {
  image_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SoftwareConfig::~SoftwareConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.SoftwareConfig)
  SharedDtor();
}

void SoftwareConfig::SharedDtor() {
  image_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SoftwareConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SoftwareConfig::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SoftwareConfig& SoftwareConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_SoftwareConfig.base);
  return *internal_default_instance();
}


void SoftwareConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  image_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SoftwareConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_version().data(), static_cast<int>(this->image_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.SoftwareConfig.image_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SoftwareConfig_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SoftwareConfig_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.SoftwareConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.SoftwareConfig)
  return false;
#undef DO_
}

void SoftwareConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_version = 1;
  if (this->image_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_version().data(), static_cast<int>(this->image_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.SoftwareConfig.image_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_version(), output);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SoftwareConfig_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SoftwareConfig_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.SoftwareConfig)
}

::google::protobuf::uint8* SoftwareConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_version = 1;
  if (this->image_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_version().data(), static_cast<int>(this->image_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.SoftwareConfig.image_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_version(), target);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.SoftwareConfig.PropertiesEntry.value");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SoftwareConfig_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SoftwareConfig_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.SoftwareConfig)
  return target;
}

size_t SoftwareConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> properties = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::std::unique_ptr<SoftwareConfig_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string image_version = 1;
  if (this->image_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SoftwareConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwareConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SoftwareConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.SoftwareConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.SoftwareConfig)
    MergeFrom(*source);
  }
}

void SoftwareConfig::MergeFrom(const SoftwareConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.image_version().size() > 0) {

    image_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_version_);
  }
}

void SoftwareConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwareConfig::CopyFrom(const SoftwareConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.SoftwareConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwareConfig::IsInitialized() const {
  return true;
}

void SoftwareConfig::Swap(SoftwareConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SoftwareConfig::InternalSwap(SoftwareConfig* other) {
  using std::swap;
  properties_.Swap(&other->properties_);
  image_version_.Swap(&other->image_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SoftwareConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ClusterMetrics_HdfsMetricsEntry_DoNotUse::ClusterMetrics_HdfsMetricsEntry_DoNotUse() {}
ClusterMetrics_HdfsMetricsEntry_DoNotUse::ClusterMetrics_HdfsMetricsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClusterMetrics_HdfsMetricsEntry_DoNotUse::MergeFrom(const ClusterMetrics_HdfsMetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClusterMetrics_HdfsMetricsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[14];
}
void ClusterMetrics_HdfsMetricsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ClusterMetrics_YarnMetricsEntry_DoNotUse::ClusterMetrics_YarnMetricsEntry_DoNotUse() {}
ClusterMetrics_YarnMetricsEntry_DoNotUse::ClusterMetrics_YarnMetricsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClusterMetrics_YarnMetricsEntry_DoNotUse::MergeFrom(const ClusterMetrics_YarnMetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClusterMetrics_YarnMetricsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[15];
}
void ClusterMetrics_YarnMetricsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ClusterMetrics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterMetrics::kHdfsMetricsFieldNumber;
const int ClusterMetrics::kYarnMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterMetrics::ClusterMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ClusterMetrics)
}
ClusterMetrics::ClusterMetrics(const ClusterMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hdfs_metrics_.MergeFrom(from.hdfs_metrics_);
  yarn_metrics_.MergeFrom(from.yarn_metrics_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ClusterMetrics)
}

void ClusterMetrics::SharedCtor() {
}

ClusterMetrics::~ClusterMetrics() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ClusterMetrics)
  SharedDtor();
}

void ClusterMetrics::SharedDtor() {
}

void ClusterMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterMetrics::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterMetrics& ClusterMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterMetrics.base);
  return *internal_default_instance();
}


void ClusterMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hdfs_metrics_.Clear();
  yarn_metrics_.Clear();
  _internal_metadata_.Clear();
}

bool ClusterMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, int64> hdfs_metrics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ClusterMetrics_HdfsMetricsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClusterMetrics_HdfsMetricsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&hdfs_metrics_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterMetrics.HdfsMetricsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> yarn_metrics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ClusterMetrics_YarnMetricsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClusterMetrics_YarnMetricsEntry_DoNotUse,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&yarn_metrics_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterMetrics.YarnMetricsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ClusterMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ClusterMetrics)
  return false;
#undef DO_
}

void ClusterMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int64> hdfs_metrics = 1;
  if (!this->hdfs_metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterMetrics.HdfsMetricsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->hdfs_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hdfs_metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->hdfs_metrics().begin();
          it != this->hdfs_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterMetrics_HdfsMetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hdfs_metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterMetrics_HdfsMetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->hdfs_metrics().begin();
          it != this->hdfs_metrics().end(); ++it) {
        entry.reset(hdfs_metrics_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int64> yarn_metrics = 2;
  if (!this->yarn_metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterMetrics.YarnMetricsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->yarn_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->yarn_metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->yarn_metrics().begin();
          it != this->yarn_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterMetrics_YarnMetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(yarn_metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterMetrics_YarnMetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->yarn_metrics().begin();
          it != this->yarn_metrics().end(); ++it) {
        entry.reset(yarn_metrics_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ClusterMetrics)
}

::google::protobuf::uint8* ClusterMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int64> hdfs_metrics = 1;
  if (!this->hdfs_metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterMetrics.HdfsMetricsEntry.key");
      }
    };

    if (deterministic &&
        this->hdfs_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->hdfs_metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->hdfs_metrics().begin();
          it != this->hdfs_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterMetrics_HdfsMetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hdfs_metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterMetrics_HdfsMetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->hdfs_metrics().begin();
          it != this->hdfs_metrics().end(); ++it) {
        entry.reset(hdfs_metrics_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, int64> yarn_metrics = 2;
  if (!this->yarn_metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterMetrics.YarnMetricsEntry.key");
      }
    };

    if (deterministic &&
        this->yarn_metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->yarn_metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->yarn_metrics().begin();
          it != this->yarn_metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterMetrics_YarnMetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(yarn_metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterMetrics_YarnMetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->yarn_metrics().begin();
          it != this->yarn_metrics().end(); ++it) {
        entry.reset(yarn_metrics_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ClusterMetrics)
  return target;
}

size_t ClusterMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int64> hdfs_metrics = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hdfs_metrics_size());
  {
    ::std::unique_ptr<ClusterMetrics_HdfsMetricsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->hdfs_metrics().begin();
        it != this->hdfs_metrics().end(); ++it) {
      entry.reset(hdfs_metrics_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, int64> yarn_metrics = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->yarn_metrics_size());
  {
    ::std::unique_ptr<ClusterMetrics_YarnMetricsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->yarn_metrics().begin();
        it != this->yarn_metrics().end(); ++it) {
      entry.reset(yarn_metrics_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ClusterMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ClusterMetrics)
    MergeFrom(*source);
  }
}

void ClusterMetrics::MergeFrom(const ClusterMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hdfs_metrics_.MergeFrom(from.hdfs_metrics_);
  yarn_metrics_.MergeFrom(from.yarn_metrics_);
}

void ClusterMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterMetrics::CopyFrom(const ClusterMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ClusterMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterMetrics::IsInitialized() const {
  return true;
}

void ClusterMetrics::Swap(ClusterMetrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterMetrics::InternalSwap(ClusterMetrics* other) {
  using std::swap;
  hdfs_metrics_.Swap(&other->hdfs_metrics_);
  yarn_metrics_.Swap(&other->yarn_metrics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterMetrics::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateClusterRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_CreateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::cloud::dataproc::v1beta2::Cluster*>(
      ::google::cloud::dataproc::v1beta2::Cluster::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateClusterRequest::kProjectIdFieldNumber;
const int CreateClusterRequest::kRegionFieldNumber;
const int CreateClusterRequest::kClusterFieldNumber;
const int CreateClusterRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateClusterRequest::CreateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_CreateClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.CreateClusterRequest)
}
CreateClusterRequest::CreateClusterRequest(const CreateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::cloud::dataproc::v1beta2::Cluster(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.CreateClusterRequest)
}

void CreateClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_ = NULL;
}

CreateClusterRequest::~CreateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  SharedDtor();
}

void CreateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
}

void CreateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateClusterRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateClusterRequest& CreateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_CreateClusterRequest.base);
  return *internal_default_instance();
}


void CreateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.CreateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.Cluster cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.CreateClusterRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.CreateClusterRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  return false;
#undef DO_
}

void CreateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 2;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cluster(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.CreateClusterRequest)
}

::google::protobuf::uint8* CreateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 2;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cluster(), deterministic, target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateClusterRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  return target;
}

size_t CreateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 2;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.CreateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.CreateClusterRequest)
    MergeFrom(*source);
  }
}

void CreateClusterRequest::MergeFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::cloud::dataproc::v1beta2::Cluster::MergeFrom(from.cluster());
  }
}

void CreateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateClusterRequest::CopyFrom(const CreateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.CreateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateClusterRequest::IsInitialized() const {
  return true;
}

void CreateClusterRequest::Swap(CreateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateClusterRequest::InternalSwap(CreateClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_, other->cluster_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateClusterRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateClusterRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_UpdateClusterRequest_default_instance_._instance.get_mutable()->cluster_ = const_cast< ::google::cloud::dataproc::v1beta2::Cluster*>(
      ::google::cloud::dataproc::v1beta2::Cluster::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_UpdateClusterRequest_default_instance_._instance.get_mutable()->graceful_decommission_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_UpdateClusterRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateClusterRequest::clear_graceful_decommission_timeout() {
  if (GetArenaNoVirtual() == NULL && graceful_decommission_timeout_ != NULL) {
    delete graceful_decommission_timeout_;
  }
  graceful_decommission_timeout_ = NULL;
}
void UpdateClusterRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateClusterRequest::kProjectIdFieldNumber;
const int UpdateClusterRequest::kRegionFieldNumber;
const int UpdateClusterRequest::kClusterNameFieldNumber;
const int UpdateClusterRequest::kClusterFieldNumber;
const int UpdateClusterRequest::kGracefulDecommissionTimeoutFieldNumber;
const int UpdateClusterRequest::kUpdateMaskFieldNumber;
const int UpdateClusterRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateClusterRequest::UpdateClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_UpdateClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
}
UpdateClusterRequest::UpdateClusterRequest(const UpdateClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_cluster()) {
    cluster_ = new ::google::cloud::dataproc::v1beta2::Cluster(*from.cluster_);
  } else {
    cluster_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  if (from.has_graceful_decommission_timeout()) {
    graceful_decommission_timeout_ = new ::google::protobuf::Duration(*from.graceful_decommission_timeout_);
  } else {
    graceful_decommission_timeout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
}

void UpdateClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&graceful_decommission_timeout_) -
      reinterpret_cast<char*>(&cluster_)) + sizeof(graceful_decommission_timeout_));
}

UpdateClusterRequest::~UpdateClusterRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  SharedDtor();
}

void UpdateClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cluster_;
  if (this != internal_default_instance()) delete update_mask_;
  if (this != internal_default_instance()) delete graceful_decommission_timeout_;
}

void UpdateClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateClusterRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateClusterRequest& UpdateClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_UpdateClusterRequest.base);
  return *internal_default_instance();
}


void UpdateClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cluster_ != NULL) {
    delete cluster_;
  }
  cluster_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && graceful_decommission_timeout_ != NULL) {
    delete graceful_decommission_timeout_;
  }
  graceful_decommission_timeout_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.UpdateClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.UpdateClusterRequest.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.Cluster cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.UpdateClusterRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration graceful_decommission_timeout = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graceful_decommission_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.UpdateClusterRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  return false;
#undef DO_
}

void UpdateClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 3;
  if (this->has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cluster(), output);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_update_mask(), output);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->region(), output);
  }

  // .google.protobuf.Duration graceful_decommission_timeout = 6;
  if (this->has_graceful_decommission_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_graceful_decommission_timeout(), output);
  }

  // string request_id = 7;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
}

::google::protobuf::uint8* UpdateClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 3;
  if (this->has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cluster(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_update_mask(), deterministic, target);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->region(), target);
  }

  // .google.protobuf.Duration graceful_decommission_timeout = 6;
  if (this->has_graceful_decommission_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_graceful_decommission_timeout(), deterministic, target);
  }

  // string request_id = 7;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.UpdateClusterRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  return target;
}

size_t UpdateClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string region = 5;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string request_id = 7;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .google.cloud.dataproc.v1beta2.Cluster cluster = 3;
  if (this->has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cluster_);
  }

  // .google.protobuf.FieldMask update_mask = 4;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // .google.protobuf.Duration graceful_decommission_timeout = 6;
  if (this->has_graceful_decommission_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graceful_decommission_timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
    MergeFrom(*source);
  }
}

void UpdateClusterRequest::MergeFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_cluster()) {
    mutable_cluster()->::google::cloud::dataproc::v1beta2::Cluster::MergeFrom(from.cluster());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.has_graceful_decommission_timeout()) {
    mutable_graceful_decommission_timeout()->::google::protobuf::Duration::MergeFrom(from.graceful_decommission_timeout());
  }
}

void UpdateClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateClusterRequest::CopyFrom(const UpdateClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.UpdateClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateClusterRequest::IsInitialized() const {
  return true;
}

void UpdateClusterRequest::Swap(UpdateClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateClusterRequest::InternalSwap(UpdateClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cluster_, other->cluster_);
  swap(update_mask_, other->update_mask_);
  swap(graceful_decommission_timeout_, other->graceful_decommission_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateClusterRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteClusterRequest::kProjectIdFieldNumber;
const int DeleteClusterRequest::kRegionFieldNumber;
const int DeleteClusterRequest::kClusterNameFieldNumber;
const int DeleteClusterRequest::kClusterUuidFieldNumber;
const int DeleteClusterRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteClusterRequest::DeleteClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DeleteClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
}
DeleteClusterRequest::DeleteClusterRequest(const DeleteClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_uuid().size() > 0) {
    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
}

void DeleteClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteClusterRequest::~DeleteClusterRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  SharedDtor();
}

void DeleteClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteClusterRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteClusterRequest& DeleteClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DeleteClusterRequest.base);
  return *internal_default_instance();
}


void DeleteClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteClusterRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_uuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteClusterRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  return false;
#undef DO_
}

void DeleteClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  // string cluster_uuid = 4;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cluster_uuid(), output);
  }

  // string request_id = 5;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
}

::google::protobuf::uint8* DeleteClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  // string cluster_uuid = 4;
  if (this->cluster_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_uuid().data(), static_cast<int>(this->cluster_uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.cluster_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cluster_uuid(), target);
  }

  // string request_id = 5;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteClusterRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  return target;
}

size_t DeleteClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string cluster_uuid = 4;
  if (this->cluster_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_uuid());
  }

  // string request_id = 5;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
    MergeFrom(*source);
  }
}

void DeleteClusterRequest::MergeFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.cluster_uuid().size() > 0) {

    cluster_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_uuid_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void DeleteClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteClusterRequest::CopyFrom(const DeleteClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.DeleteClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteClusterRequest::IsInitialized() const {
  return true;
}

void DeleteClusterRequest::Swap(DeleteClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteClusterRequest::InternalSwap(DeleteClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_uuid_.Swap(&other->cluster_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteClusterRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterRequest::kProjectIdFieldNumber;
const int GetClusterRequest::kRegionFieldNumber;
const int GetClusterRequest::kClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterRequest::GetClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GetClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.GetClusterRequest)
}
GetClusterRequest::GetClusterRequest(const GetClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.GetClusterRequest)
}

void GetClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetClusterRequest::~GetClusterRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.GetClusterRequest)
  SharedDtor();
}

void GetClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetClusterRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetClusterRequest& GetClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_GetClusterRequest.base);
  return *internal_default_instance();
}


void GetClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GetClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GetClusterRequest.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GetClusterRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.GetClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.GetClusterRequest)
  return false;
#undef DO_
}

void GetClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.GetClusterRequest)
}

::google::protobuf::uint8* GetClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetClusterRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.GetClusterRequest)
  return target;
}

size_t GetClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.GetClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.GetClusterRequest)
    MergeFrom(*source);
  }
}

void GetClusterRequest::MergeFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void GetClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterRequest::CopyFrom(const GetClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.GetClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterRequest::IsInitialized() const {
  return true;
}

void GetClusterRequest::Swap(GetClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterRequest::InternalSwap(GetClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetClusterRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersRequest::kProjectIdFieldNumber;
const int ListClustersRequest::kRegionFieldNumber;
const int ListClustersRequest::kFilterFieldNumber;
const int ListClustersRequest::kPageSizeFieldNumber;
const int ListClustersRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersRequest::ListClustersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ListClustersRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ListClustersRequest)
}
ListClustersRequest::ListClustersRequest(const ListClustersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filter().size() > 0) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ListClustersRequest)
}

void ListClustersRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListClustersRequest::~ListClustersRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ListClustersRequest)
  SharedDtor();
}

void ListClustersRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListClustersRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersRequest& ListClustersRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ListClustersRequest.base);
  return *internal_default_instance();
}


void ListClustersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListClustersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListClustersRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListClustersRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListClustersRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListClustersRequest.filter"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ListClustersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ListClustersRequest)
  return false;
#undef DO_
}

void ListClustersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  // string region = 4;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->region(), output);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ListClustersRequest)
}

::google::protobuf::uint8* ListClustersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  // string region = 4;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->region(), target);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersRequest.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ListClustersRequest)
  return target;
}

size_t ListClustersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // string region = 4;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ListClustersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ListClustersRequest)
    MergeFrom(*source);
  }
}

void ListClustersRequest::MergeFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListClustersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersRequest::CopyFrom(const ListClustersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ListClustersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersRequest::IsInitialized() const {
  return true;
}

void ListClustersRequest::Swap(ListClustersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersRequest::InternalSwap(ListClustersRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListClustersRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListClustersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListClustersResponse::kClustersFieldNumber;
const int ListClustersResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListClustersResponse::ListClustersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ListClustersResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ListClustersResponse)
}
ListClustersResponse::ListClustersResponse(const ListClustersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clusters_(from.clusters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ListClustersResponse)
}

void ListClustersResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListClustersResponse::~ListClustersResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ListClustersResponse)
  SharedDtor();
}

void ListClustersResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListClustersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListClustersResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListClustersResponse& ListClustersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ListClustersResponse.base);
  return *internal_default_instance();
}


void ListClustersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clusters_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListClustersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dataproc.v1beta2.Cluster clusters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_clusters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListClustersResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ListClustersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ListClustersResponse)
  return false;
#undef DO_
}

void ListClustersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->clusters(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ListClustersResponse)
}

::google::protobuf::uint8* ListClustersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.Cluster clusters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->clusters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->clusters(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListClustersResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ListClustersResponse)
  return target;
}

size_t ListClustersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1beta2.Cluster clusters = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->clusters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->clusters(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListClustersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListClustersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListClustersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ListClustersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ListClustersResponse)
    MergeFrom(*source);
  }
}

void ListClustersResponse::MergeFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clusters_.MergeFrom(from.clusters_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListClustersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListClustersResponse::CopyFrom(const ListClustersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ListClustersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListClustersResponse::IsInitialized() const {
  return true;
}

void ListClustersResponse::Swap(ListClustersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListClustersResponse::InternalSwap(ListClustersResponse* other) {
  using std::swap;
  CastToBase(&clusters_)->InternalSwap(CastToBase(&other->clusters_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListClustersResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiagnoseClusterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiagnoseClusterRequest::kProjectIdFieldNumber;
const int DiagnoseClusterRequest::kRegionFieldNumber;
const int DiagnoseClusterRequest::kClusterNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiagnoseClusterRequest::DiagnoseClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiagnoseClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
}
DiagnoseClusterRequest::DiagnoseClusterRequest(const DiagnoseClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
}

void DiagnoseClusterRequest::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DiagnoseClusterRequest::~DiagnoseClusterRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  SharedDtor();
}

void DiagnoseClusterRequest::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiagnoseClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiagnoseClusterRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiagnoseClusterRequest& DiagnoseClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiagnoseClusterRequest.base);
  return *internal_default_instance();
}


void DiagnoseClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DiagnoseClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  return false;
#undef DO_
}

void DiagnoseClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_id(), output);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->region(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
}

::google::protobuf::uint8* DiagnoseClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project_id = 1;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_id(), target);
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // string region = 3;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->region(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  return target;
}

size_t DiagnoseClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project_id = 1;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // string region = 3;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiagnoseClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiagnoseClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiagnoseClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
    MergeFrom(*source);
  }
}

void DiagnoseClusterRequest::MergeFrom(const DiagnoseClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_id().size() > 0) {

    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
}

void DiagnoseClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiagnoseClusterRequest::CopyFrom(const DiagnoseClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiagnoseClusterRequest::IsInitialized() const {
  return true;
}

void DiagnoseClusterRequest::Swap(DiagnoseClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiagnoseClusterRequest::InternalSwap(DiagnoseClusterRequest* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiagnoseClusterRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiagnoseClusterResults::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiagnoseClusterResults::kOutputUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiagnoseClusterResults::DiagnoseClusterResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiagnoseClusterResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
}
DiagnoseClusterResults::DiagnoseClusterResults(const DiagnoseClusterResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_uri().size() > 0) {
    output_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
}

void DiagnoseClusterResults::SharedCtor() {
  output_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DiagnoseClusterResults::~DiagnoseClusterResults() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  SharedDtor();
}

void DiagnoseClusterResults::SharedDtor() {
  output_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DiagnoseClusterResults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiagnoseClusterResults::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiagnoseClusterResults& DiagnoseClusterResults::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_DiagnoseClusterResults.base);
  return *internal_default_instance();
}


void DiagnoseClusterResults::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DiagnoseClusterResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string output_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_uri().data(), static_cast<int>(this->output_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DiagnoseClusterResults.output_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  return false;
#undef DO_
}

void DiagnoseClusterResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_uri = 1;
  if (this->output_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri().data(), static_cast<int>(this->output_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterResults.output_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->output_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
}

::google::protobuf::uint8* DiagnoseClusterResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string output_uri = 1;
  if (this->output_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_uri().data(), static_cast<int>(this->output_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DiagnoseClusterResults.output_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  return target;
}

size_t DiagnoseClusterResults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string output_uri = 1;
  if (this->output_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiagnoseClusterResults::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  GOOGLE_DCHECK_NE(&from, this);
  const DiagnoseClusterResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiagnoseClusterResults>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
    MergeFrom(*source);
  }
}

void DiagnoseClusterResults::MergeFrom(const DiagnoseClusterResults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_uri().size() > 0) {

    output_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_uri_);
  }
}

void DiagnoseClusterResults::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiagnoseClusterResults::CopyFrom(const DiagnoseClusterResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.DiagnoseClusterResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiagnoseClusterResults::IsInitialized() const {
  return true;
}

void DiagnoseClusterResults::Swap(DiagnoseClusterResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiagnoseClusterResults::InternalSwap(DiagnoseClusterResults* other) {
  using std::swap;
  output_uri_.Swap(&other->output_uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiagnoseClusterResults::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::Cluster_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::Cluster* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::Cluster >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::Cluster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::GceClusterConfig_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::GceClusterConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::GceClusterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::GceClusterConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::InstanceGroupConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::InstanceGroupConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::InstanceGroupConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ManagedGroupConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ManagedGroupConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ManagedGroupConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::AcceleratorConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::AcceleratorConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::AcceleratorConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::DiskConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::DiskConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::DiskConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::LifecycleConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::LifecycleConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::LifecycleConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::NodeInitializationAction* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::NodeInitializationAction >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::NodeInitializationAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterStatus* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterStatus >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::SoftwareConfig_PropertiesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::SoftwareConfig* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::SoftwareConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::SoftwareConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterMetrics_HdfsMetricsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterMetrics_YarnMetricsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterMetrics* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterMetrics >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterMetrics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::CreateClusterRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::CreateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::CreateClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::UpdateClusterRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::UpdateClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::UpdateClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::DeleteClusterRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::DeleteClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::DeleteClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::GetClusterRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::GetClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::GetClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ListClustersRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ListClustersRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ListClustersRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ListClustersResponse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ListClustersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ListClustersResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::DiagnoseClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::DiagnoseClusterResults* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::DiagnoseClusterResults >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::DiagnoseClusterResults >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
