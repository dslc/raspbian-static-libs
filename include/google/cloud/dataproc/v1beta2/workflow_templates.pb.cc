// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1beta2/workflow_templates.proto

#include "google/cloud/dataproc/v1beta2/workflow_templates.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ClusterConfig;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto
namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JobScheduling;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_HadoopJob;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PySparkJob;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SparkJob;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_HiveJob;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_PigJob;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SparkSqlJob;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto
namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterOperation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterSelector_ClusterLabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ManagedCluster_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OrderedJob_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowMetadata_ParametersEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowNode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowTemplate_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClusterSelector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WorkflowGraph;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ManagedCluster;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_WorkflowTemplatePlacement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_WorkflowTemplate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_OrderedJob;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {
class WorkflowTemplate_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowTemplate_LabelsEntry_DoNotUse>
      _instance;
} _WorkflowTemplate_LabelsEntry_DoNotUse_default_instance_;
class WorkflowTemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowTemplate>
      _instance;
} _WorkflowTemplate_default_instance_;
class WorkflowTemplatePlacementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowTemplatePlacement>
      _instance;
  const ::google::cloud::dataproc::v1beta2::ManagedCluster* managed_cluster_;
  const ::google::cloud::dataproc::v1beta2::ClusterSelector* cluster_selector_;
} _WorkflowTemplatePlacement_default_instance_;
class ManagedCluster_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagedCluster_LabelsEntry_DoNotUse>
      _instance;
} _ManagedCluster_LabelsEntry_DoNotUse_default_instance_;
class ManagedClusterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagedCluster>
      _instance;
} _ManagedCluster_default_instance_;
class ClusterSelector_ClusterLabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterSelector_ClusterLabelsEntry_DoNotUse>
      _instance;
} _ClusterSelector_ClusterLabelsEntry_DoNotUse_default_instance_;
class ClusterSelectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterSelector>
      _instance;
} _ClusterSelector_default_instance_;
class OrderedJob_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderedJob_LabelsEntry_DoNotUse>
      _instance;
} _OrderedJob_LabelsEntry_DoNotUse_default_instance_;
class OrderedJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderedJob>
      _instance;
  const ::google::cloud::dataproc::v1beta2::HadoopJob* hadoop_job_;
  const ::google::cloud::dataproc::v1beta2::SparkJob* spark_job_;
  const ::google::cloud::dataproc::v1beta2::PySparkJob* pyspark_job_;
  const ::google::cloud::dataproc::v1beta2::HiveJob* hive_job_;
  const ::google::cloud::dataproc::v1beta2::PigJob* pig_job_;
  const ::google::cloud::dataproc::v1beta2::SparkSqlJob* spark_sql_job_;
} _OrderedJob_default_instance_;
class WorkflowMetadata_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowMetadata_ParametersEntry_DoNotUse>
      _instance;
} _WorkflowMetadata_ParametersEntry_DoNotUse_default_instance_;
class WorkflowMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowMetadata>
      _instance;
} _WorkflowMetadata_default_instance_;
class ClusterOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterOperation>
      _instance;
} _ClusterOperation_default_instance_;
class WorkflowGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowGraph>
      _instance;
} _WorkflowGraph_default_instance_;
class WorkflowNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowNode>
      _instance;
} _WorkflowNode_default_instance_;
class CreateWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWorkflowTemplateRequest>
      _instance;
} _CreateWorkflowTemplateRequest_default_instance_;
class GetWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWorkflowTemplateRequest>
      _instance;
} _GetWorkflowTemplateRequest_default_instance_;
class InstantiateWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstantiateWorkflowTemplateRequest>
      _instance;
} _InstantiateWorkflowTemplateRequest_default_instance_;
class InstantiateInlineWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstantiateInlineWorkflowTemplateRequest>
      _instance;
} _InstantiateInlineWorkflowTemplateRequest_default_instance_;
class UpdateWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateWorkflowTemplateRequest>
      _instance;
} _UpdateWorkflowTemplateRequest_default_instance_;
class ListWorkflowTemplatesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWorkflowTemplatesRequest>
      _instance;
} _ListWorkflowTemplatesRequest_default_instance_;
class ListWorkflowTemplatesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWorkflowTemplatesResponse>
      _instance;
} _ListWorkflowTemplatesResponse_default_instance_;
class DeleteWorkflowTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteWorkflowTemplateRequest>
      _instance;
} _DeleteWorkflowTemplateRequest_default_instance_;
}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto {
static void InitDefaultsWorkflowTemplate_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowTemplate_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowTemplate_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkflowTemplate_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsWorkflowTemplate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowTemplate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::WorkflowTemplate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_WorkflowTemplate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsWorkflowTemplate}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate_LabelsEntry_DoNotUse.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplatePlacement.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_OrderedJob.base,}};

static void InitDefaultsWorkflowTemplatePlacement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowTemplatePlacement_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WorkflowTemplatePlacement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWorkflowTemplatePlacement}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ManagedCluster.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterSelector.base,}};

static void InitDefaultsManagedCluster_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ManagedCluster_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManagedCluster_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManagedCluster_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsManagedCluster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ManagedCluster_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ManagedCluster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ManagedCluster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ManagedCluster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsManagedCluster}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::scc_info_ClusterConfig.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ManagedCluster_LabelsEntry_DoNotUse.base,}};

static void InitDefaultsClusterSelector_ClusterLabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterSelector_ClusterLabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterSelector_ClusterLabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterSelector_ClusterLabelsEntry_DoNotUse}, {}};

static void InitDefaultsClusterSelector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterSelector_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterSelector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ClusterSelector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterSelector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterSelector}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterSelector_ClusterLabelsEntry_DoNotUse.base,}};

static void InitDefaultsOrderedJob_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_OrderedJob_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderedJob_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderedJob_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsOrderedJob() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::OrderedJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::OrderedJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_OrderedJob =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsOrderedJob}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_HadoopJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_SparkJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_PySparkJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_HiveJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_PigJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_SparkSqlJob.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_OrderedJob_LabelsEntry_DoNotUse.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::scc_info_JobScheduling.base,}};

static void InitDefaultsWorkflowMetadata_ParametersEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowMetadata_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse();
  }
  ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowMetadata_ParametersEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkflowMetadata_ParametersEntry_DoNotUse}, {}};

static void InitDefaultsWorkflowMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowMetadata_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::WorkflowMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_WorkflowMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsWorkflowMetadata}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterOperation.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowGraph.base,
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowMetadata_ParametersEntry_DoNotUse.base,}};

static void InitDefaultsClusterOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ClusterOperation_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ClusterOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ClusterOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterOperation}, {}};

static void InitDefaultsWorkflowGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowGraph_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::WorkflowGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WorkflowGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWorkflowGraph}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowNode.base,}};

static void InitDefaultsWorkflowNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_WorkflowNode_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::WorkflowNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::WorkflowNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkflowNode}, {}};

static void InitDefaultsCreateWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_CreateWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateWorkflowTemplateRequest}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base,}};

static void InitDefaultsGetWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_GetWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetWorkflowTemplateRequest}, {}};

static void InitDefaultsInstantiateWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_InstantiateWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstantiateWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstantiateWorkflowTemplateRequest}, {}};

static void InitDefaultsInstantiateInlineWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_InstantiateInlineWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InstantiateInlineWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInstantiateInlineWorkflowTemplateRequest}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base,}};

static void InitDefaultsUpdateWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_UpdateWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateWorkflowTemplateRequest}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base,}};

static void InitDefaultsListWorkflowTemplatesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ListWorkflowTemplatesRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWorkflowTemplatesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWorkflowTemplatesRequest}, {}};

static void InitDefaultsListWorkflowTemplatesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_ListWorkflowTemplatesResponse_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListWorkflowTemplatesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListWorkflowTemplatesResponse}, {
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base,}};

static void InitDefaultsDeleteWorkflowTemplateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::dataproc::v1beta2::_DeleteWorkflowTemplateRequest_default_instance_;
    new (ptr) ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteWorkflowTemplateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteWorkflowTemplateRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowTemplate_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowTemplate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowTemplatePlacement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagedCluster_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagedCluster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterSelector_ClusterLabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterSelector.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderedJob_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderedJob.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowMetadata_ParametersEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterOperation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkflowNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWorkflowTemplateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetWorkflowTemplateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstantiateWorkflowTemplateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstantiateInlineWorkflowTemplateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateWorkflowTemplateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWorkflowTemplatesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWorkflowTemplatesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteWorkflowTemplateRequest.base);
}

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, placement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplate, jobs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacementDefaultTypeInternal, managed_cluster_),
  offsetof(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacementDefaultTypeInternal, cluster_selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement, placement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ManagedCluster, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterSelector, cluster_labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, step_id_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, hadoop_job_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, spark_job_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, pyspark_job_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, hive_job_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, pig_job_),
  offsetof(::google::cloud::dataproc::v1beta2::OrderedJobDefaultTypeInternal, spark_sql_job_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, scheduling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, prerequisite_step_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::OrderedJob, job_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, template__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, create_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, delete_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, cluster_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowMetadata, parameters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterOperation, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterOperation, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ClusterOperation, done_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowGraph, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, step_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, prerequisite_step_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::WorkflowNode, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest, template__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, instance_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, template__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, instance_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest, template__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse, templates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::cloud::dataproc::v1beta2::WorkflowTemplate)},
  { 22, -1, sizeof(::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement)},
  { 30, 37, sizeof(::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse)},
  { 39, -1, sizeof(::google::cloud::dataproc::v1beta2::ManagedCluster)},
  { 47, 54, sizeof(::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse)},
  { 56, -1, sizeof(::google::cloud::dataproc::v1beta2::ClusterSelector)},
  { 63, 70, sizeof(::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse)},
  { 72, -1, sizeof(::google::cloud::dataproc::v1beta2::OrderedJob)},
  { 88, 95, sizeof(::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse)},
  { 97, -1, sizeof(::google::cloud::dataproc::v1beta2::WorkflowMetadata)},
  { 110, -1, sizeof(::google::cloud::dataproc::v1beta2::ClusterOperation)},
  { 118, -1, sizeof(::google::cloud::dataproc::v1beta2::WorkflowGraph)},
  { 124, -1, sizeof(::google::cloud::dataproc::v1beta2::WorkflowNode)},
  { 134, -1, sizeof(::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest)},
  { 141, -1, sizeof(::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest)},
  { 148, -1, sizeof(::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest)},
  { 156, -1, sizeof(::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest)},
  { 164, -1, sizeof(::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest)},
  { 170, -1, sizeof(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest)},
  { 178, -1, sizeof(::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse)},
  { 185, -1, sizeof(::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowTemplate_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowTemplatePlacement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ManagedCluster_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ManagedCluster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterSelector_ClusterLabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterSelector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_OrderedJob_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowMetadata_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ClusterOperation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_WorkflowNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_CreateWorkflowTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_GetWorkflowTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_InstantiateWorkflowTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_InstantiateInlineWorkflowTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_UpdateWorkflowTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ListWorkflowTemplatesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_ListWorkflowTemplatesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::dataproc::v1beta2::_DeleteWorkflowTemplateRequest_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/dataproc/v1beta2/workflow_templates.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n6google/cloud/dataproc/v1beta2/workflow"
      "_templates.proto\022\035google.cloud.dataproc."
      "v1beta2\032\034google/api/annotations.proto\032,g"
      "oogle/cloud/dataproc/v1beta2/clusters.pr"
      "oto\032(google/cloud/dataproc/v1beta2/jobs."
      "proto\032#google/longrunning/operations.pro"
      "to\032\033google/protobuf/empty.proto\032\037google/"
      "protobuf/timestamp.proto\"\241\003\n\020WorkflowTem"
      "plate\022\n\n\002id\030\002 \001(\t\022\014\n\004name\030\001 \001(\t\022\017\n\007versi"
      "on\030\003 \001(\005\022/\n\013create_time\030\004 \001(\0132\032.google.p"
      "rotobuf.Timestamp\022/\n\013update_time\030\005 \001(\0132\032"
      ".google.protobuf.Timestamp\022K\n\006labels\030\006 \003"
      "(\0132;.google.cloud.dataproc.v1beta2.Workf"
      "lowTemplate.LabelsEntry\022K\n\tplacement\030\007 \001"
      "(\01328.google.cloud.dataproc.v1beta2.Workf"
      "lowTemplatePlacement\0227\n\004jobs\030\010 \003(\0132).goo"
      "gle.cloud.dataproc.v1beta2.OrderedJob\032-\n"
      "\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\"\276\001\n\031WorkflowTemplatePlacement\022H\n\017ma"
      "naged_cluster\030\001 \001(\0132-.google.cloud.datap"
      "roc.v1beta2.ManagedClusterH\000\022J\n\020cluster_"
      "selector\030\002 \001(\0132..google.cloud.dataproc.v"
      "1beta2.ClusterSelectorH\000B\013\n\tplacement\"\336\001"
      "\n\016ManagedCluster\022\024\n\014cluster_name\030\002 \001(\t\022<"
      "\n\006config\030\003 \001(\0132,.google.cloud.dataproc.v"
      "1beta2.ClusterConfig\022I\n\006labels\030\004 \003(\01329.g"
      "oogle.cloud.dataproc.v1beta2.ManagedClus"
      "ter.LabelsEntry\032-\n\013LabelsEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\260\001\n\017ClusterSelect"
      "or\022\014\n\004zone\030\001 \001(\t\022Y\n\016cluster_labels\030\002 \003(\013"
      "2A.google.cloud.dataproc.v1beta2.Cluster"
      "Selector.ClusterLabelsEntry\0324\n\022ClusterLa"
      "belsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\"\373\004\n\nOrderedJob\022\017\n\007step_id\030\001 \001(\t\022>\n\nhad"
      "oop_job\030\002 \001(\0132(.google.cloud.dataproc.v1"
      "beta2.HadoopJobH\000\022<\n\tspark_job\030\003 \001(\0132\'.g"
      "oogle.cloud.dataproc.v1beta2.SparkJobH\000\022"
      "@\n\013pyspark_job\030\004 \001(\0132).google.cloud.data"
      "proc.v1beta2.PySparkJobH\000\022:\n\010hive_job\030\005 "
      "\001(\0132&.google.cloud.dataproc.v1beta2.Hive"
      "JobH\000\0228\n\007pig_job\030\006 \001(\0132%.google.cloud.da"
      "taproc.v1beta2.PigJobH\000\022C\n\rspark_sql_job"
      "\030\007 \001(\0132*.google.cloud.dataproc.v1beta2.S"
      "parkSqlJobH\000\022E\n\006labels\030\010 \003(\01325.google.cl"
      "oud.dataproc.v1beta2.OrderedJob.LabelsEn"
      "try\022@\n\nscheduling\030\t \001(\0132,.google.cloud.d"
      "ataproc.v1beta2.JobScheduling\022\035\n\025prerequ"
      "isite_step_ids\030\n \003(\t\032-\n\013LabelsEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\n\n\010job_type\""
      "\242\004\n\020WorkflowMetadata\022\020\n\010template\030\001 \001(\t\022\017"
      "\n\007version\030\002 \001(\005\022G\n\016create_cluster\030\003 \001(\0132"
      "/.google.cloud.dataproc.v1beta2.ClusterO"
      "peration\022;\n\005graph\030\004 \001(\0132,.google.cloud.d"
      "ataproc.v1beta2.WorkflowGraph\022G\n\016delete_"
      "cluster\030\005 \001(\0132/.google.cloud.dataproc.v1"
      "beta2.ClusterOperation\022D\n\005state\030\006 \001(\01625."
      "google.cloud.dataproc.v1beta2.WorkflowMe"
      "tadata.State\022\024\n\014cluster_name\030\007 \001(\t\022S\n\npa"
      "rameters\030\010 \003(\0132\?.google.cloud.dataproc.v"
      "1beta2.WorkflowMetadata.ParametersEntry\032"
      "1\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"8\n\005State\022\013\n\007UNKNOWN\020\000\022\013\n\007PEND"
      "ING\020\001\022\013\n\007RUNNING\020\002\022\010\n\004DONE\020\003\"E\n\020ClusterO"
      "peration\022\024\n\014operation_id\030\001 \001(\t\022\r\n\005error\030"
      "\002 \001(\t\022\014\n\004done\030\003 \001(\010\"K\n\rWorkflowGraph\022:\n\005"
      "nodes\030\001 \003(\0132+.google.cloud.dataproc.v1be"
      "ta2.WorkflowNode\"\220\002\n\014WorkflowNode\022\017\n\007ste"
      "p_id\030\001 \001(\t\022\035\n\025prerequisite_step_ids\030\002 \003("
      "\t\022\016\n\006job_id\030\003 \001(\t\022D\n\005state\030\005 \001(\01625.googl"
      "e.cloud.dataproc.v1beta2.WorkflowNode.No"
      "deState\022\r\n\005error\030\006 \001(\t\"k\n\tNodeState\022\033\n\027N"
      "ODE_STATUS_UNSPECIFIED\020\000\022\013\n\007BLOCKED\020\001\022\014\n"
      "\010RUNNABLE\020\002\022\013\n\007RUNNING\020\003\022\r\n\tCOMPLETED\020\004\022"
      "\n\n\006FAILED\020\005\"r\n\035CreateWorkflowTemplateReq"
      "uest\022\016\n\006parent\030\001 \001(\t\022A\n\010template\030\002 \001(\0132/"
      ".google.cloud.dataproc.v1beta2.WorkflowT"
      "emplate\";\n\032GetWorkflowTemplateRequest\022\014\n"
      "\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\005\"X\n\"Instanti"
      "ateWorkflowTemplateRequest\022\014\n\004name\030\001 \001(\t"
      "\022\017\n\007version\030\002 \001(\005\022\023\n\013instance_id\030\003 \001(\t\"\222"
      "\001\n(InstantiateInlineWorkflowTemplateRequ"
      "est\022\016\n\006parent\030\001 \001(\t\022A\n\010template\030\002 \001(\0132/."
      "google.cloud.dataproc.v1beta2.WorkflowTe"
      "mplate\022\023\n\013instance_id\030\003 \001(\t\"b\n\035UpdateWor"
      "kflowTemplateRequest\022A\n\010template\030\001 \001(\0132/"
      ".google.cloud.dataproc.v1beta2.WorkflowT"
      "emplate\"U\n\034ListWorkflowTemplatesRequest\022"
      "\016\n\006parent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npa"
      "ge_token\030\003 \001(\t\"|\n\035ListWorkflowTemplatesR"
      "esponse\022B\n\ttemplates\030\001 \003(\0132/.google.clou"
      "d.dataproc.v1beta2.WorkflowTemplate\022\027\n\017n"
      "ext_page_token\030\002 \001(\t\">\n\035DeleteWorkflowTe"
      "mplateRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002"
      " \001(\0052\337\017\n\027WorkflowTemplateService\022\235\002\n\026Cre"
      "ateWorkflowTemplate\022<.google.cloud.datap"
      "roc.v1beta2.CreateWorkflowTemplateReques"
      "t\032/.google.cloud.dataproc.v1beta2.Workfl"
      "owTemplate\"\223\001\202\323\344\223\002\214\001\"8/v1beta2/{parent=p"
      "rojects/*/regions/*}/workflowTemplates:\010"
      "templateZF\":/v1beta2/{parent=projects/*/"
      "locations/*}/workflowTemplates:\010template"
      "\022\201\002\n\023GetWorkflowTemplate\0229.google.cloud."
      "dataproc.v1beta2.GetWorkflowTemplateRequ"
      "est\032/.google.cloud.dataproc.v1beta2.Work"
      "flowTemplate\"~\202\323\344\223\002x\0228/v1beta2/{name=pro"
      "jects/*/regions/*/workflowTemplates/*}Z<"
      "\022:/v1beta2/{name=projects/*/locations/*/"
      "workflowTemplates/*}\022\237\002\n\033InstantiateWork"
      "flowTemplate\022A.google.cloud.dataproc.v1b"
      "eta2.InstantiateWorkflowTemplateRequest\032"
      "\035.google.longrunning.Operation\"\235\001\202\323\344\223\002\226\001"
      "\"D/v1beta2/{name=projects/*/regions/*/wo"
      "rkflowTemplates/*}:instantiate:\001*ZK\"F/v1"
      "beta2/{name=projects/*/locations/*/workf"
      "lowTemplates/*}:instantiate:\001*\022\305\002\n!Insta"
      "ntiateInlineWorkflowTemplate\022G.google.cl"
      "oud.dataproc.v1beta2.InstantiateInlineWo"
      "rkflowTemplateRequest\032\035.google.longrunni"
      "ng.Operation\"\267\001\202\323\344\223\002\260\001\"J/v1beta2/{parent"
      "=projects/*/regions/*}/workflowTemplates"
      ":instantiateInline:\010templateZX\"L/v1beta2"
      "/{parent=projects/*/locations/*}/workflo"
      "wTemplates:instantiateInline:\010template\022\257"
      "\002\n\026UpdateWorkflowTemplate\022<.google.cloud"
      ".dataproc.v1beta2.UpdateWorkflowTemplate"
      "Request\032/.google.cloud.dataproc.v1beta2."
      "WorkflowTemplate\"\245\001\202\323\344\223\002\236\001\032A/v1beta2/{te"
      "mplate.name=projects/*/regions/*/workflo"
      "wTemplates/*}:\010templateZO\032C/v1beta2/{tem"
      "plate.name=projects/*/locations/*/workfl"
      "owTemplates/*}:\010template\022\222\002\n\025ListWorkflo"
      "wTemplates\022;.google.cloud.dataproc.v1bet"
      "a2.ListWorkflowTemplatesRequest\032<.google"
      ".cloud.dataproc.v1beta2.ListWorkflowTemp"
      "latesResponse\"~\202\323\344\223\002x\0228/v1beta2/{parent="
      "projects/*/regions/*}/workflowTemplatesZ"
      "<\022:/v1beta2/{parent=projects/*/locations"
      "/*}/workflowTemplates\022\356\001\n\026DeleteWorkflow"
      "Template\022<.google.cloud.dataproc.v1beta2"
      ".DeleteWorkflowTemplateRequest\032\026.google."
      "protobuf.Empty\"~\202\323\344\223\002x*8/v1beta2/{name=p"
      "rojects/*/regions/*/workflowTemplates/*}"
      "Z<*:/v1beta2/{name=projects/*/locations/"
      "*/workflowTemplates/*}B\204\001\n!com.google.cl"
      "oud.dataproc.v1beta2B\026WorkflowTemplatesP"
      "rotoP\001ZEgoogle.golang.org/genproto/googl"
      "eapis/cloud/dataproc/v1beta2;dataprocb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5885);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/dataproc/v1beta2/workflow_templates.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fclusters_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fjobs_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {
const ::google::protobuf::EnumDescriptor* WorkflowMetadata_State_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_enum_descriptors[0];
}
bool WorkflowMetadata_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorkflowMetadata_State WorkflowMetadata::UNKNOWN;
const WorkflowMetadata_State WorkflowMetadata::PENDING;
const WorkflowMetadata_State WorkflowMetadata::RUNNING;
const WorkflowMetadata_State WorkflowMetadata::DONE;
const WorkflowMetadata_State WorkflowMetadata::State_MIN;
const WorkflowMetadata_State WorkflowMetadata::State_MAX;
const int WorkflowMetadata::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorkflowNode_NodeState_descriptor() {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_enum_descriptors[1];
}
bool WorkflowNode_NodeState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorkflowNode_NodeState WorkflowNode::NODE_STATUS_UNSPECIFIED;
const WorkflowNode_NodeState WorkflowNode::BLOCKED;
const WorkflowNode_NodeState WorkflowNode::RUNNABLE;
const WorkflowNode_NodeState WorkflowNode::RUNNING;
const WorkflowNode_NodeState WorkflowNode::COMPLETED;
const WorkflowNode_NodeState WorkflowNode::FAILED;
const WorkflowNode_NodeState WorkflowNode::NodeState_MIN;
const WorkflowNode_NodeState WorkflowNode::NodeState_MAX;
const int WorkflowNode::NodeState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

WorkflowTemplate_LabelsEntry_DoNotUse::WorkflowTemplate_LabelsEntry_DoNotUse() {}
WorkflowTemplate_LabelsEntry_DoNotUse::WorkflowTemplate_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void WorkflowTemplate_LabelsEntry_DoNotUse::MergeFrom(const WorkflowTemplate_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WorkflowTemplate_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[0];
}
void WorkflowTemplate_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void WorkflowTemplate::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_WorkflowTemplate_default_instance_._instance.get_mutable()->placement_ = const_cast< ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement*>(
      ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement::internal_default_instance());
}
void WorkflowTemplate::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
void WorkflowTemplate::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowTemplate::kIdFieldNumber;
const int WorkflowTemplate::kNameFieldNumber;
const int WorkflowTemplate::kVersionFieldNumber;
const int WorkflowTemplate::kCreateTimeFieldNumber;
const int WorkflowTemplate::kUpdateTimeFieldNumber;
const int WorkflowTemplate::kLabelsFieldNumber;
const int WorkflowTemplate::kPlacementFieldNumber;
const int WorkflowTemplate::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowTemplate::WorkflowTemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.WorkflowTemplate)
}
WorkflowTemplate::WorkflowTemplate(const WorkflowTemplate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jobs_(from.jobs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  if (from.has_placement()) {
    placement_ = new ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement(*from.placement_);
  } else {
    placement_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.WorkflowTemplate)
}

void WorkflowTemplate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(version_));
}

WorkflowTemplate::~WorkflowTemplate() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  SharedDtor();
}

void WorkflowTemplate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
  if (this != internal_default_instance()) delete placement_;
}

void WorkflowTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkflowTemplate::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowTemplate& WorkflowTemplate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplate.base);
  return *internal_default_instance();
}


void WorkflowTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  jobs_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && placement_ != NULL) {
    delete placement_;
  }
  placement_ = NULL;
  version_ = 0;
  _internal_metadata_.Clear();
}

bool WorkflowTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowTemplate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowTemplate.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          WorkflowTemplate_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WorkflowTemplate_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_placement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  return false;
#undef DO_
}

void WorkflowTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowTemplate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowTemplate.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_create_time(), output);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_update_time(), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WorkflowTemplate_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<WorkflowTemplate_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
  if (this->has_placement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_placement(), output);
  }

  // repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->jobs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.WorkflowTemplate)
}

::google::protobuf::uint8* WorkflowTemplate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowTemplate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowTemplate.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_create_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_update_time(), deterministic, target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WorkflowTemplate_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<WorkflowTemplate_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
  if (this->has_placement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_placement(), deterministic, target);
  }

  // repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  return target;
}

size_t WorkflowTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<WorkflowTemplate_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .google.cloud.dataproc.v1beta2.OrderedJob jobs = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.protobuf.Timestamp create_time = 4;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 5;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement placement = 7;
  if (this->has_placement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *placement_);
  }

  // int32 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowTemplate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowTemplate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowTemplate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.WorkflowTemplate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.WorkflowTemplate)
    MergeFrom(*source);
  }
}

void WorkflowTemplate::MergeFrom(const WorkflowTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  jobs_.MergeFrom(from.jobs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
  if (from.has_placement()) {
    mutable_placement()->::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement::MergeFrom(from.placement());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void WorkflowTemplate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowTemplate::CopyFrom(const WorkflowTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowTemplate::IsInitialized() const {
  return true;
}

void WorkflowTemplate::Swap(WorkflowTemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowTemplate::InternalSwap(WorkflowTemplate* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  CastToBase(&jobs_)->InternalSwap(CastToBase(&other->jobs_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(placement_, other->placement_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkflowTemplate::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowTemplatePlacement::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_WorkflowTemplatePlacement_default_instance_.managed_cluster_ = const_cast< ::google::cloud::dataproc::v1beta2::ManagedCluster*>(
      ::google::cloud::dataproc::v1beta2::ManagedCluster::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_WorkflowTemplatePlacement_default_instance_.cluster_selector_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterSelector*>(
      ::google::cloud::dataproc::v1beta2::ClusterSelector::internal_default_instance());
}
void WorkflowTemplatePlacement::set_allocated_managed_cluster(::google::cloud::dataproc::v1beta2::ManagedCluster* managed_cluster) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_placement();
  if (managed_cluster) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      managed_cluster = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, managed_cluster, submessage_arena);
    }
    set_has_managed_cluster();
    placement_.managed_cluster_ = managed_cluster;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.managed_cluster)
}
void WorkflowTemplatePlacement::set_allocated_cluster_selector(::google::cloud::dataproc::v1beta2::ClusterSelector* cluster_selector) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_placement();
  if (cluster_selector) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cluster_selector = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cluster_selector, submessage_arena);
    }
    set_has_cluster_selector();
    placement_.cluster_selector_ = cluster_selector;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement.cluster_selector)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowTemplatePlacement::kManagedClusterFieldNumber;
const int WorkflowTemplatePlacement::kClusterSelectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowTemplatePlacement::WorkflowTemplatePlacement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplatePlacement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
}
WorkflowTemplatePlacement::WorkflowTemplatePlacement(const WorkflowTemplatePlacement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_placement();
  switch (from.placement_case()) {
    case kManagedCluster: {
      mutable_managed_cluster()->::google::cloud::dataproc::v1beta2::ManagedCluster::MergeFrom(from.managed_cluster());
      break;
    }
    case kClusterSelector: {
      mutable_cluster_selector()->::google::cloud::dataproc::v1beta2::ClusterSelector::MergeFrom(from.cluster_selector());
      break;
    }
    case PLACEMENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
}

void WorkflowTemplatePlacement::SharedCtor() {
  clear_has_placement();
}

WorkflowTemplatePlacement::~WorkflowTemplatePlacement() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  SharedDtor();
}

void WorkflowTemplatePlacement::SharedDtor() {
  if (has_placement()) {
    clear_placement();
  }
}

void WorkflowTemplatePlacement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkflowTemplatePlacement::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowTemplatePlacement& WorkflowTemplatePlacement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowTemplatePlacement.base);
  return *internal_default_instance();
}


void WorkflowTemplatePlacement::clear_placement() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  switch (placement_case()) {
    case kManagedCluster: {
      delete placement_.managed_cluster_;
      break;
    }
    case kClusterSelector: {
      delete placement_.cluster_selector_;
      break;
    }
    case PLACEMENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PLACEMENT_NOT_SET;
}


void WorkflowTemplatePlacement::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_placement();
  _internal_metadata_.Clear();
}

bool WorkflowTemplatePlacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_managed_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_selector()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  return false;
#undef DO_
}

void WorkflowTemplatePlacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
  if (has_managed_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_managed_cluster(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
  if (has_cluster_selector()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cluster_selector(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
}

::google::protobuf::uint8* WorkflowTemplatePlacement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
  if (has_managed_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_managed_cluster(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
  if (has_cluster_selector()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cluster_selector(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  return target;
}

size_t WorkflowTemplatePlacement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (placement_case()) {
    // .google.cloud.dataproc.v1beta2.ManagedCluster managed_cluster = 1;
    case kManagedCluster: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *placement_.managed_cluster_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.ClusterSelector cluster_selector = 2;
    case kClusterSelector: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *placement_.cluster_selector_);
      break;
    }
    case PLACEMENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowTemplatePlacement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowTemplatePlacement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowTemplatePlacement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
    MergeFrom(*source);
  }
}

void WorkflowTemplatePlacement::MergeFrom(const WorkflowTemplatePlacement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.placement_case()) {
    case kManagedCluster: {
      mutable_managed_cluster()->::google::cloud::dataproc::v1beta2::ManagedCluster::MergeFrom(from.managed_cluster());
      break;
    }
    case kClusterSelector: {
      mutable_cluster_selector()->::google::cloud::dataproc::v1beta2::ClusterSelector::MergeFrom(from.cluster_selector());
      break;
    }
    case PLACEMENT_NOT_SET: {
      break;
    }
  }
}

void WorkflowTemplatePlacement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowTemplatePlacement::CopyFrom(const WorkflowTemplatePlacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowTemplatePlacement::IsInitialized() const {
  return true;
}

void WorkflowTemplatePlacement::Swap(WorkflowTemplatePlacement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowTemplatePlacement::InternalSwap(WorkflowTemplatePlacement* other) {
  using std::swap;
  swap(placement_, other->placement_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkflowTemplatePlacement::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ManagedCluster_LabelsEntry_DoNotUse::ManagedCluster_LabelsEntry_DoNotUse() {}
ManagedCluster_LabelsEntry_DoNotUse::ManagedCluster_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ManagedCluster_LabelsEntry_DoNotUse::MergeFrom(const ManagedCluster_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ManagedCluster_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[3];
}
void ManagedCluster_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ManagedCluster::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_ManagedCluster_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterConfig*>(
      ::google::cloud::dataproc::v1beta2::ClusterConfig::internal_default_instance());
}
void ManagedCluster::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagedCluster::kClusterNameFieldNumber;
const int ManagedCluster::kConfigFieldNumber;
const int ManagedCluster::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagedCluster::ManagedCluster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ManagedCluster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ManagedCluster)
}
ManagedCluster::ManagedCluster(const ManagedCluster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_config()) {
    config_ = new ::google::cloud::dataproc::v1beta2::ClusterConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ManagedCluster)
}

void ManagedCluster::SharedCtor() {
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
}

ManagedCluster::~ManagedCluster() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ManagedCluster)
  SharedDtor();
}

void ManagedCluster::SharedDtor() {
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void ManagedCluster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManagedCluster::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManagedCluster& ManagedCluster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ManagedCluster.base);
  return *internal_default_instance();
}


void ManagedCluster::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool ManagedCluster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cluster_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ManagedCluster_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ManagedCluster_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ManagedCluster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ManagedCluster)
  return false;
#undef DO_
}

void ManagedCluster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster_name(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config(), output);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ManagedCluster_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ManagedCluster_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ManagedCluster)
}

::google::protobuf::uint8* ManagedCluster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ManagedCluster.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster_name(), target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config(), deterministic, target);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ManagedCluster_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ManagedCluster_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ManagedCluster)
  return target;
}

size_t ManagedCluster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<ManagedCluster_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cluster_name = 2;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // .google.cloud.dataproc.v1beta2.ClusterConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedCluster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedCluster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagedCluster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ManagedCluster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ManagedCluster)
    MergeFrom(*source);
  }
}

void ManagedCluster::MergeFrom(const ManagedCluster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_config()) {
    mutable_config()->::google::cloud::dataproc::v1beta2::ClusterConfig::MergeFrom(from.config());
  }
}

void ManagedCluster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedCluster::CopyFrom(const ManagedCluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ManagedCluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedCluster::IsInitialized() const {
  return true;
}

void ManagedCluster::Swap(ManagedCluster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagedCluster::InternalSwap(ManagedCluster* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManagedCluster::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ClusterSelector_ClusterLabelsEntry_DoNotUse::ClusterSelector_ClusterLabelsEntry_DoNotUse() {}
ClusterSelector_ClusterLabelsEntry_DoNotUse::ClusterSelector_ClusterLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClusterSelector_ClusterLabelsEntry_DoNotUse::MergeFrom(const ClusterSelector_ClusterLabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClusterSelector_ClusterLabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[5];
}
void ClusterSelector_ClusterLabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ClusterSelector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterSelector::kZoneFieldNumber;
const int ClusterSelector::kClusterLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterSelector::ClusterSelector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterSelector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ClusterSelector)
}
ClusterSelector::ClusterSelector(const ClusterSelector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cluster_labels_.MergeFrom(from.cluster_labels_);
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zone().size() > 0) {
    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ClusterSelector)
}

void ClusterSelector::SharedCtor() {
  zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClusterSelector::~ClusterSelector() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ClusterSelector)
  SharedDtor();
}

void ClusterSelector::SharedDtor() {
  zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterSelector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterSelector::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterSelector& ClusterSelector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterSelector.base);
  return *internal_default_instance();
}


void ClusterSelector::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_labels_.Clear();
  zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClusterSelector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string zone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterSelector.zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> cluster_labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ClusterSelector_ClusterLabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClusterSelector_ClusterLabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&cluster_labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ClusterSelector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ClusterSelector)
  return false;
#undef DO_
}

void ClusterSelector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string zone = 1;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterSelector.zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->zone(), output);
  }

  // map<string, string> cluster_labels = 2;
  if (!this->cluster_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->cluster_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cluster_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cluster_labels().begin();
          it != this->cluster_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterSelector_ClusterLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cluster_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterSelector_ClusterLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cluster_labels().begin();
          it != this->cluster_labels().end(); ++it) {
        entry.reset(cluster_labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ClusterSelector)
}

::google::protobuf::uint8* ClusterSelector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string zone = 1;
  if (this->zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterSelector.zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->zone(), target);
  }

  // map<string, string> cluster_labels = 2;
  if (!this->cluster_labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry.value");
      }
    };

    if (deterministic &&
        this->cluster_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cluster_labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cluster_labels().begin();
          it != this->cluster_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterSelector_ClusterLabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cluster_labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClusterSelector_ClusterLabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cluster_labels().begin();
          it != this->cluster_labels().end(); ++it) {
        entry.reset(cluster_labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ClusterSelector)
  return target;
}

size_t ClusterSelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> cluster_labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cluster_labels_size());
  {
    ::std::unique_ptr<ClusterSelector_ClusterLabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->cluster_labels().begin();
        it != this->cluster_labels().end(); ++it) {
      entry.reset(cluster_labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string zone = 1;
  if (this->zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterSelector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterSelector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterSelector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ClusterSelector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ClusterSelector)
    MergeFrom(*source);
  }
}

void ClusterSelector::MergeFrom(const ClusterSelector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cluster_labels_.MergeFrom(from.cluster_labels_);
  if (from.zone().size() > 0) {

    zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
}

void ClusterSelector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterSelector::CopyFrom(const ClusterSelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ClusterSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterSelector::IsInitialized() const {
  return true;
}

void ClusterSelector::Swap(ClusterSelector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterSelector::InternalSwap(ClusterSelector* other) {
  using std::swap;
  cluster_labels_.Swap(&other->cluster_labels_);
  zone_.Swap(&other->zone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterSelector::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OrderedJob_LabelsEntry_DoNotUse::OrderedJob_LabelsEntry_DoNotUse() {}
OrderedJob_LabelsEntry_DoNotUse::OrderedJob_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OrderedJob_LabelsEntry_DoNotUse::MergeFrom(const OrderedJob_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OrderedJob_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[7];
}
void OrderedJob_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void OrderedJob::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.hadoop_job_ = const_cast< ::google::cloud::dataproc::v1beta2::HadoopJob*>(
      ::google::cloud::dataproc::v1beta2::HadoopJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.spark_job_ = const_cast< ::google::cloud::dataproc::v1beta2::SparkJob*>(
      ::google::cloud::dataproc::v1beta2::SparkJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.pyspark_job_ = const_cast< ::google::cloud::dataproc::v1beta2::PySparkJob*>(
      ::google::cloud::dataproc::v1beta2::PySparkJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.hive_job_ = const_cast< ::google::cloud::dataproc::v1beta2::HiveJob*>(
      ::google::cloud::dataproc::v1beta2::HiveJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.pig_job_ = const_cast< ::google::cloud::dataproc::v1beta2::PigJob*>(
      ::google::cloud::dataproc::v1beta2::PigJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_.spark_sql_job_ = const_cast< ::google::cloud::dataproc::v1beta2::SparkSqlJob*>(
      ::google::cloud::dataproc::v1beta2::SparkSqlJob::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_OrderedJob_default_instance_._instance.get_mutable()->scheduling_ = const_cast< ::google::cloud::dataproc::v1beta2::JobScheduling*>(
      ::google::cloud::dataproc::v1beta2::JobScheduling::internal_default_instance());
}
void OrderedJob::set_allocated_hadoop_job(::google::cloud::dataproc::v1beta2::HadoopJob* hadoop_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (hadoop_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hadoop_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hadoop_job, submessage_arena);
    }
    set_has_hadoop_job();
    job_type_.hadoop_job_ = hadoop_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.hadoop_job)
}
void OrderedJob::clear_hadoop_job() {
  if (has_hadoop_job()) {
    delete job_type_.hadoop_job_;
    clear_has_job_type();
  }
}
void OrderedJob::set_allocated_spark_job(::google::cloud::dataproc::v1beta2::SparkJob* spark_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (spark_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spark_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spark_job, submessage_arena);
    }
    set_has_spark_job();
    job_type_.spark_job_ = spark_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.spark_job)
}
void OrderedJob::clear_spark_job() {
  if (has_spark_job()) {
    delete job_type_.spark_job_;
    clear_has_job_type();
  }
}
void OrderedJob::set_allocated_pyspark_job(::google::cloud::dataproc::v1beta2::PySparkJob* pyspark_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (pyspark_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pyspark_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pyspark_job, submessage_arena);
    }
    set_has_pyspark_job();
    job_type_.pyspark_job_ = pyspark_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.pyspark_job)
}
void OrderedJob::clear_pyspark_job() {
  if (has_pyspark_job()) {
    delete job_type_.pyspark_job_;
    clear_has_job_type();
  }
}
void OrderedJob::set_allocated_hive_job(::google::cloud::dataproc::v1beta2::HiveJob* hive_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (hive_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hive_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hive_job, submessage_arena);
    }
    set_has_hive_job();
    job_type_.hive_job_ = hive_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.hive_job)
}
void OrderedJob::clear_hive_job() {
  if (has_hive_job()) {
    delete job_type_.hive_job_;
    clear_has_job_type();
  }
}
void OrderedJob::set_allocated_pig_job(::google::cloud::dataproc::v1beta2::PigJob* pig_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (pig_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pig_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pig_job, submessage_arena);
    }
    set_has_pig_job();
    job_type_.pig_job_ = pig_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.pig_job)
}
void OrderedJob::clear_pig_job() {
  if (has_pig_job()) {
    delete job_type_.pig_job_;
    clear_has_job_type();
  }
}
void OrderedJob::set_allocated_spark_sql_job(::google::cloud::dataproc::v1beta2::SparkSqlJob* spark_sql_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_job_type();
  if (spark_sql_job) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spark_sql_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spark_sql_job, submessage_arena);
    }
    set_has_spark_sql_job();
    job_type_.spark_sql_job_ = spark_sql_job;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.dataproc.v1beta2.OrderedJob.spark_sql_job)
}
void OrderedJob::clear_spark_sql_job() {
  if (has_spark_sql_job()) {
    delete job_type_.spark_sql_job_;
    clear_has_job_type();
  }
}
void OrderedJob::clear_scheduling() {
  if (GetArenaNoVirtual() == NULL && scheduling_ != NULL) {
    delete scheduling_;
  }
  scheduling_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderedJob::kStepIdFieldNumber;
const int OrderedJob::kHadoopJobFieldNumber;
const int OrderedJob::kSparkJobFieldNumber;
const int OrderedJob::kPysparkJobFieldNumber;
const int OrderedJob::kHiveJobFieldNumber;
const int OrderedJob::kPigJobFieldNumber;
const int OrderedJob::kSparkSqlJobFieldNumber;
const int OrderedJob::kLabelsFieldNumber;
const int OrderedJob::kSchedulingFieldNumber;
const int OrderedJob::kPrerequisiteStepIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderedJob::OrderedJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_OrderedJob.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.OrderedJob)
}
OrderedJob::OrderedJob(const OrderedJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prerequisite_step_ids_(from.prerequisite_step_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  step_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.step_id().size() > 0) {
    step_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_id_);
  }
  if (from.has_scheduling()) {
    scheduling_ = new ::google::cloud::dataproc::v1beta2::JobScheduling(*from.scheduling_);
  } else {
    scheduling_ = NULL;
  }
  clear_has_job_type();
  switch (from.job_type_case()) {
    case kHadoopJob: {
      mutable_hadoop_job()->::google::cloud::dataproc::v1beta2::HadoopJob::MergeFrom(from.hadoop_job());
      break;
    }
    case kSparkJob: {
      mutable_spark_job()->::google::cloud::dataproc::v1beta2::SparkJob::MergeFrom(from.spark_job());
      break;
    }
    case kPysparkJob: {
      mutable_pyspark_job()->::google::cloud::dataproc::v1beta2::PySparkJob::MergeFrom(from.pyspark_job());
      break;
    }
    case kHiveJob: {
      mutable_hive_job()->::google::cloud::dataproc::v1beta2::HiveJob::MergeFrom(from.hive_job());
      break;
    }
    case kPigJob: {
      mutable_pig_job()->::google::cloud::dataproc::v1beta2::PigJob::MergeFrom(from.pig_job());
      break;
    }
    case kSparkSqlJob: {
      mutable_spark_sql_job()->::google::cloud::dataproc::v1beta2::SparkSqlJob::MergeFrom(from.spark_sql_job());
      break;
    }
    case JOB_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.OrderedJob)
}

void OrderedJob::SharedCtor() {
  step_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduling_ = NULL;
  clear_has_job_type();
}

OrderedJob::~OrderedJob() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.OrderedJob)
  SharedDtor();
}

void OrderedJob::SharedDtor() {
  step_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scheduling_;
  if (has_job_type()) {
    clear_job_type();
  }
}

void OrderedJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderedJob::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderedJob& OrderedJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_OrderedJob.base);
  return *internal_default_instance();
}


void OrderedJob::clear_job_type() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.dataproc.v1beta2.OrderedJob)
  switch (job_type_case()) {
    case kHadoopJob: {
      delete job_type_.hadoop_job_;
      break;
    }
    case kSparkJob: {
      delete job_type_.spark_job_;
      break;
    }
    case kPysparkJob: {
      delete job_type_.pyspark_job_;
      break;
    }
    case kHiveJob: {
      delete job_type_.hive_job_;
      break;
    }
    case kPigJob: {
      delete job_type_.pig_job_;
      break;
    }
    case kSparkSqlJob: {
      delete job_type_.spark_sql_job_;
      break;
    }
    case JOB_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = JOB_TYPE_NOT_SET;
}


void OrderedJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.OrderedJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  prerequisite_step_ids_.Clear();
  step_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && scheduling_ != NULL) {
    delete scheduling_;
  }
  scheduling_ = NULL;
  clear_job_type();
  _internal_metadata_.Clear();
}

bool OrderedJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.OrderedJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_step_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->step_id().data(), static_cast<int>(this->step_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.OrderedJob.step_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hadoop_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spark_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pyspark_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hive_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pig_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spark_sql_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          OrderedJob_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OrderedJob_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scheduling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prerequisite_step_ids = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prerequisite_step_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prerequisite_step_ids(this->prerequisite_step_ids_size() - 1).data(),
            static_cast<int>(this->prerequisite_step_ids(this->prerequisite_step_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.OrderedJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.OrderedJob)
  return false;
#undef DO_
}

void OrderedJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.OrderedJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_id().data(), static_cast<int>(this->step_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.OrderedJob.step_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->step_id(), output);
  }

  // .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
  if (has_hadoop_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hadoop_job(), output);
  }

  // .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
  if (has_spark_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_spark_job(), output);
  }

  // .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
  if (has_pyspark_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pyspark_job(), output);
  }

  // .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
  if (has_hive_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_hive_job(), output);
  }

  // .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
  if (has_pig_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pig_job(), output);
  }

  // .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
  if (has_spark_sql_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_spark_sql_job(), output);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderedJob_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OrderedJob_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
  if (this->has_scheduling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_scheduling(), output);
  }

  // repeated string prerequisite_step_ids = 10;
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite_step_ids(i).data(), static_cast<int>(this->prerequisite_step_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->prerequisite_step_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.OrderedJob)
}

::google::protobuf::uint8* OrderedJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.OrderedJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_id().data(), static_cast<int>(this->step_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.OrderedJob.step_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->step_id(), target);
  }

  // .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
  if (has_hadoop_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hadoop_job(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
  if (has_spark_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_spark_job(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
  if (has_pyspark_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pyspark_job(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
  if (has_hive_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_hive_job(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
  if (has_pig_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pig_job(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
  if (has_spark_sql_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_spark_sql_job(), deterministic, target);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderedJob_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<OrderedJob_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
  if (this->has_scheduling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_scheduling(), deterministic, target);
  }

  // repeated string prerequisite_step_ids = 10;
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite_step_ids(i).data(), static_cast<int>(this->prerequisite_step_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->prerequisite_step_ids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.OrderedJob)
  return target;
}

size_t OrderedJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.OrderedJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<OrderedJob_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string prerequisite_step_ids = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prerequisite_step_ids_size());
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prerequisite_step_ids(i));
  }

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->step_id());
  }

  // .google.cloud.dataproc.v1beta2.JobScheduling scheduling = 9;
  if (this->has_scheduling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scheduling_);
  }

  switch (job_type_case()) {
    // .google.cloud.dataproc.v1beta2.HadoopJob hadoop_job = 2;
    case kHadoopJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.hadoop_job_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.SparkJob spark_job = 3;
    case kSparkJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.spark_job_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.PySparkJob pyspark_job = 4;
    case kPysparkJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.pyspark_job_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.HiveJob hive_job = 5;
    case kHiveJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.hive_job_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.PigJob pig_job = 6;
    case kPigJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.pig_job_);
      break;
    }
    // .google.cloud.dataproc.v1beta2.SparkSqlJob spark_sql_job = 7;
    case kSparkSqlJob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *job_type_.spark_sql_job_);
      break;
    }
    case JOB_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderedJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.OrderedJob)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderedJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderedJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.OrderedJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.OrderedJob)
    MergeFrom(*source);
  }
}

void OrderedJob::MergeFrom(const OrderedJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.OrderedJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  prerequisite_step_ids_.MergeFrom(from.prerequisite_step_ids_);
  if (from.step_id().size() > 0) {

    step_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_id_);
  }
  if (from.has_scheduling()) {
    mutable_scheduling()->::google::cloud::dataproc::v1beta2::JobScheduling::MergeFrom(from.scheduling());
  }
  switch (from.job_type_case()) {
    case kHadoopJob: {
      mutable_hadoop_job()->::google::cloud::dataproc::v1beta2::HadoopJob::MergeFrom(from.hadoop_job());
      break;
    }
    case kSparkJob: {
      mutable_spark_job()->::google::cloud::dataproc::v1beta2::SparkJob::MergeFrom(from.spark_job());
      break;
    }
    case kPysparkJob: {
      mutable_pyspark_job()->::google::cloud::dataproc::v1beta2::PySparkJob::MergeFrom(from.pyspark_job());
      break;
    }
    case kHiveJob: {
      mutable_hive_job()->::google::cloud::dataproc::v1beta2::HiveJob::MergeFrom(from.hive_job());
      break;
    }
    case kPigJob: {
      mutable_pig_job()->::google::cloud::dataproc::v1beta2::PigJob::MergeFrom(from.pig_job());
      break;
    }
    case kSparkSqlJob: {
      mutable_spark_sql_job()->::google::cloud::dataproc::v1beta2::SparkSqlJob::MergeFrom(from.spark_sql_job());
      break;
    }
    case JOB_TYPE_NOT_SET: {
      break;
    }
  }
}

void OrderedJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.OrderedJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderedJob::CopyFrom(const OrderedJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.OrderedJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderedJob::IsInitialized() const {
  return true;
}

void OrderedJob::Swap(OrderedJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderedJob::InternalSwap(OrderedJob* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  prerequisite_step_ids_.InternalSwap(CastToBase(&other->prerequisite_step_ids_));
  step_id_.Swap(&other->step_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scheduling_, other->scheduling_);
  swap(job_type_, other->job_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderedJob::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

WorkflowMetadata_ParametersEntry_DoNotUse::WorkflowMetadata_ParametersEntry_DoNotUse() {}
WorkflowMetadata_ParametersEntry_DoNotUse::WorkflowMetadata_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void WorkflowMetadata_ParametersEntry_DoNotUse::MergeFrom(const WorkflowMetadata_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata WorkflowMetadata_ParametersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[9];
}
void WorkflowMetadata_ParametersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void WorkflowMetadata::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_WorkflowMetadata_default_instance_._instance.get_mutable()->create_cluster_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterOperation*>(
      ::google::cloud::dataproc::v1beta2::ClusterOperation::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_WorkflowMetadata_default_instance_._instance.get_mutable()->graph_ = const_cast< ::google::cloud::dataproc::v1beta2::WorkflowGraph*>(
      ::google::cloud::dataproc::v1beta2::WorkflowGraph::internal_default_instance());
  ::google::cloud::dataproc::v1beta2::_WorkflowMetadata_default_instance_._instance.get_mutable()->delete_cluster_ = const_cast< ::google::cloud::dataproc::v1beta2::ClusterOperation*>(
      ::google::cloud::dataproc::v1beta2::ClusterOperation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowMetadata::kTemplateFieldNumber;
const int WorkflowMetadata::kVersionFieldNumber;
const int WorkflowMetadata::kCreateClusterFieldNumber;
const int WorkflowMetadata::kGraphFieldNumber;
const int WorkflowMetadata::kDeleteClusterFieldNumber;
const int WorkflowMetadata::kStateFieldNumber;
const int WorkflowMetadata::kClusterNameFieldNumber;
const int WorkflowMetadata::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowMetadata::WorkflowMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.WorkflowMetadata)
}
WorkflowMetadata::WorkflowMetadata(const WorkflowMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  template__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.template_().size() > 0) {
    template__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template__);
  }
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cluster_name().size() > 0) {
    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_create_cluster()) {
    create_cluster_ = new ::google::cloud::dataproc::v1beta2::ClusterOperation(*from.create_cluster_);
  } else {
    create_cluster_ = NULL;
  }
  if (from.has_graph()) {
    graph_ = new ::google::cloud::dataproc::v1beta2::WorkflowGraph(*from.graph_);
  } else {
    graph_ = NULL;
  }
  if (from.has_delete_cluster()) {
    delete_cluster_ = new ::google::cloud::dataproc::v1beta2::ClusterOperation(*from.delete_cluster_);
  } else {
    delete_cluster_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&version_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.WorkflowMetadata)
}

void WorkflowMetadata::SharedCtor() {
  template__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_cluster_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&create_cluster_)) + sizeof(state_));
}

WorkflowMetadata::~WorkflowMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  SharedDtor();
}

void WorkflowMetadata::SharedDtor() {
  template__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_cluster_;
  if (this != internal_default_instance()) delete graph_;
  if (this != internal_default_instance()) delete delete_cluster_;
}

void WorkflowMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkflowMetadata::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowMetadata& WorkflowMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowMetadata.base);
  return *internal_default_instance();
}


void WorkflowMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_cluster_ != NULL) {
    delete create_cluster_;
  }
  create_cluster_ = NULL;
  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
    delete graph_;
  }
  graph_ = NULL;
  if (GetArenaNoVirtual() == NULL && delete_cluster_ != NULL) {
    delete delete_cluster_;
  }
  delete_cluster_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&version_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool WorkflowMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string template = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_template_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->template_().data(), static_cast<int>(this->template_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowMetadata.template"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_cluster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> parameters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          WorkflowMetadata_ParametersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              WorkflowMetadata_ParametersEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  return false;
#undef DO_
}

void WorkflowMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string template = 1;
  if (this->template_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->template_().data(), static_cast<int>(this->template_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowMetadata.template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->template_(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
  if (this->has_create_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_create_cluster(), output);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
  if (this->has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_graph(), output);
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
  if (this->has_delete_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_delete_cluster(), output);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cluster_name(), output);
  }

  // map<string, string> parameters = 8;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WorkflowMetadata_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<WorkflowMetadata_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.WorkflowMetadata)
}

::google::protobuf::uint8* WorkflowMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string template = 1;
  if (this->template_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->template_().data(), static_cast<int>(this->template_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowMetadata.template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->template_(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
  if (this->has_create_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_create_cluster(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
  if (this->has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_graph(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
  if (this->has_delete_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_delete_cluster(), deterministic, target);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster_name().data(), static_cast<int>(this->cluster_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowMetadata.cluster_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cluster_name(), target);
  }

  // map<string, string> parameters = 8;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry.value");
      }
    };

    if (deterministic &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<WorkflowMetadata_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<WorkflowMetadata_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  return target;
}

size_t WorkflowMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> parameters = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  {
    ::std::unique_ptr<WorkflowMetadata_ParametersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string template = 1;
  if (this->template_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->template_());
  }

  // string cluster_name = 7;
  if (this->cluster_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cluster_name());
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation create_cluster = 3;
  if (this->has_create_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_cluster_);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowGraph graph = 4;
  if (this->has_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  // .google.cloud.dataproc.v1beta2.ClusterOperation delete_cluster = 5;
  if (this->has_delete_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *delete_cluster_);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // .google.cloud.dataproc.v1beta2.WorkflowMetadata.State state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.WorkflowMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.WorkflowMetadata)
    MergeFrom(*source);
  }
}

void WorkflowMetadata::MergeFrom(const WorkflowMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.template_().size() > 0) {

    template__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template__);
  }
  if (from.cluster_name().size() > 0) {

    cluster_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cluster_name_);
  }
  if (from.has_create_cluster()) {
    mutable_create_cluster()->::google::cloud::dataproc::v1beta2::ClusterOperation::MergeFrom(from.create_cluster());
  }
  if (from.has_graph()) {
    mutable_graph()->::google::cloud::dataproc::v1beta2::WorkflowGraph::MergeFrom(from.graph());
  }
  if (from.has_delete_cluster()) {
    mutable_delete_cluster()->::google::cloud::dataproc::v1beta2::ClusterOperation::MergeFrom(from.delete_cluster());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void WorkflowMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowMetadata::CopyFrom(const WorkflowMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowMetadata::IsInitialized() const {
  return true;
}

void WorkflowMetadata::Swap(WorkflowMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowMetadata::InternalSwap(WorkflowMetadata* other) {
  using std::swap;
  parameters_.Swap(&other->parameters_);
  template__.Swap(&other->template__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cluster_name_.Swap(&other->cluster_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_cluster_, other->create_cluster_);
  swap(graph_, other->graph_);
  swap(delete_cluster_, other->delete_cluster_);
  swap(version_, other->version_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkflowMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClusterOperation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterOperation::kOperationIdFieldNumber;
const int ClusterOperation::kErrorFieldNumber;
const int ClusterOperation::kDoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterOperation::ClusterOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ClusterOperation)
}
ClusterOperation::ClusterOperation(const ClusterOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  done_ = from.done_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ClusterOperation)
}

void ClusterOperation::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  done_ = false;
}

ClusterOperation::~ClusterOperation() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ClusterOperation)
  SharedDtor();
}

void ClusterOperation::SharedDtor() {
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClusterOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClusterOperation::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClusterOperation& ClusterOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ClusterOperation.base);
  return *internal_default_instance();
}


void ClusterOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  done_ = false;
  _internal_metadata_.Clear();
}

bool ClusterOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterOperation.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ClusterOperation.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool done = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ClusterOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ClusterOperation)
  return false;
#undef DO_
}

void ClusterOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterOperation.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterOperation.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // bool done = 3;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->done(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ClusterOperation)
}

::google::protobuf::uint8* ClusterOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterOperation.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ClusterOperation.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // bool done = 3;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->done(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ClusterOperation)
  return target;
}

size_t ClusterOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // bool done = 3;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ClusterOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ClusterOperation)
    MergeFrom(*source);
  }
}

void ClusterOperation::MergeFrom(const ClusterOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation_id().size() > 0) {

    operation_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.done() != 0) {
    set_done(from.done());
  }
}

void ClusterOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterOperation::CopyFrom(const ClusterOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ClusterOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterOperation::IsInitialized() const {
  return true;
}

void ClusterOperation::Swap(ClusterOperation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterOperation::InternalSwap(ClusterOperation* other) {
  using std::swap;
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(done_, other->done_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClusterOperation::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowGraph::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowGraph::WorkflowGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.WorkflowGraph)
}
WorkflowGraph::WorkflowGraph(const WorkflowGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.WorkflowGraph)
}

void WorkflowGraph::SharedCtor() {
}

WorkflowGraph::~WorkflowGraph() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.WorkflowGraph)
  SharedDtor();
}

void WorkflowGraph::SharedDtor() {
}

void WorkflowGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkflowGraph::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowGraph& WorkflowGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowGraph.base);
  return *internal_default_instance();
}


void WorkflowGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool WorkflowGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.WorkflowGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.WorkflowGraph)
  return false;
#undef DO_
}

void WorkflowGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.WorkflowGraph)
}

::google::protobuf::uint8* WorkflowGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.WorkflowGraph)
  return target;
}

size_t WorkflowGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1beta2.WorkflowNode nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.WorkflowGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.WorkflowGraph)
    MergeFrom(*source);
  }
}

void WorkflowGraph::MergeFrom(const WorkflowGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void WorkflowGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowGraph::CopyFrom(const WorkflowGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowGraph::IsInitialized() const {
  return true;
}

void WorkflowGraph::Swap(WorkflowGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowGraph::InternalSwap(WorkflowGraph* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkflowGraph::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowNode::kStepIdFieldNumber;
const int WorkflowNode::kPrerequisiteStepIdsFieldNumber;
const int WorkflowNode::kJobIdFieldNumber;
const int WorkflowNode::kStateFieldNumber;
const int WorkflowNode::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowNode::WorkflowNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.WorkflowNode)
}
WorkflowNode::WorkflowNode(const WorkflowNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prerequisite_step_ids_(from.prerequisite_step_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  step_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.step_id().size() > 0) {
    step_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_id_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.WorkflowNode)
}

void WorkflowNode::SharedCtor() {
  step_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

WorkflowNode::~WorkflowNode() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.WorkflowNode)
  SharedDtor();
}

void WorkflowNode::SharedDtor() {
  step_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkflowNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkflowNode::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowNode& WorkflowNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_WorkflowNode.base);
  return *internal_default_instance();
}


void WorkflowNode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prerequisite_step_ids_.Clear();
  step_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  _internal_metadata_.Clear();
}

bool WorkflowNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string step_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_step_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->step_id().data(), static_cast<int>(this->step_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowNode.step_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prerequisite_step_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prerequisite_step_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prerequisite_step_ids(this->prerequisite_step_ids_size() - 1).data(),
            static_cast<int>(this->prerequisite_step_ids(this->prerequisite_step_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowNode.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::dataproc::v1beta2::WorkflowNode_NodeState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.WorkflowNode.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.WorkflowNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.WorkflowNode)
  return false;
#undef DO_
}

void WorkflowNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_id().data(), static_cast<int>(this->step_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.step_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->step_id(), output);
  }

  // repeated string prerequisite_step_ids = 2;
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite_step_ids(i).data(), static_cast<int>(this->prerequisite_step_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->prerequisite_step_ids(i), output);
  }

  // string job_id = 3;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->job_id(), output);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->state(), output);
  }

  // string error = 6;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.WorkflowNode)
}

::google::protobuf::uint8* WorkflowNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->step_id().data(), static_cast<int>(this->step_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.step_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->step_id(), target);
  }

  // repeated string prerequisite_step_ids = 2;
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite_step_ids(i).data(), static_cast<int>(this->prerequisite_step_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.prerequisite_step_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->prerequisite_step_ids(i), target);
  }

  // string job_id = 3;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->job_id(), target);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->state(), target);
  }

  // string error = 6;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.WorkflowNode.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.WorkflowNode)
  return target;
}

size_t WorkflowNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string prerequisite_step_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prerequisite_step_ids_size());
  for (int i = 0, n = this->prerequisite_step_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prerequisite_step_ids(i));
  }

  // string step_id = 1;
  if (this->step_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->step_id());
  }

  // string job_id = 3;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string error = 6;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .google.cloud.dataproc.v1beta2.WorkflowNode.NodeState state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkflowNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.WorkflowNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.WorkflowNode)
    MergeFrom(*source);
  }
}

void WorkflowNode::MergeFrom(const WorkflowNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prerequisite_step_ids_.MergeFrom(from.prerequisite_step_ids_);
  if (from.step_id().size() > 0) {

    step_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.step_id_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void WorkflowNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowNode::CopyFrom(const WorkflowNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.WorkflowNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowNode::IsInitialized() const {
  return true;
}

void WorkflowNode::Swap(WorkflowNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowNode::InternalSwap(WorkflowNode* other) {
  using std::swap;
  prerequisite_step_ids_.InternalSwap(CastToBase(&other->prerequisite_step_ids_));
  step_id_.Swap(&other->step_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkflowNode::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWorkflowTemplateRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_CreateWorkflowTemplateRequest_default_instance_._instance.get_mutable()->template__ = const_cast< ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      ::google::cloud::dataproc::v1beta2::WorkflowTemplate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWorkflowTemplateRequest::kParentFieldNumber;
const int CreateWorkflowTemplateRequest::kTemplateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWorkflowTemplateRequest::CreateWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_CreateWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
}
CreateWorkflowTemplateRequest::CreateWorkflowTemplateRequest(const CreateWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_template_()) {
    template__ = new ::google::cloud::dataproc::v1beta2::WorkflowTemplate(*from.template__);
  } else {
    template__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
}

void CreateWorkflowTemplateRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template__ = NULL;
}

CreateWorkflowTemplateRequest::~CreateWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  SharedDtor();
}

void CreateWorkflowTemplateRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete template__;
}

void CreateWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWorkflowTemplateRequest& CreateWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_CreateWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void CreateWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
  _internal_metadata_.Clear();
}

bool CreateWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_template_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  return false;
#undef DO_
}

void CreateWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_template_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
}

::google::protobuf::uint8* CreateWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_template_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  return target;
}

size_t CreateWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *template__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void CreateWorkflowTemplateRequest::MergeFrom(const CreateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_template_()) {
    mutable_template_()->::google::cloud::dataproc::v1beta2::WorkflowTemplate::MergeFrom(from.template_());
  }
}

void CreateWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorkflowTemplateRequest::CopyFrom(const CreateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void CreateWorkflowTemplateRequest::Swap(CreateWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateWorkflowTemplateRequest::InternalSwap(CreateWorkflowTemplateRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(template__, other->template__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWorkflowTemplateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWorkflowTemplateRequest::kNameFieldNumber;
const int GetWorkflowTemplateRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorkflowTemplateRequest::GetWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_GetWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
}
GetWorkflowTemplateRequest::GetWorkflowTemplateRequest(const GetWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
}

void GetWorkflowTemplateRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

GetWorkflowTemplateRequest::~GetWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  SharedDtor();
}

void GetWorkflowTemplateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorkflowTemplateRequest& GetWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_GetWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void GetWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _internal_metadata_.Clear();
}

bool GetWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  return false;
#undef DO_
}

void GetWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
}

::google::protobuf::uint8* GetWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  return target;
}

size_t GetWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void GetWorkflowTemplateRequest::MergeFrom(const GetWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void GetWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorkflowTemplateRequest::CopyFrom(const GetWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void GetWorkflowTemplateRequest::Swap(GetWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorkflowTemplateRequest::InternalSwap(GetWorkflowTemplateRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstantiateWorkflowTemplateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstantiateWorkflowTemplateRequest::kNameFieldNumber;
const int InstantiateWorkflowTemplateRequest::kVersionFieldNumber;
const int InstantiateWorkflowTemplateRequest::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstantiateWorkflowTemplateRequest::InstantiateWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_InstantiateWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
}
InstantiateWorkflowTemplateRequest::InstantiateWorkflowTemplateRequest(const InstantiateWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
}

void InstantiateWorkflowTemplateRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

InstantiateWorkflowTemplateRequest::~InstantiateWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  SharedDtor();
}

void InstantiateWorkflowTemplateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstantiateWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstantiateWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstantiateWorkflowTemplateRequest& InstantiateWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_InstantiateWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void InstantiateWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _internal_metadata_.Clear();
}

bool InstantiateWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  return false;
#undef DO_
}

void InstantiateWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instance_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
}

::google::protobuf::uint8* InstantiateWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instance_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  return target;
}

size_t InstantiateWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstantiateWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InstantiateWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstantiateWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void InstantiateWorkflowTemplateRequest::MergeFrom(const InstantiateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void InstantiateWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstantiateWorkflowTemplateRequest::CopyFrom(const InstantiateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstantiateWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void InstantiateWorkflowTemplateRequest::Swap(InstantiateWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstantiateWorkflowTemplateRequest::InternalSwap(InstantiateWorkflowTemplateRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstantiateWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstantiateInlineWorkflowTemplateRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_InstantiateInlineWorkflowTemplateRequest_default_instance_._instance.get_mutable()->template__ = const_cast< ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      ::google::cloud::dataproc::v1beta2::WorkflowTemplate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstantiateInlineWorkflowTemplateRequest::kParentFieldNumber;
const int InstantiateInlineWorkflowTemplateRequest::kTemplateFieldNumber;
const int InstantiateInlineWorkflowTemplateRequest::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstantiateInlineWorkflowTemplateRequest::InstantiateInlineWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_InstantiateInlineWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
}
InstantiateInlineWorkflowTemplateRequest::InstantiateInlineWorkflowTemplateRequest(const InstantiateInlineWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_template_()) {
    template__ = new ::google::cloud::dataproc::v1beta2::WorkflowTemplate(*from.template__);
  } else {
    template__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
}

void InstantiateInlineWorkflowTemplateRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template__ = NULL;
}

InstantiateInlineWorkflowTemplateRequest::~InstantiateInlineWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  SharedDtor();
}

void InstantiateInlineWorkflowTemplateRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete template__;
}

void InstantiateInlineWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstantiateInlineWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstantiateInlineWorkflowTemplateRequest& InstantiateInlineWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_InstantiateInlineWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void InstantiateInlineWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
  _internal_metadata_.Clear();
}

bool InstantiateInlineWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_template_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  return false;
#undef DO_
}

void InstantiateInlineWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_template_(), output);
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->instance_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
}

::google::protobuf::uint8* InstantiateInlineWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_template_(), deterministic, target);
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->instance_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  return target;
}

size_t InstantiateInlineWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string instance_id = 3;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 2;
  if (this->has_template_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *template__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstantiateInlineWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InstantiateInlineWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstantiateInlineWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void InstantiateInlineWorkflowTemplateRequest::MergeFrom(const InstantiateInlineWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_template_()) {
    mutable_template_()->::google::cloud::dataproc::v1beta2::WorkflowTemplate::MergeFrom(from.template_());
  }
}

void InstantiateInlineWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstantiateInlineWorkflowTemplateRequest::CopyFrom(const InstantiateInlineWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstantiateInlineWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void InstantiateInlineWorkflowTemplateRequest::Swap(InstantiateInlineWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstantiateInlineWorkflowTemplateRequest::InternalSwap(InstantiateInlineWorkflowTemplateRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(template__, other->template__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstantiateInlineWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateWorkflowTemplateRequest::InitAsDefaultInstance() {
  ::google::cloud::dataproc::v1beta2::_UpdateWorkflowTemplateRequest_default_instance_._instance.get_mutable()->template__ = const_cast< ::google::cloud::dataproc::v1beta2::WorkflowTemplate*>(
      ::google::cloud::dataproc::v1beta2::WorkflowTemplate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateWorkflowTemplateRequest::kTemplateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateWorkflowTemplateRequest::UpdateWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_UpdateWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
}
UpdateWorkflowTemplateRequest::UpdateWorkflowTemplateRequest(const UpdateWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_template_()) {
    template__ = new ::google::cloud::dataproc::v1beta2::WorkflowTemplate(*from.template__);
  } else {
    template__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
}

void UpdateWorkflowTemplateRequest::SharedCtor() {
  template__ = NULL;
}

UpdateWorkflowTemplateRequest::~UpdateWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  SharedDtor();
}

void UpdateWorkflowTemplateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete template__;
}

void UpdateWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateWorkflowTemplateRequest& UpdateWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_UpdateWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void UpdateWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && template__ != NULL) {
    delete template__;
  }
  template__ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_template_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  return false;
#undef DO_
}

void UpdateWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
  if (this->has_template_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_template_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
}

::google::protobuf::uint8* UpdateWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
  if (this->has_template_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_template_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  return target;
}

size_t UpdateWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.dataproc.v1beta2.WorkflowTemplate template = 1;
  if (this->has_template_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *template__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void UpdateWorkflowTemplateRequest::MergeFrom(const UpdateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_template_()) {
    mutable_template_()->::google::cloud::dataproc::v1beta2::WorkflowTemplate::MergeFrom(from.template_());
  }
}

void UpdateWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateWorkflowTemplateRequest::CopyFrom(const UpdateWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void UpdateWorkflowTemplateRequest::Swap(UpdateWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateWorkflowTemplateRequest::InternalSwap(UpdateWorkflowTemplateRequest* other) {
  using std::swap;
  swap(template__, other->template__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWorkflowTemplatesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWorkflowTemplatesRequest::kParentFieldNumber;
const int ListWorkflowTemplatesRequest::kPageSizeFieldNumber;
const int ListWorkflowTemplatesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWorkflowTemplatesRequest::ListWorkflowTemplatesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ListWorkflowTemplatesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
}
ListWorkflowTemplatesRequest::ListWorkflowTemplatesRequest(const ListWorkflowTemplatesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
}

void ListWorkflowTemplatesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListWorkflowTemplatesRequest::~ListWorkflowTemplatesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  SharedDtor();
}

void ListWorkflowTemplatesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListWorkflowTemplatesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWorkflowTemplatesRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWorkflowTemplatesRequest& ListWorkflowTemplatesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ListWorkflowTemplatesRequest.base);
  return *internal_default_instance();
}


void ListWorkflowTemplatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListWorkflowTemplatesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  return false;
#undef DO_
}

void ListWorkflowTemplatesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
}

::google::protobuf::uint8* ListWorkflowTemplatesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  return target;
}

size_t ListWorkflowTemplatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWorkflowTemplatesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWorkflowTemplatesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWorkflowTemplatesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
    MergeFrom(*source);
  }
}

void ListWorkflowTemplatesRequest::MergeFrom(const ListWorkflowTemplatesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListWorkflowTemplatesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWorkflowTemplatesRequest::CopyFrom(const ListWorkflowTemplatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWorkflowTemplatesRequest::IsInitialized() const {
  return true;
}

void ListWorkflowTemplatesRequest::Swap(ListWorkflowTemplatesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWorkflowTemplatesRequest::InternalSwap(ListWorkflowTemplatesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWorkflowTemplatesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWorkflowTemplatesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWorkflowTemplatesResponse::kTemplatesFieldNumber;
const int ListWorkflowTemplatesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWorkflowTemplatesResponse::ListWorkflowTemplatesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ListWorkflowTemplatesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
}
ListWorkflowTemplatesResponse::ListWorkflowTemplatesResponse(const ListWorkflowTemplatesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      templates_(from.templates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
}

void ListWorkflowTemplatesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListWorkflowTemplatesResponse::~ListWorkflowTemplatesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  SharedDtor();
}

void ListWorkflowTemplatesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListWorkflowTemplatesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWorkflowTemplatesResponse::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWorkflowTemplatesResponse& ListWorkflowTemplatesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_ListWorkflowTemplatesResponse.base);
  return *internal_default_instance();
}


void ListWorkflowTemplatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  templates_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListWorkflowTemplatesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_templates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  return false;
#undef DO_
}

void ListWorkflowTemplatesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->templates(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
}

::google::protobuf::uint8* ListWorkflowTemplatesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->templates(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  return target;
}

size_t ListWorkflowTemplatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.dataproc.v1beta2.WorkflowTemplate templates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->templates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->templates(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWorkflowTemplatesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWorkflowTemplatesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWorkflowTemplatesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
    MergeFrom(*source);
  }
}

void ListWorkflowTemplatesResponse::MergeFrom(const ListWorkflowTemplatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  templates_.MergeFrom(from.templates_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListWorkflowTemplatesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWorkflowTemplatesResponse::CopyFrom(const ListWorkflowTemplatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWorkflowTemplatesResponse::IsInitialized() const {
  return true;
}

void ListWorkflowTemplatesResponse::Swap(ListWorkflowTemplatesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWorkflowTemplatesResponse::InternalSwap(ListWorkflowTemplatesResponse* other) {
  using std::swap;
  CastToBase(&templates_)->InternalSwap(CastToBase(&other->templates_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWorkflowTemplatesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteWorkflowTemplateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteWorkflowTemplateRequest::kNameFieldNumber;
const int DeleteWorkflowTemplateRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteWorkflowTemplateRequest::DeleteWorkflowTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_DeleteWorkflowTemplateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
}
DeleteWorkflowTemplateRequest::DeleteWorkflowTemplateRequest(const DeleteWorkflowTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
}

void DeleteWorkflowTemplateRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

DeleteWorkflowTemplateRequest::~DeleteWorkflowTemplateRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  SharedDtor();
}

void DeleteWorkflowTemplateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteWorkflowTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteWorkflowTemplateRequest::descriptor() {
  ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteWorkflowTemplateRequest& DeleteWorkflowTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::scc_info_DeleteWorkflowTemplateRequest.base);
  return *internal_default_instance();
}


void DeleteWorkflowTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteWorkflowTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  return false;
#undef DO_
}

void DeleteWorkflowTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
}

::google::protobuf::uint8* DeleteWorkflowTemplateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  return target;
}

size_t DeleteWorkflowTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteWorkflowTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteWorkflowTemplateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteWorkflowTemplateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
    MergeFrom(*source);
  }
}

void DeleteWorkflowTemplateRequest::MergeFrom(const DeleteWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void DeleteWorkflowTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteWorkflowTemplateRequest::CopyFrom(const DeleteWorkflowTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteWorkflowTemplateRequest::IsInitialized() const {
  return true;
}

void DeleteWorkflowTemplateRequest::Swap(DeleteWorkflowTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteWorkflowTemplateRequest::InternalSwap(DeleteWorkflowTemplateRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteWorkflowTemplateRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fdataproc_2fv1beta2_2fworkflow_5ftemplates_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta2
}  // namespace dataproc
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowTemplate_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowTemplate* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowTemplate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowTemplatePlacement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ManagedCluster_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ManagedCluster* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ManagedCluster >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ManagedCluster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterSelector_ClusterLabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterSelector* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterSelector >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterSelector >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::OrderedJob_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::OrderedJob* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::OrderedJob >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::OrderedJob >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowMetadata_ParametersEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowMetadata* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ClusterOperation* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ClusterOperation >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ClusterOperation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowGraph* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowGraph >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::WorkflowNode* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::WorkflowNode >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::WorkflowNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* Arena::CreateMaybeMessage< ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
