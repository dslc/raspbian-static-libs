// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/dataproc/v1beta2/workflow_templates.proto

#include "google/cloud/dataproc/v1beta2/workflow_templates.pb.h"
#include "google/cloud/dataproc/v1beta2/workflow_templates.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace cloud {
namespace dataproc {
namespace v1beta2 {

static const char* WorkflowTemplateService_method_names[] = {
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/CreateWorkflowTemplate",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/GetWorkflowTemplate",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateWorkflowTemplate",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateInlineWorkflowTemplate",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/UpdateWorkflowTemplate",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/ListWorkflowTemplates",
  "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/DeleteWorkflowTemplate",
};

std::unique_ptr< WorkflowTemplateService::Stub> WorkflowTemplateService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< WorkflowTemplateService::Stub> stub(new WorkflowTemplateService::Stub(channel));
  return stub;
}

WorkflowTemplateService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateWorkflowTemplate_(WorkflowTemplateService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetWorkflowTemplate_(WorkflowTemplateService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_InstantiateWorkflowTemplate_(WorkflowTemplateService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_InstantiateInlineWorkflowTemplate_(WorkflowTemplateService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateWorkflowTemplate_(WorkflowTemplateService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListWorkflowTemplates_(WorkflowTemplateService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteWorkflowTemplate_(WorkflowTemplateService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status WorkflowTemplateService::Stub::CreateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::AsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_CreateWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::PrepareAsyncCreateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_CreateWorkflowTemplate_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::GetWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::AsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_GetWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::PrepareAsyncGetWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_GetWorkflowTemplate_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::InstantiateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_InstantiateWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* WorkflowTemplateService::Stub::AsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_InstantiateWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* WorkflowTemplateService::Stub::PrepareAsyncInstantiateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_InstantiateWorkflowTemplate_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::InstantiateInlineWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_InstantiateInlineWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* WorkflowTemplateService::Stub::AsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_InstantiateInlineWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* WorkflowTemplateService::Stub::PrepareAsyncInstantiateInlineWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_InstantiateInlineWorkflowTemplate_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::UpdateWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::AsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>* WorkflowTemplateService::Stub::PrepareAsyncUpdateWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::WorkflowTemplate>::Create(channel_.get(), cq, rpcmethod_UpdateWorkflowTemplate_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::ListWorkflowTemplates(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListWorkflowTemplates_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* WorkflowTemplateService::Stub::AsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListWorkflowTemplates_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>* WorkflowTemplateService::Stub::PrepareAsyncListWorkflowTemplatesRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>::Create(channel_.get(), cq, rpcmethod_ListWorkflowTemplates_, context, request, false);
}

::grpc::Status WorkflowTemplateService::Stub::DeleteWorkflowTemplate(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteWorkflowTemplate_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* WorkflowTemplateService::Stub::AsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteWorkflowTemplate_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* WorkflowTemplateService::Stub::PrepareAsyncDeleteWorkflowTemplateRaw(::grpc::ClientContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteWorkflowTemplate_, context, request, false);
}

WorkflowTemplateService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(
          std::mem_fn(&WorkflowTemplateService::Service::CreateWorkflowTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(
          std::mem_fn(&WorkflowTemplateService::Service::GetWorkflowTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest, ::google::longrunning::Operation>(
          std::mem_fn(&WorkflowTemplateService::Service::InstantiateWorkflowTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest, ::google::longrunning::Operation>(
          std::mem_fn(&WorkflowTemplateService::Service::InstantiateInlineWorkflowTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest, ::google::cloud::dataproc::v1beta2::WorkflowTemplate>(
          std::mem_fn(&WorkflowTemplateService::Service::UpdateWorkflowTemplate), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse>(
          std::mem_fn(&WorkflowTemplateService::Service::ListWorkflowTemplates), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      WorkflowTemplateService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< WorkflowTemplateService::Service, ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest, ::google::protobuf::Empty>(
          std::mem_fn(&WorkflowTemplateService::Service::DeleteWorkflowTemplate), this)));
}

WorkflowTemplateService::Service::~Service() {
}

::grpc::Status WorkflowTemplateService::Service::CreateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::CreateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::GetWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::GetWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::InstantiateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::InstantiateInlineWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::InstantiateInlineWorkflowTemplateRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::UpdateWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::UpdateWorkflowTemplateRequest* request, ::google::cloud::dataproc::v1beta2::WorkflowTemplate* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::ListWorkflowTemplates(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesRequest* request, ::google::cloud::dataproc::v1beta2::ListWorkflowTemplatesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status WorkflowTemplateService::Service::DeleteWorkflowTemplate(::grpc::ServerContext* context, const ::google::cloud::dataproc::v1beta2::DeleteWorkflowTemplateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace cloud
}  // namespace dataproc
}  // namespace v1beta2

