// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/kms/v1/service.proto

#include "google/cloud/kms/v1/service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CryptoKeyVersion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KeyRing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CryptoKey;
}  // namespace protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace google {
namespace cloud {
namespace kms {
namespace v1 {
class ListKeyRingsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListKeyRingsRequest>
      _instance;
} _ListKeyRingsRequest_default_instance_;
class ListCryptoKeysRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListCryptoKeysRequest>
      _instance;
} _ListCryptoKeysRequest_default_instance_;
class ListCryptoKeyVersionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListCryptoKeyVersionsRequest>
      _instance;
} _ListCryptoKeyVersionsRequest_default_instance_;
class ListKeyRingsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListKeyRingsResponse>
      _instance;
} _ListKeyRingsResponse_default_instance_;
class ListCryptoKeysResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListCryptoKeysResponse>
      _instance;
} _ListCryptoKeysResponse_default_instance_;
class ListCryptoKeyVersionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListCryptoKeyVersionsResponse>
      _instance;
} _ListCryptoKeyVersionsResponse_default_instance_;
class GetKeyRingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetKeyRingRequest>
      _instance;
} _GetKeyRingRequest_default_instance_;
class GetCryptoKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCryptoKeyRequest>
      _instance;
} _GetCryptoKeyRequest_default_instance_;
class GetCryptoKeyVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCryptoKeyVersionRequest>
      _instance;
} _GetCryptoKeyVersionRequest_default_instance_;
class CreateKeyRingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateKeyRingRequest>
      _instance;
} _CreateKeyRingRequest_default_instance_;
class CreateCryptoKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateCryptoKeyRequest>
      _instance;
} _CreateCryptoKeyRequest_default_instance_;
class CreateCryptoKeyVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateCryptoKeyVersionRequest>
      _instance;
} _CreateCryptoKeyVersionRequest_default_instance_;
class UpdateCryptoKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCryptoKeyRequest>
      _instance;
} _UpdateCryptoKeyRequest_default_instance_;
class UpdateCryptoKeyVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCryptoKeyVersionRequest>
      _instance;
} _UpdateCryptoKeyVersionRequest_default_instance_;
class EncryptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptRequest>
      _instance;
} _EncryptRequest_default_instance_;
class DecryptRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptRequest>
      _instance;
} _DecryptRequest_default_instance_;
class DecryptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecryptResponse>
      _instance;
} _DecryptResponse_default_instance_;
class EncryptResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EncryptResponse>
      _instance;
} _EncryptResponse_default_instance_;
class UpdateCryptoKeyPrimaryVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCryptoKeyPrimaryVersionRequest>
      _instance;
} _UpdateCryptoKeyPrimaryVersionRequest_default_instance_;
class DestroyCryptoKeyVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DestroyCryptoKeyVersionRequest>
      _instance;
} _DestroyCryptoKeyVersionRequest_default_instance_;
class RestoreCryptoKeyVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreCryptoKeyVersionRequest>
      _instance;
} _RestoreCryptoKeyVersionRequest_default_instance_;
}  // namespace v1
}  // namespace kms
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto {
static void InitDefaultsListKeyRingsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListKeyRingsRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListKeyRingsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListKeyRingsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListKeyRingsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListKeyRingsRequest}, {}};

static void InitDefaultsListCryptoKeysRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListCryptoKeysRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListCryptoKeysRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListCryptoKeysRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListCryptoKeysRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListCryptoKeysRequest}, {}};

static void InitDefaultsListCryptoKeyVersionsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListCryptoKeyVersionsRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListCryptoKeyVersionsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListCryptoKeyVersionsRequest}, {}};

static void InitDefaultsListKeyRingsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListKeyRingsResponse_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListKeyRingsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListKeyRingsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListKeyRingsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListKeyRingsResponse}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_KeyRing.base,}};

static void InitDefaultsListCryptoKeysResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListCryptoKeysResponse_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListCryptoKeysResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListCryptoKeysResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListCryptoKeysResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListCryptoKeysResponse}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKey.base,}};

static void InitDefaultsListCryptoKeyVersionsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_ListCryptoKeyVersionsResponse_default_instance_;
    new (ptr) ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListCryptoKeyVersionsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListCryptoKeyVersionsResponse}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKeyVersion.base,}};

static void InitDefaultsGetKeyRingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_GetKeyRingRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::GetKeyRingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::GetKeyRingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetKeyRingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetKeyRingRequest}, {}};

static void InitDefaultsGetCryptoKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_GetCryptoKeyRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::GetCryptoKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::GetCryptoKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetCryptoKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetCryptoKeyRequest}, {}};

static void InitDefaultsGetCryptoKeyVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_GetCryptoKeyVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::GetCryptoKeyVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::GetCryptoKeyVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetCryptoKeyVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetCryptoKeyVersionRequest}, {}};

static void InitDefaultsCreateKeyRingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_CreateKeyRingRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::CreateKeyRingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::CreateKeyRingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateKeyRingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateKeyRingRequest}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_KeyRing.base,}};

static void InitDefaultsCreateCryptoKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_CreateCryptoKeyRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::CreateCryptoKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::CreateCryptoKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateCryptoKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateCryptoKeyRequest}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKey.base,}};

static void InitDefaultsCreateCryptoKeyVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_CreateCryptoKeyVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateCryptoKeyVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateCryptoKeyVersionRequest}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKeyVersion.base,}};

static void InitDefaultsUpdateCryptoKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_UpdateCryptoKeyRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::UpdateCryptoKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::UpdateCryptoKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateCryptoKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateCryptoKeyRequest}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKey.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsUpdateCryptoKeyVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_UpdateCryptoKeyVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateCryptoKeyVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateCryptoKeyVersionRequest}, {
      &protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::scc_info_CryptoKeyVersion.base,
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,}};

static void InitDefaultsEncryptRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_EncryptRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::EncryptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::EncryptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptRequest}, {}};

static void InitDefaultsDecryptRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_DecryptRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::DecryptRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::DecryptRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptRequest}, {}};

static void InitDefaultsDecryptResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_DecryptResponse_default_instance_;
    new (ptr) ::google::cloud::kms::v1::DecryptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::DecryptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecryptResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecryptResponse}, {}};

static void InitDefaultsEncryptResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_EncryptResponse_default_instance_;
    new (ptr) ::google::cloud::kms::v1::EncryptResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::EncryptResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EncryptResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEncryptResponse}, {}};

static void InitDefaultsUpdateCryptoKeyPrimaryVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_UpdateCryptoKeyPrimaryVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateCryptoKeyPrimaryVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateCryptoKeyPrimaryVersionRequest}, {}};

static void InitDefaultsDestroyCryptoKeyVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_DestroyCryptoKeyVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DestroyCryptoKeyVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDestroyCryptoKeyVersionRequest}, {}};

static void InitDefaultsRestoreCryptoKeyVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::kms::v1::_RestoreCryptoKeyVersionRequest_default_instance_;
    new (ptr) ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RestoreCryptoKeyVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRestoreCryptoKeyVersionRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListKeyRingsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListCryptoKeysRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListCryptoKeyVersionsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListKeyRingsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListCryptoKeysResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListCryptoKeyVersionsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetKeyRingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCryptoKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetCryptoKeyVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateKeyRingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateCryptoKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateCryptoKeyVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCryptoKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCryptoKeyVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecryptResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EncryptResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCryptoKeyPrimaryVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DestroyCryptoKeyVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreCryptoKeyVersionRequest.base);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsResponse, key_rings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListKeyRingsResponse, total_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysResponse, crypto_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeysResponse, total_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsResponse, crypto_key_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsResponse, next_page_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::ListCryptoKeyVersionsResponse, total_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetKeyRingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetKeyRingRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetCryptoKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetCryptoKeyRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetCryptoKeyVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::GetCryptoKeyVersionRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateKeyRingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateKeyRingRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateKeyRingRequest, key_ring_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateKeyRingRequest, key_ring_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyRequest, crypto_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyRequest, crypto_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyVersionRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::CreateCryptoKeyVersionRequest, crypto_key_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyRequest, crypto_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest, crypto_key_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest, update_mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptRequest, plaintext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptRequest, additional_authenticated_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptRequest, ciphertext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptRequest, additional_authenticated_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DecryptResponse, plaintext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::EncryptResponse, ciphertext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest, crypto_key_version_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest, name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::cloud::kms::v1::ListKeyRingsRequest)},
  { 8, -1, sizeof(::google::cloud::kms::v1::ListCryptoKeysRequest)},
  { 16, -1, sizeof(::google::cloud::kms::v1::ListCryptoKeyVersionsRequest)},
  { 24, -1, sizeof(::google::cloud::kms::v1::ListKeyRingsResponse)},
  { 32, -1, sizeof(::google::cloud::kms::v1::ListCryptoKeysResponse)},
  { 40, -1, sizeof(::google::cloud::kms::v1::ListCryptoKeyVersionsResponse)},
  { 48, -1, sizeof(::google::cloud::kms::v1::GetKeyRingRequest)},
  { 54, -1, sizeof(::google::cloud::kms::v1::GetCryptoKeyRequest)},
  { 60, -1, sizeof(::google::cloud::kms::v1::GetCryptoKeyVersionRequest)},
  { 66, -1, sizeof(::google::cloud::kms::v1::CreateKeyRingRequest)},
  { 74, -1, sizeof(::google::cloud::kms::v1::CreateCryptoKeyRequest)},
  { 82, -1, sizeof(::google::cloud::kms::v1::CreateCryptoKeyVersionRequest)},
  { 89, -1, sizeof(::google::cloud::kms::v1::UpdateCryptoKeyRequest)},
  { 96, -1, sizeof(::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest)},
  { 103, -1, sizeof(::google::cloud::kms::v1::EncryptRequest)},
  { 111, -1, sizeof(::google::cloud::kms::v1::DecryptRequest)},
  { 119, -1, sizeof(::google::cloud::kms::v1::DecryptResponse)},
  { 125, -1, sizeof(::google::cloud::kms::v1::EncryptResponse)},
  { 132, -1, sizeof(::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest)},
  { 139, -1, sizeof(::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest)},
  { 145, -1, sizeof(::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListKeyRingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListCryptoKeysRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListCryptoKeyVersionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListKeyRingsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListCryptoKeysResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_ListCryptoKeyVersionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_GetKeyRingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_GetCryptoKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_GetCryptoKeyVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_CreateKeyRingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_CreateCryptoKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_CreateCryptoKeyVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_UpdateCryptoKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_UpdateCryptoKeyVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_EncryptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_DecryptRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_DecryptResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_EncryptResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_UpdateCryptoKeyPrimaryVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_DestroyCryptoKeyVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::kms::v1::_RestoreCryptoKeyVersionRequest_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/kms/v1/service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!google/cloud/kms/v1/service.proto\022\023goo"
      "gle.cloud.kms.v1\032\034google/api/annotations"
      ".proto\032#google/cloud/kms/v1/resources.pr"
      "oto\032 google/protobuf/field_mask.proto\032\034g"
      "oogle/protobuf/struct.proto\032\036google/prot"
      "obuf/wrappers.proto\"L\n\023ListKeyRingsReque"
      "st\022\016\n\006parent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n"
      "\npage_token\030\003 \001(\t\"N\n\025ListCryptoKeysReque"
      "st\022\016\n\006parent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n"
      "\npage_token\030\003 \001(\t\"U\n\034ListCryptoKeyVersio"
      "nsRequest\022\016\n\006parent\030\001 \001(\t\022\021\n\tpage_size\030\002"
      " \001(\005\022\022\n\npage_token\030\003 \001(\t\"t\n\024ListKeyRings"
      "Response\022/\n\tkey_rings\030\001 \003(\0132\034.google.clo"
      "ud.kms.v1.KeyRing\022\027\n\017next_page_token\030\002 \001"
      "(\t\022\022\n\ntotal_size\030\003 \001(\005\"z\n\026ListCryptoKeys"
      "Response\0223\n\013crypto_keys\030\001 \003(\0132\036.google.c"
      "loud.kms.v1.CryptoKey\022\027\n\017next_page_token"
      "\030\002 \001(\t\022\022\n\ntotal_size\030\003 \001(\005\"\220\001\n\035ListCrypt"
      "oKeyVersionsResponse\022B\n\023crypto_key_versi"
      "ons\030\001 \003(\0132%.google.cloud.kms.v1.CryptoKe"
      "yVersion\022\027\n\017next_page_token\030\002 \001(\t\022\022\n\ntot"
      "al_size\030\003 \001(\005\"!\n\021GetKeyRingRequest\022\014\n\004na"
      "me\030\001 \001(\t\"#\n\023GetCryptoKeyRequest\022\014\n\004name\030"
      "\001 \001(\t\"*\n\032GetCryptoKeyVersionRequest\022\014\n\004n"
      "ame\030\001 \001(\t\"k\n\024CreateKeyRingRequest\022\016\n\006par"
      "ent\030\001 \001(\t\022\023\n\013key_ring_id\030\002 \001(\t\022.\n\010key_ri"
      "ng\030\003 \001(\0132\034.google.cloud.kms.v1.KeyRing\"s"
      "\n\026CreateCryptoKeyRequest\022\016\n\006parent\030\001 \001(\t"
      "\022\025\n\rcrypto_key_id\030\002 \001(\t\0222\n\ncrypto_key\030\003 "
      "\001(\0132\036.google.cloud.kms.v1.CryptoKey\"r\n\035C"
      "reateCryptoKeyVersionRequest\022\016\n\006parent\030\001"
      " \001(\t\022A\n\022crypto_key_version\030\002 \001(\0132%.googl"
      "e.cloud.kms.v1.CryptoKeyVersion\"}\n\026Updat"
      "eCryptoKeyRequest\0222\n\ncrypto_key\030\001 \001(\0132\036."
      "google.cloud.kms.v1.CryptoKey\022/\n\013update_"
      "mask\030\002 \001(\0132\032.google.protobuf.FieldMask\"\223"
      "\001\n\035UpdateCryptoKeyVersionRequest\022A\n\022cryp"
      "to_key_version\030\001 \001(\0132%.google.cloud.kms."
      "v1.CryptoKeyVersion\022/\n\013update_mask\030\002 \001(\013"
      "2\032.google.protobuf.FieldMask\"X\n\016EncryptR"
      "equest\022\014\n\004name\030\001 \001(\t\022\021\n\tplaintext\030\002 \001(\014\022"
      "%\n\035additional_authenticated_data\030\003 \001(\014\"Y"
      "\n\016DecryptRequest\022\014\n\004name\030\001 \001(\t\022\022\n\ncipher"
      "text\030\002 \001(\014\022%\n\035additional_authenticated_d"
      "ata\030\003 \001(\014\"$\n\017DecryptResponse\022\021\n\tplaintex"
      "t\030\001 \001(\014\"3\n\017EncryptResponse\022\014\n\004name\030\001 \001(\t"
      "\022\022\n\nciphertext\030\002 \001(\014\"S\n$UpdateCryptoKeyP"
      "rimaryVersionRequest\022\014\n\004name\030\001 \001(\t\022\035\n\025cr"
      "ypto_key_version_id\030\002 \001(\t\".\n\036DestroyCryp"
      "toKeyVersionRequest\022\014\n\004name\030\001 \001(\t\".\n\036Res"
      "toreCryptoKeyVersionRequest\022\014\n\004name\030\001 \001("
      "\t2\333\027\n\024KeyManagementService\022\231\001\n\014ListKeyRi"
      "ngs\022(.google.cloud.kms.v1.ListKeyRingsRe"
      "quest\032).google.cloud.kms.v1.ListKeyRings"
      "Response\"4\202\323\344\223\002.\022,/v1/{parent=projects/*"
      "/locations/*}/keyRings\022\254\001\n\016ListCryptoKey"
      "s\022*.google.cloud.kms.v1.ListCryptoKeysRe"
      "quest\032+.google.cloud.kms.v1.ListCryptoKe"
      "ysResponse\"A\202\323\344\223\002;\0229/v1/{parent=projects"
      "/*/locations/*/keyRings/*}/cryptoKeys\022\325\001"
      "\n\025ListCryptoKeyVersions\0221.google.cloud.k"
      "ms.v1.ListCryptoKeyVersionsRequest\0322.goo"
      "gle.cloud.kms.v1.ListCryptoKeyVersionsRe"
      "sponse\"U\202\323\344\223\002O\022M/v1/{parent=projects/*/l"
      "ocations/*/keyRings/*/cryptoKeys/*}/cryp"
      "toKeyVersions\022\210\001\n\nGetKeyRing\022&.google.cl"
      "oud.kms.v1.GetKeyRingRequest\032\034.google.cl"
      "oud.kms.v1.KeyRing\"4\202\323\344\223\002.\022,/v1/{name=pr"
      "ojects/*/locations/*/keyRings/*}\022\233\001\n\014Get"
      "CryptoKey\022(.google.cloud.kms.v1.GetCrypt"
      "oKeyRequest\032\036.google.cloud.kms.v1.Crypto"
      "Key\"A\202\323\344\223\002;\0229/v1/{name=projects/*/locati"
      "ons/*/keyRings/*/cryptoKeys/*}\022\304\001\n\023GetCr"
      "yptoKeyVersion\022/.google.cloud.kms.v1.Get"
      "CryptoKeyVersionRequest\032%.google.cloud.k"
      "ms.v1.CryptoKeyVersion\"U\202\323\344\223\002O\022M/v1/{nam"
      "e=projects/*/locations/*/keyRings/*/cryp"
      "toKeys/*/cryptoKeyVersions/*}\022\230\001\n\rCreate"
      "KeyRing\022).google.cloud.kms.v1.CreateKeyR"
      "ingRequest\032\034.google.cloud.kms.v1.KeyRing"
      "\">\202\323\344\223\0028\",/v1/{parent=projects/*/locatio"
      "ns/*}/keyRings:\010key_ring\022\255\001\n\017CreateCrypt"
      "oKey\022+.google.cloud.kms.v1.CreateCryptoK"
      "eyRequest\032\036.google.cloud.kms.v1.CryptoKe"
      "y\"M\202\323\344\223\002G\"9/v1/{parent=projects/*/locati"
      "ons/*/keyRings/*}/cryptoKeys:\ncrypto_key"
      "\022\336\001\n\026CreateCryptoKeyVersion\0222.google.clo"
      "ud.kms.v1.CreateCryptoKeyVersionRequest\032"
      "%.google.cloud.kms.v1.CryptoKeyVersion\"i"
      "\202\323\344\223\002c\"M/v1/{parent=projects/*/locations"
      "/*/keyRings/*/cryptoKeys/*}/cryptoKeyVer"
      "sions:\022crypto_key_version\022\270\001\n\017UpdateCryp"
      "toKey\022+.google.cloud.kms.v1.UpdateCrypto"
      "KeyRequest\032\036.google.cloud.kms.v1.CryptoK"
      "ey\"X\202\323\344\223\002R2D/v1/{crypto_key.name=project"
      "s/*/locations/*/keyRings/*/cryptoKeys/*}"
      ":\ncrypto_key\022\361\001\n\026UpdateCryptoKeyVersion\022"
      "2.google.cloud.kms.v1.UpdateCryptoKeyVer"
      "sionRequest\032%.google.cloud.kms.v1.Crypto"
      "KeyVersion\"|\202\323\344\223\002v2`/v1/{crypto_key_vers"
      "ion.name=projects/*/locations/*/keyRings"
      "/*/cryptoKeys/*/cryptoKeyVersions/*}:\022cr"
      "ypto_key_version\022\243\001\n\007Encrypt\022#.google.cl"
      "oud.kms.v1.EncryptRequest\032$.google.cloud"
      ".kms.v1.EncryptResponse\"M\202\323\344\223\002G\"B/v1/{na"
      "me=projects/*/locations/*/keyRings/*/cry"
      "ptoKeys/**}:encrypt:\001*\022\242\001\n\007Decrypt\022#.goo"
      "gle.cloud.kms.v1.DecryptRequest\032$.google"
      ".cloud.kms.v1.DecryptResponse\"L\202\323\344\223\002F\"A/"
      "v1/{name=projects/*/locations/*/keyRings"
      "/*/cryptoKeys/*}:decrypt:\001*\022\325\001\n\035UpdateCr"
      "yptoKeyPrimaryVersion\0229.google.cloud.kms"
      ".v1.UpdateCryptoKeyPrimaryVersionRequest"
      "\032\036.google.cloud.kms.v1.CryptoKey\"Y\202\323\344\223\002S"
      "\"N/v1/{name=projects/*/locations/*/keyRi"
      "ngs/*/cryptoKeys/*}:updatePrimaryVersion"
      ":\001*\022\327\001\n\027DestroyCryptoKeyVersion\0223.google"
      ".cloud.kms.v1.DestroyCryptoKeyVersionReq"
      "uest\032%.google.cloud.kms.v1.CryptoKeyVers"
      "ion\"`\202\323\344\223\002Z\"U/v1/{name=projects/*/locati"
      "ons/*/keyRings/*/cryptoKeys/*/cryptoKeyV"
      "ersions/*}:destroy:\001*\022\327\001\n\027RestoreCryptoK"
      "eyVersion\0223.google.cloud.kms.v1.RestoreC"
      "ryptoKeyVersionRequest\032%.google.cloud.km"
      "s.v1.CryptoKeyVersion\"`\202\323\344\223\002Z\"U/v1/{name"
      "=projects/*/locations/*/keyRings/*/crypt"
      "oKeys/*/cryptoKeyVersions/*}:restore:\001*B"
      "\214\001\n\027com.google.cloud.kms.v1B\010KmsProtoP\001Z"
      "6google.golang.org/genproto/googleapis/c"
      "loud/kms/v1;kms\370\001\001\252\002\023Google.Cloud.Kms.V1"
      "\312\002\023Google\\Cloud\\Kms\\V1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5230);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/kms/v1/service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fcloud_2fkms_2fv1_2fresources_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto
namespace google {
namespace cloud {
namespace kms {
namespace v1 {

// ===================================================================

void ListKeyRingsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListKeyRingsRequest::kParentFieldNumber;
const int ListKeyRingsRequest::kPageSizeFieldNumber;
const int ListKeyRingsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListKeyRingsRequest::ListKeyRingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListKeyRingsRequest)
}
ListKeyRingsRequest::ListKeyRingsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListKeyRingsRequest)
}
ListKeyRingsRequest::ListKeyRingsRequest(const ListKeyRingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListKeyRingsRequest)
}

void ListKeyRingsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListKeyRingsRequest::~ListKeyRingsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListKeyRingsRequest)
  SharedDtor();
}

void ListKeyRingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListKeyRingsRequest::ArenaDtor(void* object) {
  ListKeyRingsRequest* _this = reinterpret_cast< ListKeyRingsRequest* >(object);
  (void)_this;
}
void ListKeyRingsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListKeyRingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListKeyRingsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListKeyRingsRequest& ListKeyRingsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsRequest.base);
  return *internal_default_instance();
}


void ListKeyRingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListKeyRingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListKeyRingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListKeyRingsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListKeyRingsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListKeyRingsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListKeyRingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListKeyRingsRequest)
  return false;
#undef DO_
}

void ListKeyRingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListKeyRingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListKeyRingsRequest)
}

::google::protobuf::uint8* ListKeyRingsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListKeyRingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListKeyRingsRequest)
  return target;
}

size_t ListKeyRingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListKeyRingsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListKeyRingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListKeyRingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListKeyRingsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListKeyRingsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListKeyRingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListKeyRingsRequest)
    MergeFrom(*source);
  }
}

void ListKeyRingsRequest::MergeFrom(const ListKeyRingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListKeyRingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListKeyRingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListKeyRingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListKeyRingsRequest::CopyFrom(const ListKeyRingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListKeyRingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeyRingsRequest::IsInitialized() const {
  return true;
}

void ListKeyRingsRequest::Swap(ListKeyRingsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListKeyRingsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListKeyRingsRequest::UnsafeArenaSwap(ListKeyRingsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListKeyRingsRequest::InternalSwap(ListKeyRingsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListKeyRingsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListCryptoKeysRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCryptoKeysRequest::kParentFieldNumber;
const int ListCryptoKeysRequest::kPageSizeFieldNumber;
const int ListCryptoKeysRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCryptoKeysRequest::ListCryptoKeysRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListCryptoKeysRequest)
}
ListCryptoKeysRequest::ListCryptoKeysRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListCryptoKeysRequest)
}
ListCryptoKeysRequest::ListCryptoKeysRequest(const ListCryptoKeysRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListCryptoKeysRequest)
}

void ListCryptoKeysRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListCryptoKeysRequest::~ListCryptoKeysRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListCryptoKeysRequest)
  SharedDtor();
}

void ListCryptoKeysRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCryptoKeysRequest::ArenaDtor(void* object) {
  ListCryptoKeysRequest* _this = reinterpret_cast< ListCryptoKeysRequest* >(object);
  (void)_this;
}
void ListCryptoKeysRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListCryptoKeysRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListCryptoKeysRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCryptoKeysRequest& ListCryptoKeysRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysRequest.base);
  return *internal_default_instance();
}


void ListCryptoKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListCryptoKeysRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeysRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeysRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListCryptoKeysRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListCryptoKeysRequest)
  return false;
#undef DO_
}

void ListCryptoKeysRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListCryptoKeysRequest)
}

::google::protobuf::uint8* ListCryptoKeysRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListCryptoKeysRequest)
  return target;
}

size_t ListCryptoKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCryptoKeysRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCryptoKeysRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCryptoKeysRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListCryptoKeysRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListCryptoKeysRequest)
    MergeFrom(*source);
  }
}

void ListCryptoKeysRequest::MergeFrom(const ListCryptoKeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListCryptoKeysRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCryptoKeysRequest::CopyFrom(const ListCryptoKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListCryptoKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCryptoKeysRequest::IsInitialized() const {
  return true;
}

void ListCryptoKeysRequest::Swap(ListCryptoKeysRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListCryptoKeysRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListCryptoKeysRequest::UnsafeArenaSwap(ListCryptoKeysRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListCryptoKeysRequest::InternalSwap(ListCryptoKeysRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListCryptoKeysRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListCryptoKeyVersionsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCryptoKeyVersionsRequest::kParentFieldNumber;
const int ListCryptoKeyVersionsRequest::kPageSizeFieldNumber;
const int ListCryptoKeyVersionsRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCryptoKeyVersionsRequest::ListCryptoKeyVersionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
}
ListCryptoKeyVersionsRequest::ListCryptoKeyVersionsRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
}
ListCryptoKeyVersionsRequest::ListCryptoKeyVersionsRequest(const ListCryptoKeyVersionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
}

void ListCryptoKeyVersionsRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListCryptoKeyVersionsRequest::~ListCryptoKeyVersionsRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  SharedDtor();
}

void ListCryptoKeyVersionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCryptoKeyVersionsRequest::ArenaDtor(void* object) {
  ListCryptoKeyVersionsRequest* _this = reinterpret_cast< ListCryptoKeyVersionsRequest* >(object);
  (void)_this;
}
void ListCryptoKeyVersionsRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListCryptoKeyVersionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListCryptoKeyVersionsRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCryptoKeyVersionsRequest& ListCryptoKeyVersionsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsRequest.base);
  return *internal_default_instance();
}


void ListCryptoKeyVersionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListCryptoKeyVersionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  return false;
#undef DO_
}

void ListCryptoKeyVersionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
}

::google::protobuf::uint8* ListCryptoKeyVersionsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  return target;
}

size_t ListCryptoKeyVersionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCryptoKeyVersionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCryptoKeyVersionsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCryptoKeyVersionsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
    MergeFrom(*source);
  }
}

void ListCryptoKeyVersionsRequest::MergeFrom(const ListCryptoKeyVersionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.page_token().size() > 0) {
    set_page_token(from.page_token());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListCryptoKeyVersionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCryptoKeyVersionsRequest::CopyFrom(const ListCryptoKeyVersionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCryptoKeyVersionsRequest::IsInitialized() const {
  return true;
}

void ListCryptoKeyVersionsRequest::Swap(ListCryptoKeyVersionsRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListCryptoKeyVersionsRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListCryptoKeyVersionsRequest::UnsafeArenaSwap(ListCryptoKeyVersionsRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListCryptoKeyVersionsRequest::InternalSwap(ListCryptoKeyVersionsRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListCryptoKeyVersionsRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListKeyRingsResponse::InitAsDefaultInstance() {
}
void ListKeyRingsResponse::clear_key_rings() {
  key_rings_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListKeyRingsResponse::kKeyRingsFieldNumber;
const int ListKeyRingsResponse::kNextPageTokenFieldNumber;
const int ListKeyRingsResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListKeyRingsResponse::ListKeyRingsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListKeyRingsResponse)
}
ListKeyRingsResponse::ListKeyRingsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  key_rings_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListKeyRingsResponse)
}
ListKeyRingsResponse::ListKeyRingsResponse(const ListKeyRingsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_rings_(from.key_rings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListKeyRingsResponse)
}

void ListKeyRingsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

ListKeyRingsResponse::~ListKeyRingsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListKeyRingsResponse)
  SharedDtor();
}

void ListKeyRingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListKeyRingsResponse::ArenaDtor(void* object) {
  ListKeyRingsResponse* _this = reinterpret_cast< ListKeyRingsResponse* >(object);
  (void)_this;
}
void ListKeyRingsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListKeyRingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListKeyRingsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListKeyRingsResponse& ListKeyRingsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListKeyRingsResponse.base);
  return *internal_default_instance();
}


void ListKeyRingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListKeyRingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_rings_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  total_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListKeyRingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListKeyRingsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key_rings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListKeyRingsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListKeyRingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListKeyRingsResponse)
  return false;
#undef DO_
}

void ListKeyRingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListKeyRingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_rings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->key_rings(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListKeyRingsResponse)
}

::google::protobuf::uint8* ListKeyRingsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListKeyRingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_rings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->key_rings(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListKeyRingsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListKeyRingsResponse)
  return target;
}

size_t ListKeyRingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListKeyRingsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->key_rings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key_rings(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListKeyRingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListKeyRingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListKeyRingsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListKeyRingsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListKeyRingsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListKeyRingsResponse)
    MergeFrom(*source);
  }
}

void ListKeyRingsResponse::MergeFrom(const ListKeyRingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListKeyRingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_rings_.MergeFrom(from.key_rings_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListKeyRingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListKeyRingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListKeyRingsResponse::CopyFrom(const ListKeyRingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListKeyRingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeyRingsResponse::IsInitialized() const {
  return true;
}

void ListKeyRingsResponse::Swap(ListKeyRingsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListKeyRingsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListKeyRingsResponse::UnsafeArenaSwap(ListKeyRingsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListKeyRingsResponse::InternalSwap(ListKeyRingsResponse* other) {
  using std::swap;
  CastToBase(&key_rings_)->InternalSwap(CastToBase(&other->key_rings_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListKeyRingsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListCryptoKeysResponse::InitAsDefaultInstance() {
}
void ListCryptoKeysResponse::clear_crypto_keys() {
  crypto_keys_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCryptoKeysResponse::kCryptoKeysFieldNumber;
const int ListCryptoKeysResponse::kNextPageTokenFieldNumber;
const int ListCryptoKeysResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCryptoKeysResponse::ListCryptoKeysResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListCryptoKeysResponse)
}
ListCryptoKeysResponse::ListCryptoKeysResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  crypto_keys_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListCryptoKeysResponse)
}
ListCryptoKeysResponse::ListCryptoKeysResponse(const ListCryptoKeysResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      crypto_keys_(from.crypto_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListCryptoKeysResponse)
}

void ListCryptoKeysResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

ListCryptoKeysResponse::~ListCryptoKeysResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListCryptoKeysResponse)
  SharedDtor();
}

void ListCryptoKeysResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCryptoKeysResponse::ArenaDtor(void* object) {
  ListCryptoKeysResponse* _this = reinterpret_cast< ListCryptoKeysResponse* >(object);
  (void)_this;
}
void ListCryptoKeysResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListCryptoKeysResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListCryptoKeysResponse::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCryptoKeysResponse& ListCryptoKeysResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeysResponse.base);
  return *internal_default_instance();
}


void ListCryptoKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crypto_keys_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  total_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListCryptoKeysResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_crypto_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListCryptoKeysResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListCryptoKeysResponse)
  return false;
#undef DO_
}

void ListCryptoKeysResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crypto_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->crypto_keys(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListCryptoKeysResponse)
}

::google::protobuf::uint8* ListCryptoKeysResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crypto_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->crypto_keys(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListCryptoKeysResponse)
  return target;
}

size_t ListCryptoKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->crypto_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crypto_keys(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCryptoKeysResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCryptoKeysResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCryptoKeysResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListCryptoKeysResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListCryptoKeysResponse)
    MergeFrom(*source);
  }
}

void ListCryptoKeysResponse::MergeFrom(const ListCryptoKeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crypto_keys_.MergeFrom(from.crypto_keys_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListCryptoKeysResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCryptoKeysResponse::CopyFrom(const ListCryptoKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListCryptoKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCryptoKeysResponse::IsInitialized() const {
  return true;
}

void ListCryptoKeysResponse::Swap(ListCryptoKeysResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListCryptoKeysResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListCryptoKeysResponse::UnsafeArenaSwap(ListCryptoKeysResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListCryptoKeysResponse::InternalSwap(ListCryptoKeysResponse* other) {
  using std::swap;
  CastToBase(&crypto_keys_)->InternalSwap(CastToBase(&other->crypto_keys_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListCryptoKeysResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListCryptoKeyVersionsResponse::InitAsDefaultInstance() {
}
void ListCryptoKeyVersionsResponse::clear_crypto_key_versions() {
  crypto_key_versions_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListCryptoKeyVersionsResponse::kCryptoKeyVersionsFieldNumber;
const int ListCryptoKeyVersionsResponse::kNextPageTokenFieldNumber;
const int ListCryptoKeyVersionsResponse::kTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListCryptoKeyVersionsResponse::ListCryptoKeyVersionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
}
ListCryptoKeyVersionsResponse::ListCryptoKeyVersionsResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  crypto_key_versions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
}
ListCryptoKeyVersionsResponse::ListCryptoKeyVersionsResponse(const ListCryptoKeyVersionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      crypto_key_versions_(from.crypto_key_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token(),
      GetArenaNoVirtual());
  }
  total_size_ = from.total_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
}

void ListCryptoKeyVersionsResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_size_ = 0;
}

ListCryptoKeyVersionsResponse::~ListCryptoKeyVersionsResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  SharedDtor();
}

void ListCryptoKeyVersionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListCryptoKeyVersionsResponse::ArenaDtor(void* object) {
  ListCryptoKeyVersionsResponse* _this = reinterpret_cast< ListCryptoKeyVersionsResponse* >(object);
  (void)_this;
}
void ListCryptoKeyVersionsResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void ListCryptoKeyVersionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListCryptoKeyVersionsResponse::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListCryptoKeyVersionsResponse& ListCryptoKeyVersionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_ListCryptoKeyVersionsResponse.base);
  return *internal_default_instance();
}


void ListCryptoKeyVersionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crypto_key_versions_.Clear();
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  total_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListCryptoKeyVersionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_crypto_key_versions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  return false;
#undef DO_
}

void ListCryptoKeyVersionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crypto_key_versions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->crypto_key_versions(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
}

::google::protobuf::uint8* ListCryptoKeyVersionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crypto_key_versions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->crypto_key_versions(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  return target;
}

size_t ListCryptoKeyVersionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->crypto_key_versions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crypto_key_versions(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  // int32 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCryptoKeyVersionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCryptoKeyVersionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListCryptoKeyVersionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
    MergeFrom(*source);
  }
}

void ListCryptoKeyVersionsResponse::MergeFrom(const ListCryptoKeyVersionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crypto_key_versions_.MergeFrom(from.crypto_key_versions_);
  if (from.next_page_token().size() > 0) {
    set_next_page_token(from.next_page_token());
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void ListCryptoKeyVersionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCryptoKeyVersionsResponse::CopyFrom(const ListCryptoKeyVersionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCryptoKeyVersionsResponse::IsInitialized() const {
  return true;
}

void ListCryptoKeyVersionsResponse::Swap(ListCryptoKeyVersionsResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ListCryptoKeyVersionsResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ListCryptoKeyVersionsResponse::UnsafeArenaSwap(ListCryptoKeyVersionsResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ListCryptoKeyVersionsResponse::InternalSwap(ListCryptoKeyVersionsResponse* other) {
  using std::swap;
  CastToBase(&crypto_key_versions_)->InternalSwap(CastToBase(&other->crypto_key_versions_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListCryptoKeyVersionsResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetKeyRingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetKeyRingRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetKeyRingRequest::GetKeyRingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetKeyRingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.GetKeyRingRequest)
}
GetKeyRingRequest::GetKeyRingRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetKeyRingRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.GetKeyRingRequest)
}
GetKeyRingRequest::GetKeyRingRequest(const GetKeyRingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.GetKeyRingRequest)
}

void GetKeyRingRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetKeyRingRequest::~GetKeyRingRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.GetKeyRingRequest)
  SharedDtor();
}

void GetKeyRingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetKeyRingRequest::ArenaDtor(void* object) {
  GetKeyRingRequest* _this = reinterpret_cast< GetKeyRingRequest* >(object);
  (void)_this;
}
void GetKeyRingRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetKeyRingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetKeyRingRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetKeyRingRequest& GetKeyRingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetKeyRingRequest.base);
  return *internal_default_instance();
}


void GetKeyRingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.GetKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetKeyRingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.GetKeyRingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.GetKeyRingRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.GetKeyRingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.GetKeyRingRequest)
  return false;
#undef DO_
}

void GetKeyRingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.GetKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetKeyRingRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.GetKeyRingRequest)
}

::google::protobuf::uint8* GetKeyRingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.GetKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetKeyRingRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.GetKeyRingRequest)
  return target;
}

size_t GetKeyRingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.GetKeyRingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetKeyRingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.GetKeyRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetKeyRingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetKeyRingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.GetKeyRingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.GetKeyRingRequest)
    MergeFrom(*source);
  }
}

void GetKeyRingRequest::MergeFrom(const GetKeyRingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.GetKeyRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetKeyRingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.GetKeyRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetKeyRingRequest::CopyFrom(const GetKeyRingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.GetKeyRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKeyRingRequest::IsInitialized() const {
  return true;
}

void GetKeyRingRequest::Swap(GetKeyRingRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetKeyRingRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetKeyRingRequest::UnsafeArenaSwap(GetKeyRingRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetKeyRingRequest::InternalSwap(GetKeyRingRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetKeyRingRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCryptoKeyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCryptoKeyRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCryptoKeyRequest::GetCryptoKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.GetCryptoKeyRequest)
}
GetCryptoKeyRequest::GetCryptoKeyRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.GetCryptoKeyRequest)
}
GetCryptoKeyRequest::GetCryptoKeyRequest(const GetCryptoKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.GetCryptoKeyRequest)
}

void GetCryptoKeyRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetCryptoKeyRequest::~GetCryptoKeyRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.GetCryptoKeyRequest)
  SharedDtor();
}

void GetCryptoKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetCryptoKeyRequest::ArenaDtor(void* object) {
  GetCryptoKeyRequest* _this = reinterpret_cast< GetCryptoKeyRequest* >(object);
  (void)_this;
}
void GetCryptoKeyRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetCryptoKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetCryptoKeyRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCryptoKeyRequest& GetCryptoKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyRequest.base);
  return *internal_default_instance();
}


void GetCryptoKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetCryptoKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.GetCryptoKeyRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.GetCryptoKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.GetCryptoKeyRequest)
  return false;
#undef DO_
}

void GetCryptoKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetCryptoKeyRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.GetCryptoKeyRequest)
}

::google::protobuf::uint8* GetCryptoKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetCryptoKeyRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.GetCryptoKeyRequest)
  return target;
}

size_t GetCryptoKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCryptoKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCryptoKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCryptoKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.GetCryptoKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.GetCryptoKeyRequest)
    MergeFrom(*source);
  }
}

void GetCryptoKeyRequest::MergeFrom(const GetCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetCryptoKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCryptoKeyRequest::CopyFrom(const GetCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.GetCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCryptoKeyRequest::IsInitialized() const {
  return true;
}

void GetCryptoKeyRequest::Swap(GetCryptoKeyRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetCryptoKeyRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetCryptoKeyRequest::UnsafeArenaSwap(GetCryptoKeyRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetCryptoKeyRequest::InternalSwap(GetCryptoKeyRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetCryptoKeyRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCryptoKeyVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCryptoKeyVersionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCryptoKeyVersionRequest::GetCryptoKeyVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
}
GetCryptoKeyVersionRequest::GetCryptoKeyVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
}
GetCryptoKeyVersionRequest::GetCryptoKeyVersionRequest(const GetCryptoKeyVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
}

void GetCryptoKeyVersionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetCryptoKeyVersionRequest::~GetCryptoKeyVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  SharedDtor();
}

void GetCryptoKeyVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetCryptoKeyVersionRequest::ArenaDtor(void* object) {
  GetCryptoKeyVersionRequest* _this = reinterpret_cast< GetCryptoKeyVersionRequest* >(object);
  (void)_this;
}
void GetCryptoKeyVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void GetCryptoKeyVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetCryptoKeyVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCryptoKeyVersionRequest& GetCryptoKeyVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_GetCryptoKeyVersionRequest.base);
  return *internal_default_instance();
}


void GetCryptoKeyVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GetCryptoKeyVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.GetCryptoKeyVersionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  return false;
#undef DO_
}

void GetCryptoKeyVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetCryptoKeyVersionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
}

::google::protobuf::uint8* GetCryptoKeyVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.GetCryptoKeyVersionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  return target;
}

size_t GetCryptoKeyVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCryptoKeyVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCryptoKeyVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCryptoKeyVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
    MergeFrom(*source);
  }
}

void GetCryptoKeyVersionRequest::MergeFrom(const GetCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void GetCryptoKeyVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCryptoKeyVersionRequest::CopyFrom(const GetCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCryptoKeyVersionRequest::IsInitialized() const {
  return true;
}

void GetCryptoKeyVersionRequest::Swap(GetCryptoKeyVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetCryptoKeyVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetCryptoKeyVersionRequest::UnsafeArenaSwap(GetCryptoKeyVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetCryptoKeyVersionRequest::InternalSwap(GetCryptoKeyVersionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetCryptoKeyVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateKeyRingRequest::InitAsDefaultInstance() {
  ::google::cloud::kms::v1::_CreateKeyRingRequest_default_instance_._instance.get_mutable()->key_ring_ = const_cast< ::google::cloud::kms::v1::KeyRing*>(
      ::google::cloud::kms::v1::KeyRing::internal_default_instance());
}
void CreateKeyRingRequest::unsafe_arena_set_allocated_key_ring(
    ::google::cloud::kms::v1::KeyRing* key_ring) {
  if (GetArenaNoVirtual() == NULL) {
    delete key_ring_;
  }
  key_ring_ = key_ring;
  if (key_ring) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
}
void CreateKeyRingRequest::clear_key_ring() {
  if (GetArenaNoVirtual() == NULL && key_ring_ != NULL) {
    delete key_ring_;
  }
  key_ring_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateKeyRingRequest::kParentFieldNumber;
const int CreateKeyRingRequest::kKeyRingIdFieldNumber;
const int CreateKeyRingRequest::kKeyRingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateKeyRingRequest::CreateKeyRingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateKeyRingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.CreateKeyRingRequest)
}
CreateKeyRingRequest::CreateKeyRingRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateKeyRingRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.CreateKeyRingRequest)
}
CreateKeyRingRequest::CreateKeyRingRequest(const CreateKeyRingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  key_ring_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_ring_id().size() > 0) {
    key_ring_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_ring_id(),
      GetArenaNoVirtual());
  }
  if (from.has_key_ring()) {
    key_ring_ = new ::google::cloud::kms::v1::KeyRing(*from.key_ring_);
  } else {
    key_ring_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.CreateKeyRingRequest)
}

void CreateKeyRingRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ring_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ring_ = NULL;
}

CreateKeyRingRequest::~CreateKeyRingRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.CreateKeyRingRequest)
  SharedDtor();
}

void CreateKeyRingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ring_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_ring_;
}

void CreateKeyRingRequest::ArenaDtor(void* object) {
  CreateKeyRingRequest* _this = reinterpret_cast< CreateKeyRingRequest* >(object);
  (void)_this;
}
void CreateKeyRingRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateKeyRingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateKeyRingRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateKeyRingRequest& CreateKeyRingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateKeyRingRequest.base);
  return *internal_default_instance();
}


void CreateKeyRingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.CreateKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  key_ring_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && key_ring_ != NULL) {
    delete key_ring_;
  }
  key_ring_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateKeyRingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.CreateKeyRingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.CreateKeyRingRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key_ring_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_ring_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key_ring_id().data(), static_cast<int>(this->key_ring_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.kms.v1.KeyRing key_ring = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key_ring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.CreateKeyRingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.CreateKeyRingRequest)
  return false;
#undef DO_
}

void CreateKeyRingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.CreateKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateKeyRingRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string key_ring_id = 2;
  if (this->key_ring_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_ring_id().data(), static_cast<int>(this->key_ring_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key_ring_id(), output);
  }

  // .google.cloud.kms.v1.KeyRing key_ring = 3;
  if (this->has_key_ring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_key_ring(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.CreateKeyRingRequest)
}

::google::protobuf::uint8* CreateKeyRingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.CreateKeyRingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateKeyRingRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string key_ring_id = 2;
  if (this->key_ring_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key_ring_id().data(), static_cast<int>(this->key_ring_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key_ring_id(), target);
  }

  // .google.cloud.kms.v1.KeyRing key_ring = 3;
  if (this->has_key_ring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_key_ring(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.CreateKeyRingRequest)
  return target;
}

size_t CreateKeyRingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.CreateKeyRingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string key_ring_id = 2;
  if (this->key_ring_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_ring_id());
  }

  // .google.cloud.kms.v1.KeyRing key_ring = 3;
  if (this->has_key_ring()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_ring_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateKeyRingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.CreateKeyRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateKeyRingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateKeyRingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.CreateKeyRingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.CreateKeyRingRequest)
    MergeFrom(*source);
  }
}

void CreateKeyRingRequest::MergeFrom(const CreateKeyRingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.CreateKeyRingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.key_ring_id().size() > 0) {
    set_key_ring_id(from.key_ring_id());
  }
  if (from.has_key_ring()) {
    mutable_key_ring()->::google::cloud::kms::v1::KeyRing::MergeFrom(from.key_ring());
  }
}

void CreateKeyRingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.CreateKeyRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateKeyRingRequest::CopyFrom(const CreateKeyRingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.CreateKeyRingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyRingRequest::IsInitialized() const {
  return true;
}

void CreateKeyRingRequest::Swap(CreateKeyRingRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateKeyRingRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateKeyRingRequest::UnsafeArenaSwap(CreateKeyRingRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateKeyRingRequest::InternalSwap(CreateKeyRingRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_ring_id_.Swap(&other->key_ring_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_ring_, other->key_ring_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateKeyRingRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateCryptoKeyRequest::InitAsDefaultInstance() {
  ::google::cloud::kms::v1::_CreateCryptoKeyRequest_default_instance_._instance.get_mutable()->crypto_key_ = const_cast< ::google::cloud::kms::v1::CryptoKey*>(
      ::google::cloud::kms::v1::CryptoKey::internal_default_instance());
}
void CreateCryptoKeyRequest::unsafe_arena_set_allocated_crypto_key(
    ::google::cloud::kms::v1::CryptoKey* crypto_key) {
  if (GetArenaNoVirtual() == NULL) {
    delete crypto_key_;
  }
  crypto_key_ = crypto_key;
  if (crypto_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
}
void CreateCryptoKeyRequest::clear_crypto_key() {
  if (GetArenaNoVirtual() == NULL && crypto_key_ != NULL) {
    delete crypto_key_;
  }
  crypto_key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCryptoKeyRequest::kParentFieldNumber;
const int CreateCryptoKeyRequest::kCryptoKeyIdFieldNumber;
const int CreateCryptoKeyRequest::kCryptoKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCryptoKeyRequest::CreateCryptoKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.CreateCryptoKeyRequest)
}
CreateCryptoKeyRequest::CreateCryptoKeyRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.CreateCryptoKeyRequest)
}
CreateCryptoKeyRequest::CreateCryptoKeyRequest(const CreateCryptoKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  crypto_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crypto_key_id().size() > 0) {
    crypto_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_key_id(),
      GetArenaNoVirtual());
  }
  if (from.has_crypto_key()) {
    crypto_key_ = new ::google::cloud::kms::v1::CryptoKey(*from.crypto_key_);
  } else {
    crypto_key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.CreateCryptoKeyRequest)
}

void CreateCryptoKeyRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_ = NULL;
}

CreateCryptoKeyRequest::~CreateCryptoKeyRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.CreateCryptoKeyRequest)
  SharedDtor();
}

void CreateCryptoKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete crypto_key_;
}

void CreateCryptoKeyRequest::ArenaDtor(void* object) {
  CreateCryptoKeyRequest* _this = reinterpret_cast< CreateCryptoKeyRequest* >(object);
  (void)_this;
}
void CreateCryptoKeyRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateCryptoKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateCryptoKeyRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateCryptoKeyRequest& CreateCryptoKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyRequest.base);
  return *internal_default_instance();
}


void CreateCryptoKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  crypto_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && crypto_key_ != NULL) {
    delete crypto_key_;
  }
  crypto_key_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateCryptoKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.CreateCryptoKeyRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crypto_key_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crypto_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crypto_key_id().data(), static_cast<int>(this->crypto_key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.kms.v1.CryptoKey crypto_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crypto_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.CreateCryptoKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.CreateCryptoKeyRequest)
  return false;
#undef DO_
}

void CreateCryptoKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string crypto_key_id = 2;
  if (this->crypto_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key_id().data(), static_cast<int>(this->crypto_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->crypto_key_id(), output);
  }

  // .google.cloud.kms.v1.CryptoKey crypto_key = 3;
  if (this->has_crypto_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_crypto_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.CreateCryptoKeyRequest)
}

::google::protobuf::uint8* CreateCryptoKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string crypto_key_id = 2;
  if (this->crypto_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key_id().data(), static_cast<int>(this->crypto_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->crypto_key_id(), target);
  }

  // .google.cloud.kms.v1.CryptoKey crypto_key = 3;
  if (this->has_crypto_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_crypto_key(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.CreateCryptoKeyRequest)
  return target;
}

size_t CreateCryptoKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string crypto_key_id = 2;
  if (this->crypto_key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crypto_key_id());
  }

  // .google.cloud.kms.v1.CryptoKey crypto_key = 3;
  if (this->has_crypto_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crypto_key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCryptoKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCryptoKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCryptoKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.CreateCryptoKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.CreateCryptoKeyRequest)
    MergeFrom(*source);
  }
}

void CreateCryptoKeyRequest::MergeFrom(const CreateCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.crypto_key_id().size() > 0) {
    set_crypto_key_id(from.crypto_key_id());
  }
  if (from.has_crypto_key()) {
    mutable_crypto_key()->::google::cloud::kms::v1::CryptoKey::MergeFrom(from.crypto_key());
  }
}

void CreateCryptoKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCryptoKeyRequest::CopyFrom(const CreateCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.CreateCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCryptoKeyRequest::IsInitialized() const {
  return true;
}

void CreateCryptoKeyRequest::Swap(CreateCryptoKeyRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateCryptoKeyRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateCryptoKeyRequest::UnsafeArenaSwap(CreateCryptoKeyRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateCryptoKeyRequest::InternalSwap(CreateCryptoKeyRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crypto_key_id_.Swap(&other->crypto_key_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(crypto_key_, other->crypto_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateCryptoKeyRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateCryptoKeyVersionRequest::InitAsDefaultInstance() {
  ::google::cloud::kms::v1::_CreateCryptoKeyVersionRequest_default_instance_._instance.get_mutable()->crypto_key_version_ = const_cast< ::google::cloud::kms::v1::CryptoKeyVersion*>(
      ::google::cloud::kms::v1::CryptoKeyVersion::internal_default_instance());
}
void CreateCryptoKeyVersionRequest::unsafe_arena_set_allocated_crypto_key_version(
    ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = crypto_key_version;
  if (crypto_key_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
}
void CreateCryptoKeyVersionRequest::clear_crypto_key_version() {
  if (GetArenaNoVirtual() == NULL && crypto_key_version_ != NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCryptoKeyVersionRequest::kParentFieldNumber;
const int CreateCryptoKeyVersionRequest::kCryptoKeyVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCryptoKeyVersionRequest::CreateCryptoKeyVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
}
CreateCryptoKeyVersionRequest::CreateCryptoKeyVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
}
CreateCryptoKeyVersionRequest::CreateCryptoKeyVersionRequest(const CreateCryptoKeyVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent(),
      GetArenaNoVirtual());
  }
  if (from.has_crypto_key_version()) {
    crypto_key_version_ = new ::google::cloud::kms::v1::CryptoKeyVersion(*from.crypto_key_version_);
  } else {
    crypto_key_version_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
}

void CreateCryptoKeyVersionRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_version_ = NULL;
}

CreateCryptoKeyVersionRequest::~CreateCryptoKeyVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  SharedDtor();
}

void CreateCryptoKeyVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete crypto_key_version_;
}

void CreateCryptoKeyVersionRequest::ArenaDtor(void* object) {
  CreateCryptoKeyVersionRequest* _this = reinterpret_cast< CreateCryptoKeyVersionRequest* >(object);
  (void)_this;
}
void CreateCryptoKeyVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void CreateCryptoKeyVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateCryptoKeyVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateCryptoKeyVersionRequest& CreateCryptoKeyVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_CreateCryptoKeyVersionRequest.base);
  return *internal_default_instance();
}


void CreateCryptoKeyVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && crypto_key_version_ != NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateCryptoKeyVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crypto_key_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  return false;
#undef DO_
}

void CreateCryptoKeyVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
  if (this->has_crypto_key_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_crypto_key_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
}

::google::protobuf::uint8* CreateCryptoKeyVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
  if (this->has_crypto_key_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_crypto_key_version(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  return target;
}

size_t CreateCryptoKeyVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
  if (this->has_crypto_key_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crypto_key_version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCryptoKeyVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCryptoKeyVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCryptoKeyVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
    MergeFrom(*source);
  }
}

void CreateCryptoKeyVersionRequest::MergeFrom(const CreateCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    set_parent(from.parent());
  }
  if (from.has_crypto_key_version()) {
    mutable_crypto_key_version()->::google::cloud::kms::v1::CryptoKeyVersion::MergeFrom(from.crypto_key_version());
  }
}

void CreateCryptoKeyVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCryptoKeyVersionRequest::CopyFrom(const CreateCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCryptoKeyVersionRequest::IsInitialized() const {
  return true;
}

void CreateCryptoKeyVersionRequest::Swap(CreateCryptoKeyVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CreateCryptoKeyVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CreateCryptoKeyVersionRequest::UnsafeArenaSwap(CreateCryptoKeyVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CreateCryptoKeyVersionRequest::InternalSwap(CreateCryptoKeyVersionRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(crypto_key_version_, other->crypto_key_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateCryptoKeyVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateCryptoKeyRequest::InitAsDefaultInstance() {
  ::google::cloud::kms::v1::_UpdateCryptoKeyRequest_default_instance_._instance.get_mutable()->crypto_key_ = const_cast< ::google::cloud::kms::v1::CryptoKey*>(
      ::google::cloud::kms::v1::CryptoKey::internal_default_instance());
  ::google::cloud::kms::v1::_UpdateCryptoKeyRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateCryptoKeyRequest::unsafe_arena_set_allocated_crypto_key(
    ::google::cloud::kms::v1::CryptoKey* crypto_key) {
  if (GetArenaNoVirtual() == NULL) {
    delete crypto_key_;
  }
  crypto_key_ = crypto_key;
  if (crypto_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
}
void UpdateCryptoKeyRequest::clear_crypto_key() {
  if (GetArenaNoVirtual() == NULL && crypto_key_ != NULL) {
    delete crypto_key_;
  }
  crypto_key_ = NULL;
}
void UpdateCryptoKeyRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
}
void UpdateCryptoKeyRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCryptoKeyRequest::kCryptoKeyFieldNumber;
const int UpdateCryptoKeyRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCryptoKeyRequest::UpdateCryptoKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.UpdateCryptoKeyRequest)
}
UpdateCryptoKeyRequest::UpdateCryptoKeyRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.UpdateCryptoKeyRequest)
}
UpdateCryptoKeyRequest::UpdateCryptoKeyRequest(const UpdateCryptoKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_crypto_key()) {
    crypto_key_ = new ::google::cloud::kms::v1::CryptoKey(*from.crypto_key_);
  } else {
    crypto_key_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.UpdateCryptoKeyRequest)
}

void UpdateCryptoKeyRequest::SharedCtor() {
  ::memset(&crypto_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&crypto_key_)) + sizeof(update_mask_));
}

UpdateCryptoKeyRequest::~UpdateCryptoKeyRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  SharedDtor();
}

void UpdateCryptoKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete crypto_key_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCryptoKeyRequest::ArenaDtor(void* object) {
  UpdateCryptoKeyRequest* _this = reinterpret_cast< UpdateCryptoKeyRequest* >(object);
  (void)_this;
}
void UpdateCryptoKeyRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateCryptoKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateCryptoKeyRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCryptoKeyRequest& UpdateCryptoKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyRequest.base);
  return *internal_default_instance();
}


void UpdateCryptoKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && crypto_key_ != NULL) {
    delete crypto_key_;
  }
  crypto_key_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateCryptoKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.kms.v1.CryptoKey crypto_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crypto_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  return false;
#undef DO_
}

void UpdateCryptoKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.kms.v1.CryptoKey crypto_key = 1;
  if (this->has_crypto_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_crypto_key(), output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.UpdateCryptoKeyRequest)
}

::google::protobuf::uint8* UpdateCryptoKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.kms.v1.CryptoKey crypto_key = 1;
  if (this->has_crypto_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_crypto_key(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  return target;
}

size_t UpdateCryptoKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.kms.v1.CryptoKey crypto_key = 1;
  if (this->has_crypto_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crypto_key_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCryptoKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCryptoKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCryptoKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.UpdateCryptoKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.UpdateCryptoKeyRequest)
    MergeFrom(*source);
  }
}

void UpdateCryptoKeyRequest::MergeFrom(const UpdateCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crypto_key()) {
    mutable_crypto_key()->::google::cloud::kms::v1::CryptoKey::MergeFrom(from.crypto_key());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateCryptoKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCryptoKeyRequest::CopyFrom(const UpdateCryptoKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCryptoKeyRequest::IsInitialized() const {
  return true;
}

void UpdateCryptoKeyRequest::Swap(UpdateCryptoKeyRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateCryptoKeyRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateCryptoKeyRequest::UnsafeArenaSwap(UpdateCryptoKeyRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateCryptoKeyRequest::InternalSwap(UpdateCryptoKeyRequest* other) {
  using std::swap;
  swap(crypto_key_, other->crypto_key_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateCryptoKeyRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateCryptoKeyVersionRequest::InitAsDefaultInstance() {
  ::google::cloud::kms::v1::_UpdateCryptoKeyVersionRequest_default_instance_._instance.get_mutable()->crypto_key_version_ = const_cast< ::google::cloud::kms::v1::CryptoKeyVersion*>(
      ::google::cloud::kms::v1::CryptoKeyVersion::internal_default_instance());
  ::google::cloud::kms::v1::_UpdateCryptoKeyVersionRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
}
void UpdateCryptoKeyVersionRequest::unsafe_arena_set_allocated_crypto_key_version(
    ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version) {
  if (GetArenaNoVirtual() == NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = crypto_key_version;
  if (crypto_key_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
}
void UpdateCryptoKeyVersionRequest::clear_crypto_key_version() {
  if (GetArenaNoVirtual() == NULL && crypto_key_version_ != NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = NULL;
}
void UpdateCryptoKeyVersionRequest::unsafe_arena_set_allocated_update_mask(
    ::google::protobuf::FieldMask* update_mask) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_mask_;
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
}
void UpdateCryptoKeyVersionRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCryptoKeyVersionRequest::kCryptoKeyVersionFieldNumber;
const int UpdateCryptoKeyVersionRequest::kUpdateMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCryptoKeyVersionRequest::UpdateCryptoKeyVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
}
UpdateCryptoKeyVersionRequest::UpdateCryptoKeyVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
}
UpdateCryptoKeyVersionRequest::UpdateCryptoKeyVersionRequest(const UpdateCryptoKeyVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_crypto_key_version()) {
    crypto_key_version_ = new ::google::cloud::kms::v1::CryptoKeyVersion(*from.crypto_key_version_);
  } else {
    crypto_key_version_ = NULL;
  }
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
}

void UpdateCryptoKeyVersionRequest::SharedCtor() {
  ::memset(&crypto_key_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&crypto_key_version_)) + sizeof(update_mask_));
}

UpdateCryptoKeyVersionRequest::~UpdateCryptoKeyVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  SharedDtor();
}

void UpdateCryptoKeyVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete crypto_key_version_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCryptoKeyVersionRequest::ArenaDtor(void* object) {
  UpdateCryptoKeyVersionRequest* _this = reinterpret_cast< UpdateCryptoKeyVersionRequest* >(object);
  (void)_this;
}
void UpdateCryptoKeyVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateCryptoKeyVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateCryptoKeyVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCryptoKeyVersionRequest& UpdateCryptoKeyVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyVersionRequest.base);
  return *internal_default_instance();
}


void UpdateCryptoKeyVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && crypto_key_version_ != NULL) {
    delete crypto_key_version_;
  }
  crypto_key_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateCryptoKeyVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_crypto_key_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FieldMask update_mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  return false;
#undef DO_
}

void UpdateCryptoKeyVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
  if (this->has_crypto_key_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_crypto_key_version(), output);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_update_mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
}

::google::protobuf::uint8* UpdateCryptoKeyVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
  if (this->has_crypto_key_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_crypto_key_version(), deterministic, target);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_update_mask(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  return target;
}

size_t UpdateCryptoKeyVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
  if (this->has_crypto_key_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *crypto_key_version_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCryptoKeyVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCryptoKeyVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCryptoKeyVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
    MergeFrom(*source);
  }
}

void UpdateCryptoKeyVersionRequest::MergeFrom(const UpdateCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crypto_key_version()) {
    mutable_crypto_key_version()->::google::cloud::kms::v1::CryptoKeyVersion::MergeFrom(from.crypto_key_version());
  }
  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
}

void UpdateCryptoKeyVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCryptoKeyVersionRequest::CopyFrom(const UpdateCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCryptoKeyVersionRequest::IsInitialized() const {
  return true;
}

void UpdateCryptoKeyVersionRequest::Swap(UpdateCryptoKeyVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateCryptoKeyVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateCryptoKeyVersionRequest::UnsafeArenaSwap(UpdateCryptoKeyVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateCryptoKeyVersionRequest::InternalSwap(UpdateCryptoKeyVersionRequest* other) {
  using std::swap;
  swap(crypto_key_version_, other->crypto_key_version_);
  swap(update_mask_, other->update_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateCryptoKeyVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EncryptRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptRequest::kNameFieldNumber;
const int EncryptRequest::kPlaintextFieldNumber;
const int EncryptRequest::kAdditionalAuthenticatedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptRequest::EncryptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.EncryptRequest)
}
EncryptRequest::EncryptRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.EncryptRequest)
}
EncryptRequest::EncryptRequest(const EncryptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  plaintext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plaintext().size() > 0) {
    plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintext(),
      GetArenaNoVirtual());
  }
  additional_authenticated_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.additional_authenticated_data().size() > 0) {
    additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.additional_authenticated_data(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.EncryptRequest)
}

void EncryptRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_authenticated_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptRequest::~EncryptRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.EncryptRequest)
  SharedDtor();
}

void EncryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_authenticated_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptRequest::ArenaDtor(void* object) {
  EncryptRequest* _this = reinterpret_cast< EncryptRequest* >(object);
  (void)_this;
}
void EncryptRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void EncryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EncryptRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EncryptRequest& EncryptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptRequest.base);
  return *internal_default_instance();
}


void EncryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  plaintext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  additional_authenticated_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool EncryptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.EncryptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.EncryptRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes plaintext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plaintext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes additional_authenticated_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_additional_authenticated_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.EncryptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.EncryptRequest)
  return false;
#undef DO_
}

void EncryptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.EncryptRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes plaintext = 2;
  if (this->plaintext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plaintext(), output);
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->additional_authenticated_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.EncryptRequest)
}

::google::protobuf::uint8* EncryptRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.EncryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.EncryptRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes plaintext = 2;
  if (this->plaintext().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plaintext(), target);
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->additional_authenticated_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.EncryptRequest)
  return target;
}

size_t EncryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.EncryptRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes plaintext = 2;
  if (this->plaintext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plaintext());
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->additional_authenticated_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EncryptRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.EncryptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.EncryptRequest)
    MergeFrom(*source);
  }
}

void EncryptRequest::MergeFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.EncryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.plaintext().size() > 0) {
    set_plaintext(from.plaintext());
  }
  if (from.additional_authenticated_data().size() > 0) {
    set_additional_authenticated_data(from.additional_authenticated_data());
  }
}

void EncryptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptRequest::CopyFrom(const EncryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.EncryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptRequest::IsInitialized() const {
  return true;
}

void EncryptRequest::Swap(EncryptRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EncryptRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EncryptRequest::UnsafeArenaSwap(EncryptRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EncryptRequest::InternalSwap(EncryptRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plaintext_.Swap(&other->plaintext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  additional_authenticated_data_.Swap(&other->additional_authenticated_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EncryptRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecryptRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptRequest::kNameFieldNumber;
const int DecryptRequest::kCiphertextFieldNumber;
const int DecryptRequest::kAdditionalAuthenticatedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptRequest::DecryptRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.DecryptRequest)
}
DecryptRequest::DecryptRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.DecryptRequest)
}
DecryptRequest::DecryptRequest(const DecryptRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ciphertext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphertext().size() > 0) {
    ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphertext(),
      GetArenaNoVirtual());
  }
  additional_authenticated_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.additional_authenticated_data().size() > 0) {
    additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.additional_authenticated_data(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.DecryptRequest)
}

void DecryptRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphertext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_authenticated_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptRequest::~DecryptRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.DecryptRequest)
  SharedDtor();
}

void DecryptRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphertext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_authenticated_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptRequest::ArenaDtor(void* object) {
  DecryptRequest* _this = reinterpret_cast< DecryptRequest* >(object);
  (void)_this;
}
void DecryptRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DecryptRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecryptRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecryptRequest& DecryptRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptRequest.base);
  return *internal_default_instance();
}


void DecryptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ciphertext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  additional_authenticated_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DecryptRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.DecryptRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.DecryptRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ciphertext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphertext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes additional_authenticated_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_additional_authenticated_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.DecryptRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.DecryptRequest)
  return false;
#undef DO_
}

void DecryptRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.DecryptRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ciphertext(), output);
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->additional_authenticated_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.DecryptRequest)
}

::google::protobuf::uint8* DecryptRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.DecryptRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.DecryptRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ciphertext(), target);
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->additional_authenticated_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.DecryptRequest)
  return target;
}

size_t DecryptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.DecryptRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphertext());
  }

  // bytes additional_authenticated_data = 3;
  if (this->additional_authenticated_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->additional_authenticated_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecryptRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.DecryptRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.DecryptRequest)
    MergeFrom(*source);
  }
}

void DecryptRequest::MergeFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.DecryptRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.ciphertext().size() > 0) {
    set_ciphertext(from.ciphertext());
  }
  if (from.additional_authenticated_data().size() > 0) {
    set_additional_authenticated_data(from.additional_authenticated_data());
  }
}

void DecryptRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptRequest::CopyFrom(const DecryptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.DecryptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptRequest::IsInitialized() const {
  return true;
}

void DecryptRequest::Swap(DecryptRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DecryptRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DecryptRequest::UnsafeArenaSwap(DecryptRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DecryptRequest::InternalSwap(DecryptRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphertext_.Swap(&other->ciphertext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  additional_authenticated_data_.Swap(&other->additional_authenticated_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecryptRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecryptResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecryptResponse::kPlaintextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecryptResponse::DecryptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.DecryptResponse)
}
DecryptResponse::DecryptResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.DecryptResponse)
}
DecryptResponse::DecryptResponse(const DecryptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plaintext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plaintext().size() > 0) {
    plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintext(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.DecryptResponse)
}

void DecryptResponse::SharedCtor() {
  plaintext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecryptResponse::~DecryptResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.DecryptResponse)
  SharedDtor();
}

void DecryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  plaintext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecryptResponse::ArenaDtor(void* object) {
  DecryptResponse* _this = reinterpret_cast< DecryptResponse* >(object);
  (void)_this;
}
void DecryptResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DecryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecryptResponse::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecryptResponse& DecryptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DecryptResponse.base);
  return *internal_default_instance();
}


void DecryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plaintext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DecryptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.DecryptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes plaintext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plaintext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.DecryptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.DecryptResponse)
  return false;
#undef DO_
}

void DecryptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes plaintext = 1;
  if (this->plaintext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->plaintext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.DecryptResponse)
}

::google::protobuf::uint8* DecryptResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.DecryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes plaintext = 1;
  if (this->plaintext().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->plaintext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.DecryptResponse)
  return target;
}

size_t DecryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.DecryptResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes plaintext = 1;
  if (this->plaintext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plaintext());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecryptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecryptResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecryptResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.DecryptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.DecryptResponse)
    MergeFrom(*source);
  }
}

void DecryptResponse::MergeFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.DecryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plaintext().size() > 0) {
    set_plaintext(from.plaintext());
  }
}

void DecryptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecryptResponse::CopyFrom(const DecryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.DecryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecryptResponse::IsInitialized() const {
  return true;
}

void DecryptResponse::Swap(DecryptResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DecryptResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DecryptResponse::UnsafeArenaSwap(DecryptResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DecryptResponse::InternalSwap(DecryptResponse* other) {
  using std::swap;
  plaintext_.Swap(&other->plaintext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecryptResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EncryptResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptResponse::kNameFieldNumber;
const int EncryptResponse::kCiphertextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptResponse::EncryptResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.EncryptResponse)
}
EncryptResponse::EncryptResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.EncryptResponse)
}
EncryptResponse::EncryptResponse(const EncryptResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ciphertext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ciphertext().size() > 0) {
    ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ciphertext(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.EncryptResponse)
}

void EncryptResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphertext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EncryptResponse::~EncryptResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.EncryptResponse)
  SharedDtor();
}

void EncryptResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ciphertext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptResponse::ArenaDtor(void* object) {
  EncryptResponse* _this = reinterpret_cast< EncryptResponse* >(object);
  (void)_this;
}
void EncryptResponse::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void EncryptResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EncryptResponse::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EncryptResponse& EncryptResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_EncryptResponse.base);
  return *internal_default_instance();
}


void EncryptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ciphertext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool EncryptResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.EncryptResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.EncryptResponse.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ciphertext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ciphertext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.EncryptResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.EncryptResponse)
  return false;
#undef DO_
}

void EncryptResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.EncryptResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ciphertext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.EncryptResponse)
}

::google::protobuf::uint8* EncryptResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.EncryptResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.EncryptResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ciphertext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.EncryptResponse)
  return target;
}

size_t EncryptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.EncryptResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes ciphertext = 2;
  if (this->ciphertext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ciphertext());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EncryptResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EncryptResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.EncryptResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.EncryptResponse)
    MergeFrom(*source);
  }
}

void EncryptResponse::MergeFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.EncryptResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.ciphertext().size() > 0) {
    set_ciphertext(from.ciphertext());
  }
}

void EncryptResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptResponse::CopyFrom(const EncryptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.EncryptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptResponse::IsInitialized() const {
  return true;
}

void EncryptResponse::Swap(EncryptResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EncryptResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EncryptResponse::UnsafeArenaSwap(EncryptResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EncryptResponse::InternalSwap(EncryptResponse* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ciphertext_.Swap(&other->ciphertext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EncryptResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateCryptoKeyPrimaryVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCryptoKeyPrimaryVersionRequest::kNameFieldNumber;
const int UpdateCryptoKeyPrimaryVersionRequest::kCryptoKeyVersionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCryptoKeyPrimaryVersionRequest::UpdateCryptoKeyPrimaryVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyPrimaryVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
}
UpdateCryptoKeyPrimaryVersionRequest::UpdateCryptoKeyPrimaryVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyPrimaryVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
}
UpdateCryptoKeyPrimaryVersionRequest::UpdateCryptoKeyPrimaryVersionRequest(const UpdateCryptoKeyPrimaryVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  crypto_key_version_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crypto_key_version_id().size() > 0) {
    crypto_key_version_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_key_version_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
}

void UpdateCryptoKeyPrimaryVersionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_version_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateCryptoKeyPrimaryVersionRequest::~UpdateCryptoKeyPrimaryVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  SharedDtor();
}

void UpdateCryptoKeyPrimaryVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_version_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateCryptoKeyPrimaryVersionRequest::ArenaDtor(void* object) {
  UpdateCryptoKeyPrimaryVersionRequest* _this = reinterpret_cast< UpdateCryptoKeyPrimaryVersionRequest* >(object);
  (void)_this;
}
void UpdateCryptoKeyPrimaryVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void UpdateCryptoKeyPrimaryVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateCryptoKeyPrimaryVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCryptoKeyPrimaryVersionRequest& UpdateCryptoKeyPrimaryVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_UpdateCryptoKeyPrimaryVersionRequest.base);
  return *internal_default_instance();
}


void UpdateCryptoKeyPrimaryVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  crypto_key_version_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool UpdateCryptoKeyPrimaryVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crypto_key_version_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crypto_key_version_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crypto_key_version_id().data(), static_cast<int>(this->crypto_key_version_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  return false;
#undef DO_
}

void UpdateCryptoKeyPrimaryVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string crypto_key_version_id = 2;
  if (this->crypto_key_version_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key_version_id().data(), static_cast<int>(this->crypto_key_version_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->crypto_key_version_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
}

::google::protobuf::uint8* UpdateCryptoKeyPrimaryVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string crypto_key_version_id = 2;
  if (this->crypto_key_version_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key_version_id().data(), static_cast<int>(this->crypto_key_version_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->crypto_key_version_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  return target;
}

size_t UpdateCryptoKeyPrimaryVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string crypto_key_version_id = 2;
  if (this->crypto_key_version_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crypto_key_version_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCryptoKeyPrimaryVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCryptoKeyPrimaryVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCryptoKeyPrimaryVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
    MergeFrom(*source);
  }
}

void UpdateCryptoKeyPrimaryVersionRequest::MergeFrom(const UpdateCryptoKeyPrimaryVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.crypto_key_version_id().size() > 0) {
    set_crypto_key_version_id(from.crypto_key_version_id());
  }
}

void UpdateCryptoKeyPrimaryVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCryptoKeyPrimaryVersionRequest::CopyFrom(const UpdateCryptoKeyPrimaryVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCryptoKeyPrimaryVersionRequest::IsInitialized() const {
  return true;
}

void UpdateCryptoKeyPrimaryVersionRequest::Swap(UpdateCryptoKeyPrimaryVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UpdateCryptoKeyPrimaryVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UpdateCryptoKeyPrimaryVersionRequest::UnsafeArenaSwap(UpdateCryptoKeyPrimaryVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UpdateCryptoKeyPrimaryVersionRequest::InternalSwap(UpdateCryptoKeyPrimaryVersionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crypto_key_version_id_.Swap(&other->crypto_key_version_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateCryptoKeyPrimaryVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DestroyCryptoKeyVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyCryptoKeyVersionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyCryptoKeyVersionRequest::DestroyCryptoKeyVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DestroyCryptoKeyVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
}
DestroyCryptoKeyVersionRequest::DestroyCryptoKeyVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DestroyCryptoKeyVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
}
DestroyCryptoKeyVersionRequest::DestroyCryptoKeyVersionRequest(const DestroyCryptoKeyVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
}

void DestroyCryptoKeyVersionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DestroyCryptoKeyVersionRequest::~DestroyCryptoKeyVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  SharedDtor();
}

void DestroyCryptoKeyVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DestroyCryptoKeyVersionRequest::ArenaDtor(void* object) {
  DestroyCryptoKeyVersionRequest* _this = reinterpret_cast< DestroyCryptoKeyVersionRequest* >(object);
  (void)_this;
}
void DestroyCryptoKeyVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DestroyCryptoKeyVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DestroyCryptoKeyVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroyCryptoKeyVersionRequest& DestroyCryptoKeyVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_DestroyCryptoKeyVersionRequest.base);
  return *internal_default_instance();
}


void DestroyCryptoKeyVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool DestroyCryptoKeyVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  return false;
#undef DO_
}

void DestroyCryptoKeyVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
}

::google::protobuf::uint8* DestroyCryptoKeyVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  return target;
}

size_t DestroyCryptoKeyVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DestroyCryptoKeyVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DestroyCryptoKeyVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyCryptoKeyVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
    MergeFrom(*source);
  }
}

void DestroyCryptoKeyVersionRequest::MergeFrom(const DestroyCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void DestroyCryptoKeyVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyCryptoKeyVersionRequest::CopyFrom(const DestroyCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyCryptoKeyVersionRequest::IsInitialized() const {
  return true;
}

void DestroyCryptoKeyVersionRequest::Swap(DestroyCryptoKeyVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DestroyCryptoKeyVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DestroyCryptoKeyVersionRequest::UnsafeArenaSwap(DestroyCryptoKeyVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DestroyCryptoKeyVersionRequest::InternalSwap(DestroyCryptoKeyVersionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DestroyCryptoKeyVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RestoreCryptoKeyVersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestoreCryptoKeyVersionRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreCryptoKeyVersionRequest::RestoreCryptoKeyVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_RestoreCryptoKeyVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
}
RestoreCryptoKeyVersionRequest::RestoreCryptoKeyVersionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_RestoreCryptoKeyVersionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
}
RestoreCryptoKeyVersionRequest::RestoreCryptoKeyVersionRequest(const RestoreCryptoKeyVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
}

void RestoreCryptoKeyVersionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RestoreCryptoKeyVersionRequest::~RestoreCryptoKeyVersionRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  SharedDtor();
}

void RestoreCryptoKeyVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestoreCryptoKeyVersionRequest::ArenaDtor(void* object) {
  RestoreCryptoKeyVersionRequest* _this = reinterpret_cast< RestoreCryptoKeyVersionRequest* >(object);
  (void)_this;
}
void RestoreCryptoKeyVersionRequest::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void RestoreCryptoKeyVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreCryptoKeyVersionRequest::descriptor() {
  ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreCryptoKeyVersionRequest& RestoreCryptoKeyVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::scc_info_RestoreCryptoKeyVersionRequest.base);
  return *internal_default_instance();
}


void RestoreCryptoKeyVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool RestoreCryptoKeyVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  return false;
#undef DO_
}

void RestoreCryptoKeyVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
}

::google::protobuf::uint8* RestoreCryptoKeyVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  return target;
}

size_t RestoreCryptoKeyVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreCryptoKeyVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreCryptoKeyVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreCryptoKeyVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
    MergeFrom(*source);
  }
}

void RestoreCryptoKeyVersionRequest::MergeFrom(const RestoreCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void RestoreCryptoKeyVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreCryptoKeyVersionRequest::CopyFrom(const RestoreCryptoKeyVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreCryptoKeyVersionRequest::IsInitialized() const {
  return true;
}

void RestoreCryptoKeyVersionRequest::Swap(RestoreCryptoKeyVersionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RestoreCryptoKeyVersionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RestoreCryptoKeyVersionRequest::UnsafeArenaSwap(RestoreCryptoKeyVersionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RestoreCryptoKeyVersionRequest::InternalSwap(RestoreCryptoKeyVersionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreCryptoKeyVersionRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace kms
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListKeyRingsRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListKeyRingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListKeyRingsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListCryptoKeysRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListCryptoKeysRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListCryptoKeysRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListKeyRingsResponse* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListKeyRingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListKeyRingsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListCryptoKeysResponse* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListCryptoKeysResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListCryptoKeysResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::GetKeyRingRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::GetKeyRingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::GetKeyRingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::GetCryptoKeyRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::GetCryptoKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::GetCryptoKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::GetCryptoKeyVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::GetCryptoKeyVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::GetCryptoKeyVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::CreateKeyRingRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::CreateKeyRingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::CreateKeyRingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::CreateCryptoKeyRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::CreateCryptoKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::CreateCryptoKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::UpdateCryptoKeyRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::UpdateCryptoKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::UpdateCryptoKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::EncryptRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::EncryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::EncryptRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::DecryptRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::DecryptRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::DecryptRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::DecryptResponse* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::DecryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::DecryptResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::EncryptResponse* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::EncryptResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::EncryptResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest* Arena::CreateMaybeMessage< ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
