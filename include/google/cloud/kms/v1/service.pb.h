// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/kms/v1/service.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fkms_2fv1_2fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fkms_2fv1_2fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/kms/v1/resources.pb.h"
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto 

namespace protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto
namespace google {
namespace cloud {
namespace kms {
namespace v1 {
class CreateCryptoKeyRequest;
class CreateCryptoKeyRequestDefaultTypeInternal;
extern CreateCryptoKeyRequestDefaultTypeInternal _CreateCryptoKeyRequest_default_instance_;
class CreateCryptoKeyVersionRequest;
class CreateCryptoKeyVersionRequestDefaultTypeInternal;
extern CreateCryptoKeyVersionRequestDefaultTypeInternal _CreateCryptoKeyVersionRequest_default_instance_;
class CreateKeyRingRequest;
class CreateKeyRingRequestDefaultTypeInternal;
extern CreateKeyRingRequestDefaultTypeInternal _CreateKeyRingRequest_default_instance_;
class DecryptRequest;
class DecryptRequestDefaultTypeInternal;
extern DecryptRequestDefaultTypeInternal _DecryptRequest_default_instance_;
class DecryptResponse;
class DecryptResponseDefaultTypeInternal;
extern DecryptResponseDefaultTypeInternal _DecryptResponse_default_instance_;
class DestroyCryptoKeyVersionRequest;
class DestroyCryptoKeyVersionRequestDefaultTypeInternal;
extern DestroyCryptoKeyVersionRequestDefaultTypeInternal _DestroyCryptoKeyVersionRequest_default_instance_;
class EncryptRequest;
class EncryptRequestDefaultTypeInternal;
extern EncryptRequestDefaultTypeInternal _EncryptRequest_default_instance_;
class EncryptResponse;
class EncryptResponseDefaultTypeInternal;
extern EncryptResponseDefaultTypeInternal _EncryptResponse_default_instance_;
class GetCryptoKeyRequest;
class GetCryptoKeyRequestDefaultTypeInternal;
extern GetCryptoKeyRequestDefaultTypeInternal _GetCryptoKeyRequest_default_instance_;
class GetCryptoKeyVersionRequest;
class GetCryptoKeyVersionRequestDefaultTypeInternal;
extern GetCryptoKeyVersionRequestDefaultTypeInternal _GetCryptoKeyVersionRequest_default_instance_;
class GetKeyRingRequest;
class GetKeyRingRequestDefaultTypeInternal;
extern GetKeyRingRequestDefaultTypeInternal _GetKeyRingRequest_default_instance_;
class ListCryptoKeyVersionsRequest;
class ListCryptoKeyVersionsRequestDefaultTypeInternal;
extern ListCryptoKeyVersionsRequestDefaultTypeInternal _ListCryptoKeyVersionsRequest_default_instance_;
class ListCryptoKeyVersionsResponse;
class ListCryptoKeyVersionsResponseDefaultTypeInternal;
extern ListCryptoKeyVersionsResponseDefaultTypeInternal _ListCryptoKeyVersionsResponse_default_instance_;
class ListCryptoKeysRequest;
class ListCryptoKeysRequestDefaultTypeInternal;
extern ListCryptoKeysRequestDefaultTypeInternal _ListCryptoKeysRequest_default_instance_;
class ListCryptoKeysResponse;
class ListCryptoKeysResponseDefaultTypeInternal;
extern ListCryptoKeysResponseDefaultTypeInternal _ListCryptoKeysResponse_default_instance_;
class ListKeyRingsRequest;
class ListKeyRingsRequestDefaultTypeInternal;
extern ListKeyRingsRequestDefaultTypeInternal _ListKeyRingsRequest_default_instance_;
class ListKeyRingsResponse;
class ListKeyRingsResponseDefaultTypeInternal;
extern ListKeyRingsResponseDefaultTypeInternal _ListKeyRingsResponse_default_instance_;
class RestoreCryptoKeyVersionRequest;
class RestoreCryptoKeyVersionRequestDefaultTypeInternal;
extern RestoreCryptoKeyVersionRequestDefaultTypeInternal _RestoreCryptoKeyVersionRequest_default_instance_;
class UpdateCryptoKeyPrimaryVersionRequest;
class UpdateCryptoKeyPrimaryVersionRequestDefaultTypeInternal;
extern UpdateCryptoKeyPrimaryVersionRequestDefaultTypeInternal _UpdateCryptoKeyPrimaryVersionRequest_default_instance_;
class UpdateCryptoKeyRequest;
class UpdateCryptoKeyRequestDefaultTypeInternal;
extern UpdateCryptoKeyRequestDefaultTypeInternal _UpdateCryptoKeyRequest_default_instance_;
class UpdateCryptoKeyVersionRequest;
class UpdateCryptoKeyVersionRequestDefaultTypeInternal;
extern UpdateCryptoKeyVersionRequestDefaultTypeInternal _UpdateCryptoKeyVersionRequest_default_instance_;
}  // namespace v1
}  // namespace kms
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::kms::v1::CreateCryptoKeyRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::CreateCryptoKeyRequest>(Arena*);
template<> ::google::cloud::kms::v1::CreateCryptoKeyVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::CreateCryptoKeyVersionRequest>(Arena*);
template<> ::google::cloud::kms::v1::CreateKeyRingRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::CreateKeyRingRequest>(Arena*);
template<> ::google::cloud::kms::v1::DecryptRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::DecryptRequest>(Arena*);
template<> ::google::cloud::kms::v1::DecryptResponse* Arena::CreateMaybeMessage<::google::cloud::kms::v1::DecryptResponse>(Arena*);
template<> ::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::DestroyCryptoKeyVersionRequest>(Arena*);
template<> ::google::cloud::kms::v1::EncryptRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::EncryptRequest>(Arena*);
template<> ::google::cloud::kms::v1::EncryptResponse* Arena::CreateMaybeMessage<::google::cloud::kms::v1::EncryptResponse>(Arena*);
template<> ::google::cloud::kms::v1::GetCryptoKeyRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::GetCryptoKeyRequest>(Arena*);
template<> ::google::cloud::kms::v1::GetCryptoKeyVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::GetCryptoKeyVersionRequest>(Arena*);
template<> ::google::cloud::kms::v1::GetKeyRingRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::GetKeyRingRequest>(Arena*);
template<> ::google::cloud::kms::v1::ListCryptoKeyVersionsRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListCryptoKeyVersionsRequest>(Arena*);
template<> ::google::cloud::kms::v1::ListCryptoKeyVersionsResponse* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListCryptoKeyVersionsResponse>(Arena*);
template<> ::google::cloud::kms::v1::ListCryptoKeysRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListCryptoKeysRequest>(Arena*);
template<> ::google::cloud::kms::v1::ListCryptoKeysResponse* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListCryptoKeysResponse>(Arena*);
template<> ::google::cloud::kms::v1::ListKeyRingsRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListKeyRingsRequest>(Arena*);
template<> ::google::cloud::kms::v1::ListKeyRingsResponse* Arena::CreateMaybeMessage<::google::cloud::kms::v1::ListKeyRingsResponse>(Arena*);
template<> ::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::RestoreCryptoKeyVersionRequest>(Arena*);
template<> ::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::UpdateCryptoKeyPrimaryVersionRequest>(Arena*);
template<> ::google::cloud::kms::v1::UpdateCryptoKeyRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::UpdateCryptoKeyRequest>(Arena*);
template<> ::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest* Arena::CreateMaybeMessage<::google::cloud::kms::v1::UpdateCryptoKeyVersionRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace kms {
namespace v1 {

// ===================================================================

class ListKeyRingsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListKeyRingsRequest) */ {
 public:
  ListKeyRingsRequest();
  virtual ~ListKeyRingsRequest();

  ListKeyRingsRequest(const ListKeyRingsRequest& from);

  inline ListKeyRingsRequest& operator=(const ListKeyRingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListKeyRingsRequest(ListKeyRingsRequest&& from) noexcept
    : ListKeyRingsRequest() {
    *this = ::std::move(from);
  }

  inline ListKeyRingsRequest& operator=(ListKeyRingsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListKeyRingsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListKeyRingsRequest* internal_default_instance() {
    return reinterpret_cast<const ListKeyRingsRequest*>(
               &_ListKeyRingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ListKeyRingsRequest* other);
  void Swap(ListKeyRingsRequest* other);
  friend void swap(ListKeyRingsRequest& a, ListKeyRingsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListKeyRingsRequest* New() const final {
    return CreateMaybeMessage<ListKeyRingsRequest>(NULL);
  }

  ListKeyRingsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListKeyRingsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListKeyRingsRequest& from);
  void MergeFrom(const ListKeyRingsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListKeyRingsRequest* other);
  protected:
  explicit ListKeyRingsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListKeyRingsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCryptoKeysRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListCryptoKeysRequest) */ {
 public:
  ListCryptoKeysRequest();
  virtual ~ListCryptoKeysRequest();

  ListCryptoKeysRequest(const ListCryptoKeysRequest& from);

  inline ListCryptoKeysRequest& operator=(const ListCryptoKeysRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListCryptoKeysRequest(ListCryptoKeysRequest&& from) noexcept
    : ListCryptoKeysRequest() {
    *this = ::std::move(from);
  }

  inline ListCryptoKeysRequest& operator=(ListCryptoKeysRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCryptoKeysRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCryptoKeysRequest* internal_default_instance() {
    return reinterpret_cast<const ListCryptoKeysRequest*>(
               &_ListCryptoKeysRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ListCryptoKeysRequest* other);
  void Swap(ListCryptoKeysRequest* other);
  friend void swap(ListCryptoKeysRequest& a, ListCryptoKeysRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListCryptoKeysRequest* New() const final {
    return CreateMaybeMessage<ListCryptoKeysRequest>(NULL);
  }

  ListCryptoKeysRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListCryptoKeysRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListCryptoKeysRequest& from);
  void MergeFrom(const ListCryptoKeysRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCryptoKeysRequest* other);
  protected:
  explicit ListCryptoKeysRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListCryptoKeysRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCryptoKeyVersionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListCryptoKeyVersionsRequest) */ {
 public:
  ListCryptoKeyVersionsRequest();
  virtual ~ListCryptoKeyVersionsRequest();

  ListCryptoKeyVersionsRequest(const ListCryptoKeyVersionsRequest& from);

  inline ListCryptoKeyVersionsRequest& operator=(const ListCryptoKeyVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListCryptoKeyVersionsRequest(ListCryptoKeyVersionsRequest&& from) noexcept
    : ListCryptoKeyVersionsRequest() {
    *this = ::std::move(from);
  }

  inline ListCryptoKeyVersionsRequest& operator=(ListCryptoKeyVersionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCryptoKeyVersionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCryptoKeyVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListCryptoKeyVersionsRequest*>(
               &_ListCryptoKeyVersionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListCryptoKeyVersionsRequest* other);
  void Swap(ListCryptoKeyVersionsRequest* other);
  friend void swap(ListCryptoKeyVersionsRequest& a, ListCryptoKeyVersionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListCryptoKeyVersionsRequest* New() const final {
    return CreateMaybeMessage<ListCryptoKeyVersionsRequest>(NULL);
  }

  ListCryptoKeyVersionsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListCryptoKeyVersionsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListCryptoKeyVersionsRequest& from);
  void MergeFrom(const ListCryptoKeyVersionsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCryptoKeyVersionsRequest* other);
  protected:
  explicit ListCryptoKeyVersionsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListCryptoKeyVersionsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListKeyRingsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListKeyRingsResponse) */ {
 public:
  ListKeyRingsResponse();
  virtual ~ListKeyRingsResponse();

  ListKeyRingsResponse(const ListKeyRingsResponse& from);

  inline ListKeyRingsResponse& operator=(const ListKeyRingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListKeyRingsResponse(ListKeyRingsResponse&& from) noexcept
    : ListKeyRingsResponse() {
    *this = ::std::move(from);
  }

  inline ListKeyRingsResponse& operator=(ListKeyRingsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListKeyRingsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListKeyRingsResponse* internal_default_instance() {
    return reinterpret_cast<const ListKeyRingsResponse*>(
               &_ListKeyRingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ListKeyRingsResponse* other);
  void Swap(ListKeyRingsResponse* other);
  friend void swap(ListKeyRingsResponse& a, ListKeyRingsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListKeyRingsResponse* New() const final {
    return CreateMaybeMessage<ListKeyRingsResponse>(NULL);
  }

  ListKeyRingsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListKeyRingsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListKeyRingsResponse& from);
  void MergeFrom(const ListKeyRingsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListKeyRingsResponse* other);
  protected:
  explicit ListKeyRingsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
  int key_rings_size() const;
  void clear_key_rings();
  static const int kKeyRingsFieldNumber = 1;
  ::google::cloud::kms::v1::KeyRing* mutable_key_rings(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::KeyRing >*
      mutable_key_rings();
  const ::google::cloud::kms::v1::KeyRing& key_rings(int index) const;
  ::google::cloud::kms::v1::KeyRing* add_key_rings();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::KeyRing >&
      key_rings() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // int32 total_size = 3;
  void clear_total_size();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::int32 total_size() const;
  void set_total_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListKeyRingsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::KeyRing > key_rings_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 total_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCryptoKeysResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListCryptoKeysResponse) */ {
 public:
  ListCryptoKeysResponse();
  virtual ~ListCryptoKeysResponse();

  ListCryptoKeysResponse(const ListCryptoKeysResponse& from);

  inline ListCryptoKeysResponse& operator=(const ListCryptoKeysResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListCryptoKeysResponse(ListCryptoKeysResponse&& from) noexcept
    : ListCryptoKeysResponse() {
    *this = ::std::move(from);
  }

  inline ListCryptoKeysResponse& operator=(ListCryptoKeysResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCryptoKeysResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCryptoKeysResponse* internal_default_instance() {
    return reinterpret_cast<const ListCryptoKeysResponse*>(
               &_ListCryptoKeysResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ListCryptoKeysResponse* other);
  void Swap(ListCryptoKeysResponse* other);
  friend void swap(ListCryptoKeysResponse& a, ListCryptoKeysResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListCryptoKeysResponse* New() const final {
    return CreateMaybeMessage<ListCryptoKeysResponse>(NULL);
  }

  ListCryptoKeysResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListCryptoKeysResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListCryptoKeysResponse& from);
  void MergeFrom(const ListCryptoKeysResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCryptoKeysResponse* other);
  protected:
  explicit ListCryptoKeysResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
  int crypto_keys_size() const;
  void clear_crypto_keys();
  static const int kCryptoKeysFieldNumber = 1;
  ::google::cloud::kms::v1::CryptoKey* mutable_crypto_keys(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKey >*
      mutable_crypto_keys();
  const ::google::cloud::kms::v1::CryptoKey& crypto_keys(int index) const;
  ::google::cloud::kms::v1::CryptoKey* add_crypto_keys();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKey >&
      crypto_keys() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // int32 total_size = 3;
  void clear_total_size();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::int32 total_size() const;
  void set_total_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListCryptoKeysResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKey > crypto_keys_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 total_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListCryptoKeyVersionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.ListCryptoKeyVersionsResponse) */ {
 public:
  ListCryptoKeyVersionsResponse();
  virtual ~ListCryptoKeyVersionsResponse();

  ListCryptoKeyVersionsResponse(const ListCryptoKeyVersionsResponse& from);

  inline ListCryptoKeyVersionsResponse& operator=(const ListCryptoKeyVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListCryptoKeyVersionsResponse(ListCryptoKeyVersionsResponse&& from) noexcept
    : ListCryptoKeyVersionsResponse() {
    *this = ::std::move(from);
  }

  inline ListCryptoKeyVersionsResponse& operator=(ListCryptoKeyVersionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListCryptoKeyVersionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCryptoKeyVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListCryptoKeyVersionsResponse*>(
               &_ListCryptoKeyVersionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ListCryptoKeyVersionsResponse* other);
  void Swap(ListCryptoKeyVersionsResponse* other);
  friend void swap(ListCryptoKeyVersionsResponse& a, ListCryptoKeyVersionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListCryptoKeyVersionsResponse* New() const final {
    return CreateMaybeMessage<ListCryptoKeyVersionsResponse>(NULL);
  }

  ListCryptoKeyVersionsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListCryptoKeyVersionsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListCryptoKeyVersionsResponse& from);
  void MergeFrom(const ListCryptoKeyVersionsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCryptoKeyVersionsResponse* other);
  protected:
  explicit ListCryptoKeyVersionsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
  int crypto_key_versions_size() const;
  void clear_crypto_key_versions();
  static const int kCryptoKeyVersionsFieldNumber = 1;
  ::google::cloud::kms::v1::CryptoKeyVersion* mutable_crypto_key_versions(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKeyVersion >*
      mutable_crypto_key_versions();
  const ::google::cloud::kms::v1::CryptoKeyVersion& crypto_key_versions(int index) const;
  ::google::cloud::kms::v1::CryptoKeyVersion* add_crypto_key_versions();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKeyVersion >&
      crypto_key_versions() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // int32 total_size = 3;
  void clear_total_size();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::int32 total_size() const;
  void set_total_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.ListCryptoKeyVersionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKeyVersion > crypto_key_versions_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  ::google::protobuf::int32 total_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetKeyRingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.GetKeyRingRequest) */ {
 public:
  GetKeyRingRequest();
  virtual ~GetKeyRingRequest();

  GetKeyRingRequest(const GetKeyRingRequest& from);

  inline GetKeyRingRequest& operator=(const GetKeyRingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetKeyRingRequest(GetKeyRingRequest&& from) noexcept
    : GetKeyRingRequest() {
    *this = ::std::move(from);
  }

  inline GetKeyRingRequest& operator=(GetKeyRingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetKeyRingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetKeyRingRequest* internal_default_instance() {
    return reinterpret_cast<const GetKeyRingRequest*>(
               &_GetKeyRingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(GetKeyRingRequest* other);
  void Swap(GetKeyRingRequest* other);
  friend void swap(GetKeyRingRequest& a, GetKeyRingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetKeyRingRequest* New() const final {
    return CreateMaybeMessage<GetKeyRingRequest>(NULL);
  }

  GetKeyRingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetKeyRingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetKeyRingRequest& from);
  void MergeFrom(const GetKeyRingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetKeyRingRequest* other);
  protected:
  explicit GetKeyRingRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.GetKeyRingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCryptoKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.GetCryptoKeyRequest) */ {
 public:
  GetCryptoKeyRequest();
  virtual ~GetCryptoKeyRequest();

  GetCryptoKeyRequest(const GetCryptoKeyRequest& from);

  inline GetCryptoKeyRequest& operator=(const GetCryptoKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCryptoKeyRequest(GetCryptoKeyRequest&& from) noexcept
    : GetCryptoKeyRequest() {
    *this = ::std::move(from);
  }

  inline GetCryptoKeyRequest& operator=(GetCryptoKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCryptoKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCryptoKeyRequest* internal_default_instance() {
    return reinterpret_cast<const GetCryptoKeyRequest*>(
               &_GetCryptoKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(GetCryptoKeyRequest* other);
  void Swap(GetCryptoKeyRequest* other);
  friend void swap(GetCryptoKeyRequest& a, GetCryptoKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCryptoKeyRequest* New() const final {
    return CreateMaybeMessage<GetCryptoKeyRequest>(NULL);
  }

  GetCryptoKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCryptoKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCryptoKeyRequest& from);
  void MergeFrom(const GetCryptoKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCryptoKeyRequest* other);
  protected:
  explicit GetCryptoKeyRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.GetCryptoKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCryptoKeyVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.GetCryptoKeyVersionRequest) */ {
 public:
  GetCryptoKeyVersionRequest();
  virtual ~GetCryptoKeyVersionRequest();

  GetCryptoKeyVersionRequest(const GetCryptoKeyVersionRequest& from);

  inline GetCryptoKeyVersionRequest& operator=(const GetCryptoKeyVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCryptoKeyVersionRequest(GetCryptoKeyVersionRequest&& from) noexcept
    : GetCryptoKeyVersionRequest() {
    *this = ::std::move(from);
  }

  inline GetCryptoKeyVersionRequest& operator=(GetCryptoKeyVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCryptoKeyVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCryptoKeyVersionRequest* internal_default_instance() {
    return reinterpret_cast<const GetCryptoKeyVersionRequest*>(
               &_GetCryptoKeyVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(GetCryptoKeyVersionRequest* other);
  void Swap(GetCryptoKeyVersionRequest* other);
  friend void swap(GetCryptoKeyVersionRequest& a, GetCryptoKeyVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCryptoKeyVersionRequest* New() const final {
    return CreateMaybeMessage<GetCryptoKeyVersionRequest>(NULL);
  }

  GetCryptoKeyVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetCryptoKeyVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetCryptoKeyVersionRequest& from);
  void MergeFrom(const GetCryptoKeyVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCryptoKeyVersionRequest* other);
  protected:
  explicit GetCryptoKeyVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.GetCryptoKeyVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateKeyRingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.CreateKeyRingRequest) */ {
 public:
  CreateKeyRingRequest();
  virtual ~CreateKeyRingRequest();

  CreateKeyRingRequest(const CreateKeyRingRequest& from);

  inline CreateKeyRingRequest& operator=(const CreateKeyRingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateKeyRingRequest(CreateKeyRingRequest&& from) noexcept
    : CreateKeyRingRequest() {
    *this = ::std::move(from);
  }

  inline CreateKeyRingRequest& operator=(CreateKeyRingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateKeyRingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateKeyRingRequest* internal_default_instance() {
    return reinterpret_cast<const CreateKeyRingRequest*>(
               &_CreateKeyRingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(CreateKeyRingRequest* other);
  void Swap(CreateKeyRingRequest* other);
  friend void swap(CreateKeyRingRequest& a, CreateKeyRingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateKeyRingRequest* New() const final {
    return CreateMaybeMessage<CreateKeyRingRequest>(NULL);
  }

  CreateKeyRingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateKeyRingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateKeyRingRequest& from);
  void MergeFrom(const CreateKeyRingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateKeyRingRequest* other);
  protected:
  explicit CreateKeyRingRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string key_ring_id = 2;
  void clear_key_ring_id();
  static const int kKeyRingIdFieldNumber = 2;
  const ::std::string& key_ring_id() const;
  void set_key_ring_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_ring_id(::std::string&& value);
  #endif
  void set_key_ring_id(const char* value);
  void set_key_ring_id(const char* value, size_t size);
  ::std::string* mutable_key_ring_id();
  ::std::string* release_key_ring_id();
  void set_allocated_key_ring_id(::std::string* key_ring_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_key_ring_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_key_ring_id(
      ::std::string* key_ring_id);

  // .google.cloud.kms.v1.KeyRing key_ring = 3;
  bool has_key_ring() const;
  void clear_key_ring();
  static const int kKeyRingFieldNumber = 3;
  private:
  const ::google::cloud::kms::v1::KeyRing& _internal_key_ring() const;
  public:
  const ::google::cloud::kms::v1::KeyRing& key_ring() const;
  ::google::cloud::kms::v1::KeyRing* release_key_ring();
  ::google::cloud::kms::v1::KeyRing* mutable_key_ring();
  void set_allocated_key_ring(::google::cloud::kms::v1::KeyRing* key_ring);
  void unsafe_arena_set_allocated_key_ring(
      ::google::cloud::kms::v1::KeyRing* key_ring);
  ::google::cloud::kms::v1::KeyRing* unsafe_arena_release_key_ring();

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.CreateKeyRingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr key_ring_id_;
  ::google::cloud::kms::v1::KeyRing* key_ring_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateCryptoKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.CreateCryptoKeyRequest) */ {
 public:
  CreateCryptoKeyRequest();
  virtual ~CreateCryptoKeyRequest();

  CreateCryptoKeyRequest(const CreateCryptoKeyRequest& from);

  inline CreateCryptoKeyRequest& operator=(const CreateCryptoKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateCryptoKeyRequest(CreateCryptoKeyRequest&& from) noexcept
    : CreateCryptoKeyRequest() {
    *this = ::std::move(from);
  }

  inline CreateCryptoKeyRequest& operator=(CreateCryptoKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCryptoKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCryptoKeyRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCryptoKeyRequest*>(
               &_CreateCryptoKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(CreateCryptoKeyRequest* other);
  void Swap(CreateCryptoKeyRequest* other);
  friend void swap(CreateCryptoKeyRequest& a, CreateCryptoKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateCryptoKeyRequest* New() const final {
    return CreateMaybeMessage<CreateCryptoKeyRequest>(NULL);
  }

  CreateCryptoKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateCryptoKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateCryptoKeyRequest& from);
  void MergeFrom(const CreateCryptoKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCryptoKeyRequest* other);
  protected:
  explicit CreateCryptoKeyRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string crypto_key_id = 2;
  void clear_crypto_key_id();
  static const int kCryptoKeyIdFieldNumber = 2;
  const ::std::string& crypto_key_id() const;
  void set_crypto_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_crypto_key_id(::std::string&& value);
  #endif
  void set_crypto_key_id(const char* value);
  void set_crypto_key_id(const char* value, size_t size);
  ::std::string* mutable_crypto_key_id();
  ::std::string* release_crypto_key_id();
  void set_allocated_crypto_key_id(::std::string* crypto_key_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_crypto_key_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_crypto_key_id(
      ::std::string* crypto_key_id);

  // .google.cloud.kms.v1.CryptoKey crypto_key = 3;
  bool has_crypto_key() const;
  void clear_crypto_key();
  static const int kCryptoKeyFieldNumber = 3;
  private:
  const ::google::cloud::kms::v1::CryptoKey& _internal_crypto_key() const;
  public:
  const ::google::cloud::kms::v1::CryptoKey& crypto_key() const;
  ::google::cloud::kms::v1::CryptoKey* release_crypto_key();
  ::google::cloud::kms::v1::CryptoKey* mutable_crypto_key();
  void set_allocated_crypto_key(::google::cloud::kms::v1::CryptoKey* crypto_key);
  void unsafe_arena_set_allocated_crypto_key(
      ::google::cloud::kms::v1::CryptoKey* crypto_key);
  ::google::cloud::kms::v1::CryptoKey* unsafe_arena_release_crypto_key();

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.CreateCryptoKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr crypto_key_id_;
  ::google::cloud::kms::v1::CryptoKey* crypto_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateCryptoKeyVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.CreateCryptoKeyVersionRequest) */ {
 public:
  CreateCryptoKeyVersionRequest();
  virtual ~CreateCryptoKeyVersionRequest();

  CreateCryptoKeyVersionRequest(const CreateCryptoKeyVersionRequest& from);

  inline CreateCryptoKeyVersionRequest& operator=(const CreateCryptoKeyVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateCryptoKeyVersionRequest(CreateCryptoKeyVersionRequest&& from) noexcept
    : CreateCryptoKeyVersionRequest() {
    *this = ::std::move(from);
  }

  inline CreateCryptoKeyVersionRequest& operator=(CreateCryptoKeyVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCryptoKeyVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCryptoKeyVersionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCryptoKeyVersionRequest*>(
               &_CreateCryptoKeyVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(CreateCryptoKeyVersionRequest* other);
  void Swap(CreateCryptoKeyVersionRequest* other);
  friend void swap(CreateCryptoKeyVersionRequest& a, CreateCryptoKeyVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateCryptoKeyVersionRequest* New() const final {
    return CreateMaybeMessage<CreateCryptoKeyVersionRequest>(NULL);
  }

  CreateCryptoKeyVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateCryptoKeyVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateCryptoKeyVersionRequest& from);
  void MergeFrom(const CreateCryptoKeyVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCryptoKeyVersionRequest* other);
  protected:
  explicit CreateCryptoKeyVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
  bool has_crypto_key_version() const;
  void clear_crypto_key_version();
  static const int kCryptoKeyVersionFieldNumber = 2;
  private:
  const ::google::cloud::kms::v1::CryptoKeyVersion& _internal_crypto_key_version() const;
  public:
  const ::google::cloud::kms::v1::CryptoKeyVersion& crypto_key_version() const;
  ::google::cloud::kms::v1::CryptoKeyVersion* release_crypto_key_version();
  ::google::cloud::kms::v1::CryptoKeyVersion* mutable_crypto_key_version();
  void set_allocated_crypto_key_version(::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version);
  void unsafe_arena_set_allocated_crypto_key_version(
      ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version);
  ::google::cloud::kms::v1::CryptoKeyVersion* unsafe_arena_release_crypto_key_version();

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.CreateCryptoKeyVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateCryptoKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.UpdateCryptoKeyRequest) */ {
 public:
  UpdateCryptoKeyRequest();
  virtual ~UpdateCryptoKeyRequest();

  UpdateCryptoKeyRequest(const UpdateCryptoKeyRequest& from);

  inline UpdateCryptoKeyRequest& operator=(const UpdateCryptoKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCryptoKeyRequest(UpdateCryptoKeyRequest&& from) noexcept
    : UpdateCryptoKeyRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCryptoKeyRequest& operator=(UpdateCryptoKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCryptoKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCryptoKeyRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCryptoKeyRequest*>(
               &_UpdateCryptoKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(UpdateCryptoKeyRequest* other);
  void Swap(UpdateCryptoKeyRequest* other);
  friend void swap(UpdateCryptoKeyRequest& a, UpdateCryptoKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCryptoKeyRequest* New() const final {
    return CreateMaybeMessage<UpdateCryptoKeyRequest>(NULL);
  }

  UpdateCryptoKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCryptoKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateCryptoKeyRequest& from);
  void MergeFrom(const UpdateCryptoKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCryptoKeyRequest* other);
  protected:
  explicit UpdateCryptoKeyRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.kms.v1.CryptoKey crypto_key = 1;
  bool has_crypto_key() const;
  void clear_crypto_key();
  static const int kCryptoKeyFieldNumber = 1;
  private:
  const ::google::cloud::kms::v1::CryptoKey& _internal_crypto_key() const;
  public:
  const ::google::cloud::kms::v1::CryptoKey& crypto_key() const;
  ::google::cloud::kms::v1::CryptoKey* release_crypto_key();
  ::google::cloud::kms::v1::CryptoKey* mutable_crypto_key();
  void set_allocated_crypto_key(::google::cloud::kms::v1::CryptoKey* crypto_key);
  void unsafe_arena_set_allocated_crypto_key(
      ::google::cloud::kms::v1::CryptoKey* crypto_key);
  ::google::cloud::kms::v1::CryptoKey* unsafe_arena_release_crypto_key();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.UpdateCryptoKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::kms::v1::CryptoKey* crypto_key_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateCryptoKeyVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest) */ {
 public:
  UpdateCryptoKeyVersionRequest();
  virtual ~UpdateCryptoKeyVersionRequest();

  UpdateCryptoKeyVersionRequest(const UpdateCryptoKeyVersionRequest& from);

  inline UpdateCryptoKeyVersionRequest& operator=(const UpdateCryptoKeyVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCryptoKeyVersionRequest(UpdateCryptoKeyVersionRequest&& from) noexcept
    : UpdateCryptoKeyVersionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCryptoKeyVersionRequest& operator=(UpdateCryptoKeyVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCryptoKeyVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCryptoKeyVersionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCryptoKeyVersionRequest*>(
               &_UpdateCryptoKeyVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(UpdateCryptoKeyVersionRequest* other);
  void Swap(UpdateCryptoKeyVersionRequest* other);
  friend void swap(UpdateCryptoKeyVersionRequest& a, UpdateCryptoKeyVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCryptoKeyVersionRequest* New() const final {
    return CreateMaybeMessage<UpdateCryptoKeyVersionRequest>(NULL);
  }

  UpdateCryptoKeyVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCryptoKeyVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateCryptoKeyVersionRequest& from);
  void MergeFrom(const UpdateCryptoKeyVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCryptoKeyVersionRequest* other);
  protected:
  explicit UpdateCryptoKeyVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
  bool has_crypto_key_version() const;
  void clear_crypto_key_version();
  static const int kCryptoKeyVersionFieldNumber = 1;
  private:
  const ::google::cloud::kms::v1::CryptoKeyVersion& _internal_crypto_key_version() const;
  public:
  const ::google::cloud::kms::v1::CryptoKeyVersion& crypto_key_version() const;
  ::google::cloud::kms::v1::CryptoKeyVersion* release_crypto_key_version();
  ::google::cloud::kms::v1::CryptoKeyVersion* mutable_crypto_key_version();
  void set_allocated_crypto_key_version(::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version);
  void unsafe_arena_set_allocated_crypto_key_version(
      ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version);
  ::google::cloud::kms::v1::CryptoKeyVersion* unsafe_arena_release_crypto_key_version();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.EncryptRequest) */ {
 public:
  EncryptRequest();
  virtual ~EncryptRequest();

  EncryptRequest(const EncryptRequest& from);

  inline EncryptRequest& operator=(const EncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptRequest(EncryptRequest&& from) noexcept
    : EncryptRequest() {
    *this = ::std::move(from);
  }

  inline EncryptRequest& operator=(EncryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptRequest*>(
               &_EncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(EncryptRequest* other);
  void Swap(EncryptRequest* other);
  friend void swap(EncryptRequest& a, EncryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptRequest* New() const final {
    return CreateMaybeMessage<EncryptRequest>(NULL);
  }

  EncryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptRequest& from);
  void MergeFrom(const EncryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequest* other);
  protected:
  explicit EncryptRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bytes plaintext = 2;
  void clear_plaintext();
  static const int kPlaintextFieldNumber = 2;
  const ::std::string& plaintext() const;
  void set_plaintext(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext(::std::string&& value);
  #endif
  void set_plaintext(const char* value);
  void set_plaintext(const void* value, size_t size);
  ::std::string* mutable_plaintext();
  ::std::string* release_plaintext();
  void set_allocated_plaintext(::std::string* plaintext);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_plaintext();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_plaintext(
      ::std::string* plaintext);

  // bytes additional_authenticated_data = 3;
  void clear_additional_authenticated_data();
  static const int kAdditionalAuthenticatedDataFieldNumber = 3;
  const ::std::string& additional_authenticated_data() const;
  void set_additional_authenticated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_additional_authenticated_data(::std::string&& value);
  #endif
  void set_additional_authenticated_data(const char* value);
  void set_additional_authenticated_data(const void* value, size_t size);
  ::std::string* mutable_additional_authenticated_data();
  ::std::string* release_additional_authenticated_data();
  void set_allocated_additional_authenticated_data(::std::string* additional_authenticated_data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_additional_authenticated_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_additional_authenticated_data(
      ::std::string* additional_authenticated_data);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.EncryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_;
  ::google::protobuf::internal::ArenaStringPtr additional_authenticated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DecryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.DecryptRequest) */ {
 public:
  DecryptRequest();
  virtual ~DecryptRequest();

  DecryptRequest(const DecryptRequest& from);

  inline DecryptRequest& operator=(const DecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptRequest(DecryptRequest&& from) noexcept
    : DecryptRequest() {
    *this = ::std::move(from);
  }

  inline DecryptRequest& operator=(DecryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptRequest*>(
               &_DecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(DecryptRequest* other);
  void Swap(DecryptRequest* other);
  friend void swap(DecryptRequest& a, DecryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptRequest* New() const final {
    return CreateMaybeMessage<DecryptRequest>(NULL);
  }

  DecryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptRequest& from);
  void MergeFrom(const DecryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequest* other);
  protected:
  explicit DecryptRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bytes ciphertext = 2;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 2;
  const ::std::string& ciphertext() const;
  void set_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(::std::string&& value);
  #endif
  void set_ciphertext(const char* value);
  void set_ciphertext(const void* value, size_t size);
  ::std::string* mutable_ciphertext();
  ::std::string* release_ciphertext();
  void set_allocated_ciphertext(::std::string* ciphertext);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ciphertext();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ciphertext(
      ::std::string* ciphertext);

  // bytes additional_authenticated_data = 3;
  void clear_additional_authenticated_data();
  static const int kAdditionalAuthenticatedDataFieldNumber = 3;
  const ::std::string& additional_authenticated_data() const;
  void set_additional_authenticated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_additional_authenticated_data(::std::string&& value);
  #endif
  void set_additional_authenticated_data(const char* value);
  void set_additional_authenticated_data(const void* value, size_t size);
  ::std::string* mutable_additional_authenticated_data();
  ::std::string* release_additional_authenticated_data();
  void set_allocated_additional_authenticated_data(::std::string* additional_authenticated_data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_additional_authenticated_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_additional_authenticated_data(
      ::std::string* additional_authenticated_data);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.DecryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ciphertext_;
  ::google::protobuf::internal::ArenaStringPtr additional_authenticated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DecryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.DecryptResponse) */ {
 public:
  DecryptResponse();
  virtual ~DecryptResponse();

  DecryptResponse(const DecryptResponse& from);

  inline DecryptResponse& operator=(const DecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptResponse(DecryptResponse&& from) noexcept
    : DecryptResponse() {
    *this = ::std::move(from);
  }

  inline DecryptResponse& operator=(DecryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptResponse*>(
               &_DecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(DecryptResponse* other);
  void Swap(DecryptResponse* other);
  friend void swap(DecryptResponse& a, DecryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptResponse* New() const final {
    return CreateMaybeMessage<DecryptResponse>(NULL);
  }

  DecryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptResponse& from);
  void MergeFrom(const DecryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptResponse* other);
  protected:
  explicit DecryptResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes plaintext = 1;
  void clear_plaintext();
  static const int kPlaintextFieldNumber = 1;
  const ::std::string& plaintext() const;
  void set_plaintext(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext(::std::string&& value);
  #endif
  void set_plaintext(const char* value);
  void set_plaintext(const void* value, size_t size);
  ::std::string* mutable_plaintext();
  ::std::string* release_plaintext();
  void set_allocated_plaintext(::std::string* plaintext);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_plaintext();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_plaintext(
      ::std::string* plaintext);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.DecryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.EncryptResponse) */ {
 public:
  EncryptResponse();
  virtual ~EncryptResponse();

  EncryptResponse(const EncryptResponse& from);

  inline EncryptResponse& operator=(const EncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptResponse(EncryptResponse&& from) noexcept
    : EncryptResponse() {
    *this = ::std::move(from);
  }

  inline EncryptResponse& operator=(EncryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptResponse*>(
               &_EncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(EncryptResponse* other);
  void Swap(EncryptResponse* other);
  friend void swap(EncryptResponse& a, EncryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptResponse* New() const final {
    return CreateMaybeMessage<EncryptResponse>(NULL);
  }

  EncryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptResponse& from);
  void MergeFrom(const EncryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptResponse* other);
  protected:
  explicit EncryptResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bytes ciphertext = 2;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 2;
  const ::std::string& ciphertext() const;
  void set_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(::std::string&& value);
  #endif
  void set_ciphertext(const char* value);
  void set_ciphertext(const void* value, size_t size);
  ::std::string* mutable_ciphertext();
  ::std::string* release_ciphertext();
  void set_allocated_ciphertext(::std::string* ciphertext);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ciphertext();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ciphertext(
      ::std::string* ciphertext);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.EncryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ciphertext_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateCryptoKeyPrimaryVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest) */ {
 public:
  UpdateCryptoKeyPrimaryVersionRequest();
  virtual ~UpdateCryptoKeyPrimaryVersionRequest();

  UpdateCryptoKeyPrimaryVersionRequest(const UpdateCryptoKeyPrimaryVersionRequest& from);

  inline UpdateCryptoKeyPrimaryVersionRequest& operator=(const UpdateCryptoKeyPrimaryVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCryptoKeyPrimaryVersionRequest(UpdateCryptoKeyPrimaryVersionRequest&& from) noexcept
    : UpdateCryptoKeyPrimaryVersionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCryptoKeyPrimaryVersionRequest& operator=(UpdateCryptoKeyPrimaryVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCryptoKeyPrimaryVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCryptoKeyPrimaryVersionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCryptoKeyPrimaryVersionRequest*>(
               &_UpdateCryptoKeyPrimaryVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(UpdateCryptoKeyPrimaryVersionRequest* other);
  void Swap(UpdateCryptoKeyPrimaryVersionRequest* other);
  friend void swap(UpdateCryptoKeyPrimaryVersionRequest& a, UpdateCryptoKeyPrimaryVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCryptoKeyPrimaryVersionRequest* New() const final {
    return CreateMaybeMessage<UpdateCryptoKeyPrimaryVersionRequest>(NULL);
  }

  UpdateCryptoKeyPrimaryVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCryptoKeyPrimaryVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateCryptoKeyPrimaryVersionRequest& from);
  void MergeFrom(const UpdateCryptoKeyPrimaryVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCryptoKeyPrimaryVersionRequest* other);
  protected:
  explicit UpdateCryptoKeyPrimaryVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string crypto_key_version_id = 2;
  void clear_crypto_key_version_id();
  static const int kCryptoKeyVersionIdFieldNumber = 2;
  const ::std::string& crypto_key_version_id() const;
  void set_crypto_key_version_id(const ::std::string& value);
  #if LANG_CXX11
  void set_crypto_key_version_id(::std::string&& value);
  #endif
  void set_crypto_key_version_id(const char* value);
  void set_crypto_key_version_id(const char* value, size_t size);
  ::std::string* mutable_crypto_key_version_id();
  ::std::string* release_crypto_key_version_id();
  void set_allocated_crypto_key_version_id(::std::string* crypto_key_version_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_crypto_key_version_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_crypto_key_version_id(
      ::std::string* crypto_key_version_id);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr crypto_key_version_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyCryptoKeyVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest) */ {
 public:
  DestroyCryptoKeyVersionRequest();
  virtual ~DestroyCryptoKeyVersionRequest();

  DestroyCryptoKeyVersionRequest(const DestroyCryptoKeyVersionRequest& from);

  inline DestroyCryptoKeyVersionRequest& operator=(const DestroyCryptoKeyVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyCryptoKeyVersionRequest(DestroyCryptoKeyVersionRequest&& from) noexcept
    : DestroyCryptoKeyVersionRequest() {
    *this = ::std::move(from);
  }

  inline DestroyCryptoKeyVersionRequest& operator=(DestroyCryptoKeyVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyCryptoKeyVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DestroyCryptoKeyVersionRequest* internal_default_instance() {
    return reinterpret_cast<const DestroyCryptoKeyVersionRequest*>(
               &_DestroyCryptoKeyVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(DestroyCryptoKeyVersionRequest* other);
  void Swap(DestroyCryptoKeyVersionRequest* other);
  friend void swap(DestroyCryptoKeyVersionRequest& a, DestroyCryptoKeyVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyCryptoKeyVersionRequest* New() const final {
    return CreateMaybeMessage<DestroyCryptoKeyVersionRequest>(NULL);
  }

  DestroyCryptoKeyVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DestroyCryptoKeyVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DestroyCryptoKeyVersionRequest& from);
  void MergeFrom(const DestroyCryptoKeyVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DestroyCryptoKeyVersionRequest* other);
  protected:
  explicit DestroyCryptoKeyVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestoreCryptoKeyVersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest) */ {
 public:
  RestoreCryptoKeyVersionRequest();
  virtual ~RestoreCryptoKeyVersionRequest();

  RestoreCryptoKeyVersionRequest(const RestoreCryptoKeyVersionRequest& from);

  inline RestoreCryptoKeyVersionRequest& operator=(const RestoreCryptoKeyVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RestoreCryptoKeyVersionRequest(RestoreCryptoKeyVersionRequest&& from) noexcept
    : RestoreCryptoKeyVersionRequest() {
    *this = ::std::move(from);
  }

  inline RestoreCryptoKeyVersionRequest& operator=(RestoreCryptoKeyVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreCryptoKeyVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RestoreCryptoKeyVersionRequest* internal_default_instance() {
    return reinterpret_cast<const RestoreCryptoKeyVersionRequest*>(
               &_RestoreCryptoKeyVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(RestoreCryptoKeyVersionRequest* other);
  void Swap(RestoreCryptoKeyVersionRequest* other);
  friend void swap(RestoreCryptoKeyVersionRequest& a, RestoreCryptoKeyVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RestoreCryptoKeyVersionRequest* New() const final {
    return CreateMaybeMessage<RestoreCryptoKeyVersionRequest>(NULL);
  }

  RestoreCryptoKeyVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RestoreCryptoKeyVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RestoreCryptoKeyVersionRequest& from);
  void MergeFrom(const RestoreCryptoKeyVersionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RestoreCryptoKeyVersionRequest* other);
  protected:
  explicit RestoreCryptoKeyVersionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fkms_2fv1_2fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListKeyRingsRequest

// string parent = 1;
inline void ListKeyRingsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKeyRingsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsRequest.parent)
  return parent_.Get();
}
inline void ListKeyRingsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}
#if LANG_CXX11
inline void ListKeyRingsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}
#endif
inline void ListKeyRingsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}
inline void ListKeyRingsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}
inline ::std::string* ListKeyRingsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListKeyRingsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKeyRingsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListKeyRingsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKeyRingsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}
inline ::std::string* ListKeyRingsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListKeyRingsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKeyRingsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListKeyRingsRequest.parent)
}

// int32 page_size = 2;
inline void ListKeyRingsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListKeyRingsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsRequest.page_size)
  return page_size_;
}
inline void ListKeyRingsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListKeyRingsRequest.page_size)
}

// string page_token = 3;
inline void ListKeyRingsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKeyRingsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
  return page_token_.Get();
}
inline void ListKeyRingsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}
#if LANG_CXX11
inline void ListKeyRingsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}
#endif
inline void ListKeyRingsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}
inline void ListKeyRingsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}
inline ::std::string* ListKeyRingsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKeyRingsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKeyRingsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}
inline ::std::string* ListKeyRingsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKeyRingsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListKeyRingsRequest.page_token)
}

// -------------------------------------------------------------------

// ListCryptoKeysRequest

// string parent = 1;
inline void ListCryptoKeysRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeysRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
  return parent_.Get();
}
inline void ListCryptoKeysRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}
#if LANG_CXX11
inline void ListCryptoKeysRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}
#endif
inline void ListCryptoKeysRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}
inline void ListCryptoKeysRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}
inline ::std::string* ListCryptoKeysRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeysRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeysRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}
inline ::std::string* ListCryptoKeysRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeysRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeysRequest.parent)
}

// int32 page_size = 2;
inline void ListCryptoKeysRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListCryptoKeysRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysRequest.page_size)
  return page_size_;
}
inline void ListCryptoKeysRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeysRequest.page_size)
}

// string page_token = 3;
inline void ListCryptoKeysRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeysRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
  return page_token_.Get();
}
inline void ListCryptoKeysRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}
#if LANG_CXX11
inline void ListCryptoKeysRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}
#endif
inline void ListCryptoKeysRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}
inline void ListCryptoKeysRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}
inline ::std::string* ListCryptoKeysRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeysRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeysRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}
inline ::std::string* ListCryptoKeysRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeysRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeysRequest.page_token)
}

// -------------------------------------------------------------------

// ListCryptoKeyVersionsRequest

// string parent = 1;
inline void ListCryptoKeyVersionsRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeyVersionsRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
  return parent_.Get();
}
inline void ListCryptoKeyVersionsRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}
#if LANG_CXX11
inline void ListCryptoKeyVersionsRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}
#endif
inline void ListCryptoKeyVersionsRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}
inline void ListCryptoKeyVersionsRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}
inline ::std::string* ListCryptoKeyVersionsRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeyVersionsRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}
inline ::std::string* ListCryptoKeyVersionsRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.parent)
}

// int32 page_size = 2;
inline void ListCryptoKeyVersionsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListCryptoKeyVersionsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_size)
  return page_size_;
}
inline void ListCryptoKeyVersionsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_size)
}

// string page_token = 3;
inline void ListCryptoKeyVersionsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeyVersionsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
  return page_token_.Get();
}
inline void ListCryptoKeyVersionsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}
#if LANG_CXX11
inline void ListCryptoKeyVersionsRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}
#endif
inline void ListCryptoKeyVersionsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}
inline void ListCryptoKeyVersionsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}
inline ::std::string* ListCryptoKeyVersionsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeyVersionsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}
inline ::std::string* ListCryptoKeyVersionsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsRequest.page_token)
}

// -------------------------------------------------------------------

// ListKeyRingsResponse

// repeated .google.cloud.kms.v1.KeyRing key_rings = 1;
inline int ListKeyRingsResponse::key_rings_size() const {
  return key_rings_.size();
}
inline ::google::cloud::kms::v1::KeyRing* ListKeyRingsResponse::mutable_key_rings(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListKeyRingsResponse.key_rings)
  return key_rings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::KeyRing >*
ListKeyRingsResponse::mutable_key_rings() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.kms.v1.ListKeyRingsResponse.key_rings)
  return &key_rings_;
}
inline const ::google::cloud::kms::v1::KeyRing& ListKeyRingsResponse::key_rings(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsResponse.key_rings)
  return key_rings_.Get(index);
}
inline ::google::cloud::kms::v1::KeyRing* ListKeyRingsResponse::add_key_rings() {
  // @@protoc_insertion_point(field_add:google.cloud.kms.v1.ListKeyRingsResponse.key_rings)
  return key_rings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::KeyRing >&
ListKeyRingsResponse::key_rings() const {
  // @@protoc_insertion_point(field_list:google.cloud.kms.v1.ListKeyRingsResponse.key_rings)
  return key_rings_;
}

// string next_page_token = 2;
inline void ListKeyRingsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListKeyRingsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListKeyRingsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListKeyRingsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}
#endif
inline void ListKeyRingsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}
inline void ListKeyRingsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}
inline ::std::string* ListKeyRingsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListKeyRingsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListKeyRingsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}
inline ::std::string* ListKeyRingsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListKeyRingsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListKeyRingsResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListKeyRingsResponse::clear_total_size() {
  total_size_ = 0;
}
inline ::google::protobuf::int32 ListKeyRingsResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListKeyRingsResponse.total_size)
  return total_size_;
}
inline void ListKeyRingsResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListKeyRingsResponse.total_size)
}

// -------------------------------------------------------------------

// ListCryptoKeysResponse

// repeated .google.cloud.kms.v1.CryptoKey crypto_keys = 1;
inline int ListCryptoKeysResponse::crypto_keys_size() const {
  return crypto_keys_.size();
}
inline ::google::cloud::kms::v1::CryptoKey* ListCryptoKeysResponse::mutable_crypto_keys(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeysResponse.crypto_keys)
  return crypto_keys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKey >*
ListCryptoKeysResponse::mutable_crypto_keys() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.kms.v1.ListCryptoKeysResponse.crypto_keys)
  return &crypto_keys_;
}
inline const ::google::cloud::kms::v1::CryptoKey& ListCryptoKeysResponse::crypto_keys(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysResponse.crypto_keys)
  return crypto_keys_.Get(index);
}
inline ::google::cloud::kms::v1::CryptoKey* ListCryptoKeysResponse::add_crypto_keys() {
  // @@protoc_insertion_point(field_add:google.cloud.kms.v1.ListCryptoKeysResponse.crypto_keys)
  return crypto_keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKey >&
ListCryptoKeysResponse::crypto_keys() const {
  // @@protoc_insertion_point(field_list:google.cloud.kms.v1.ListCryptoKeysResponse.crypto_keys)
  return crypto_keys_;
}

// string next_page_token = 2;
inline void ListCryptoKeysResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeysResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListCryptoKeysResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}
#if LANG_CXX11
inline void ListCryptoKeysResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}
#endif
inline void ListCryptoKeysResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}
inline void ListCryptoKeysResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}
inline ::std::string* ListCryptoKeysResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeysResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeysResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}
inline ::std::string* ListCryptoKeysResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeysResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeysResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListCryptoKeysResponse::clear_total_size() {
  total_size_ = 0;
}
inline ::google::protobuf::int32 ListCryptoKeysResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeysResponse.total_size)
  return total_size_;
}
inline void ListCryptoKeysResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeysResponse.total_size)
}

// -------------------------------------------------------------------

// ListCryptoKeyVersionsResponse

// repeated .google.cloud.kms.v1.CryptoKeyVersion crypto_key_versions = 1;
inline int ListCryptoKeyVersionsResponse::crypto_key_versions_size() const {
  return crypto_key_versions_.size();
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* ListCryptoKeyVersionsResponse::mutable_crypto_key_versions(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.crypto_key_versions)
  return crypto_key_versions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKeyVersion >*
ListCryptoKeyVersionsResponse::mutable_crypto_key_versions() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.crypto_key_versions)
  return &crypto_key_versions_;
}
inline const ::google::cloud::kms::v1::CryptoKeyVersion& ListCryptoKeyVersionsResponse::crypto_key_versions(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.crypto_key_versions)
  return crypto_key_versions_.Get(index);
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* ListCryptoKeyVersionsResponse::add_crypto_key_versions() {
  // @@protoc_insertion_point(field_add:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.crypto_key_versions)
  return crypto_key_versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::kms::v1::CryptoKeyVersion >&
ListCryptoKeyVersionsResponse::crypto_key_versions() const {
  // @@protoc_insertion_point(field_list:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.crypto_key_versions)
  return crypto_key_versions_;
}

// string next_page_token = 2;
inline void ListCryptoKeyVersionsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListCryptoKeyVersionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListCryptoKeyVersionsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}
#if LANG_CXX11
inline void ListCryptoKeyVersionsResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}
#endif
inline void ListCryptoKeyVersionsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}
inline void ListCryptoKeyVersionsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}
inline ::std::string* ListCryptoKeyVersionsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListCryptoKeyVersionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}
inline ::std::string* ListCryptoKeyVersionsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListCryptoKeyVersionsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListCryptoKeyVersionsResponse::clear_total_size() {
  total_size_ = 0;
}
inline ::google::protobuf::int32 ListCryptoKeyVersionsResponse::total_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.total_size)
  return total_size_;
}
inline void ListCryptoKeyVersionsResponse::set_total_size(::google::protobuf::int32 value) {
  
  total_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.ListCryptoKeyVersionsResponse.total_size)
}

// -------------------------------------------------------------------

// GetKeyRingRequest

// string name = 1;
inline void GetKeyRingRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetKeyRingRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.GetKeyRingRequest.name)
  return name_.Get();
}
inline void GetKeyRingRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.GetKeyRingRequest.name)
}
#if LANG_CXX11
inline void GetKeyRingRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.GetKeyRingRequest.name)
}
#endif
inline void GetKeyRingRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.GetKeyRingRequest.name)
}
inline void GetKeyRingRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.GetKeyRingRequest.name)
}
inline ::std::string* GetKeyRingRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.GetKeyRingRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetKeyRingRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.GetKeyRingRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetKeyRingRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.GetKeyRingRequest.name)
}
inline ::std::string* GetKeyRingRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.GetKeyRingRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetKeyRingRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.GetKeyRingRequest.name)
}

// -------------------------------------------------------------------

// GetCryptoKeyRequest

// string name = 1;
inline void GetCryptoKeyRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetCryptoKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.GetCryptoKeyRequest.name)
  return name_.Get();
}
inline void GetCryptoKeyRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}
#if LANG_CXX11
inline void GetCryptoKeyRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}
#endif
inline void GetCryptoKeyRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}
inline void GetCryptoKeyRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}
inline ::std::string* GetCryptoKeyRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.GetCryptoKeyRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetCryptoKeyRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.GetCryptoKeyRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetCryptoKeyRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}
inline ::std::string* GetCryptoKeyRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.GetCryptoKeyRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetCryptoKeyRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.GetCryptoKeyRequest.name)
}

// -------------------------------------------------------------------

// GetCryptoKeyVersionRequest

// string name = 1;
inline void GetCryptoKeyVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetCryptoKeyVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
  return name_.Get();
}
inline void GetCryptoKeyVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}
#if LANG_CXX11
inline void GetCryptoKeyVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}
#endif
inline void GetCryptoKeyVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}
inline void GetCryptoKeyVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}
inline ::std::string* GetCryptoKeyVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetCryptoKeyVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetCryptoKeyVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}
inline ::std::string* GetCryptoKeyVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetCryptoKeyVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.GetCryptoKeyVersionRequest.name)
}

// -------------------------------------------------------------------

// CreateKeyRingRequest

// string parent = 1;
inline void CreateKeyRingRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateKeyRingRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateKeyRingRequest.parent)
  return parent_.Get();
}
inline void CreateKeyRingRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}
#if LANG_CXX11
inline void CreateKeyRingRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}
#endif
inline void CreateKeyRingRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}
inline void CreateKeyRingRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}
inline ::std::string* CreateKeyRingRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateKeyRingRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateKeyRingRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateKeyRingRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateKeyRingRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}
inline ::std::string* CreateKeyRingRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateKeyRingRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateKeyRingRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.parent)
}

// string key_ring_id = 2;
inline void CreateKeyRingRequest::clear_key_ring_id() {
  key_ring_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateKeyRingRequest::key_ring_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
  return key_ring_id_.Get();
}
inline void CreateKeyRingRequest::set_key_ring_id(const ::std::string& value) {
  
  key_ring_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}
#if LANG_CXX11
inline void CreateKeyRingRequest::set_key_ring_id(::std::string&& value) {
  
  key_ring_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}
#endif
inline void CreateKeyRingRequest::set_key_ring_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_ring_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}
inline void CreateKeyRingRequest::set_key_ring_id(const char* value,
    size_t size) {
  
  key_ring_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}
inline ::std::string* CreateKeyRingRequest::mutable_key_ring_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
  return key_ring_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateKeyRingRequest::release_key_ring_id() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
  
  return key_ring_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateKeyRingRequest::set_allocated_key_ring_id(::std::string* key_ring_id) {
  if (key_ring_id != NULL) {
    
  } else {
    
  }
  key_ring_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_ring_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}
inline ::std::string* CreateKeyRingRequest::unsafe_arena_release_key_ring_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_ring_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateKeyRingRequest::unsafe_arena_set_allocated_key_ring_id(
    ::std::string* key_ring_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key_ring_id != NULL) {
    
  } else {
    
  }
  key_ring_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key_ring_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.key_ring_id)
}

// .google.cloud.kms.v1.KeyRing key_ring = 3;
inline bool CreateKeyRingRequest::has_key_ring() const {
  return this != internal_default_instance() && key_ring_ != NULL;
}
inline const ::google::cloud::kms::v1::KeyRing& CreateKeyRingRequest::_internal_key_ring() const {
  return *key_ring_;
}
inline const ::google::cloud::kms::v1::KeyRing& CreateKeyRingRequest::key_ring() const {
  const ::google::cloud::kms::v1::KeyRing* p = key_ring_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::kms::v1::KeyRing*>(
      &::google::cloud::kms::v1::_KeyRing_default_instance_);
}
inline ::google::cloud::kms::v1::KeyRing* CreateKeyRingRequest::release_key_ring() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
  
  ::google::cloud::kms::v1::KeyRing* temp = key_ring_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  key_ring_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::KeyRing* CreateKeyRingRequest::unsafe_arena_release_key_ring() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
  
  ::google::cloud::kms::v1::KeyRing* temp = key_ring_;
  key_ring_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::KeyRing* CreateKeyRingRequest::mutable_key_ring() {
  
  if (key_ring_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::kms::v1::KeyRing>(GetArenaNoVirtual());
    key_ring_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
  return key_ring_;
}
inline void CreateKeyRingRequest::set_allocated_key_ring(::google::cloud::kms::v1::KeyRing* key_ring) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_ring_);
  }
  if (key_ring) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(key_ring)->GetArena();
    if (message_arena != submessage_arena) {
      key_ring = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_ring, submessage_arena);
    }
    
  } else {
    
  }
  key_ring_ = key_ring;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateKeyRingRequest.key_ring)
}

// -------------------------------------------------------------------

// CreateCryptoKeyRequest

// string parent = 1;
inline void CreateCryptoKeyRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateCryptoKeyRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
  return parent_.Get();
}
inline void CreateCryptoKeyRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}
#if LANG_CXX11
inline void CreateCryptoKeyRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}
#endif
inline void CreateCryptoKeyRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}
inline void CreateCryptoKeyRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}
inline ::std::string* CreateCryptoKeyRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateCryptoKeyRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateCryptoKeyRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}
inline ::std::string* CreateCryptoKeyRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateCryptoKeyRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.parent)
}

// string crypto_key_id = 2;
inline void CreateCryptoKeyRequest::clear_crypto_key_id() {
  crypto_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateCryptoKeyRequest::crypto_key_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
  return crypto_key_id_.Get();
}
inline void CreateCryptoKeyRequest::set_crypto_key_id(const ::std::string& value) {
  
  crypto_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}
#if LANG_CXX11
inline void CreateCryptoKeyRequest::set_crypto_key_id(::std::string&& value) {
  
  crypto_key_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}
#endif
inline void CreateCryptoKeyRequest::set_crypto_key_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  crypto_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}
inline void CreateCryptoKeyRequest::set_crypto_key_id(const char* value,
    size_t size) {
  
  crypto_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}
inline ::std::string* CreateCryptoKeyRequest::mutable_crypto_key_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
  return crypto_key_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateCryptoKeyRequest::release_crypto_key_id() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
  
  return crypto_key_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateCryptoKeyRequest::set_allocated_crypto_key_id(::std::string* crypto_key_id) {
  if (crypto_key_id != NULL) {
    
  } else {
    
  }
  crypto_key_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), crypto_key_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}
inline ::std::string* CreateCryptoKeyRequest::unsafe_arena_release_crypto_key_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return crypto_key_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateCryptoKeyRequest::unsafe_arena_set_allocated_crypto_key_id(
    ::std::string* crypto_key_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (crypto_key_id != NULL) {
    
  } else {
    
  }
  crypto_key_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      crypto_key_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key_id)
}

// .google.cloud.kms.v1.CryptoKey crypto_key = 3;
inline bool CreateCryptoKeyRequest::has_crypto_key() const {
  return this != internal_default_instance() && crypto_key_ != NULL;
}
inline const ::google::cloud::kms::v1::CryptoKey& CreateCryptoKeyRequest::_internal_crypto_key() const {
  return *crypto_key_;
}
inline const ::google::cloud::kms::v1::CryptoKey& CreateCryptoKeyRequest::crypto_key() const {
  const ::google::cloud::kms::v1::CryptoKey* p = crypto_key_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::kms::v1::CryptoKey*>(
      &::google::cloud::kms::v1::_CryptoKey_default_instance_);
}
inline ::google::cloud::kms::v1::CryptoKey* CreateCryptoKeyRequest::release_crypto_key() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
  
  ::google::cloud::kms::v1::CryptoKey* temp = crypto_key_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  crypto_key_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKey* CreateCryptoKeyRequest::unsafe_arena_release_crypto_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
  
  ::google::cloud::kms::v1::CryptoKey* temp = crypto_key_;
  crypto_key_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKey* CreateCryptoKeyRequest::mutable_crypto_key() {
  
  if (crypto_key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::kms::v1::CryptoKey>(GetArenaNoVirtual());
    crypto_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
  return crypto_key_;
}
inline void CreateCryptoKeyRequest::set_allocated_crypto_key(::google::cloud::kms::v1::CryptoKey* crypto_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crypto_key_);
  }
  if (crypto_key) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crypto_key)->GetArena();
    if (message_arena != submessage_arena) {
      crypto_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crypto_key, submessage_arena);
    }
    
  } else {
    
  }
  crypto_key_ = crypto_key;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateCryptoKeyRequest.crypto_key)
}

// -------------------------------------------------------------------

// CreateCryptoKeyVersionRequest

// string parent = 1;
inline void CreateCryptoKeyVersionRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateCryptoKeyVersionRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
  return parent_.Get();
}
inline void CreateCryptoKeyVersionRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}
#if LANG_CXX11
inline void CreateCryptoKeyVersionRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}
#endif
inline void CreateCryptoKeyVersionRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}
inline void CreateCryptoKeyVersionRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}
inline ::std::string* CreateCryptoKeyVersionRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateCryptoKeyVersionRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateCryptoKeyVersionRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}
inline ::std::string* CreateCryptoKeyVersionRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateCryptoKeyVersionRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.parent)
}

// .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 2;
inline bool CreateCryptoKeyVersionRequest::has_crypto_key_version() const {
  return this != internal_default_instance() && crypto_key_version_ != NULL;
}
inline const ::google::cloud::kms::v1::CryptoKeyVersion& CreateCryptoKeyVersionRequest::_internal_crypto_key_version() const {
  return *crypto_key_version_;
}
inline const ::google::cloud::kms::v1::CryptoKeyVersion& CreateCryptoKeyVersionRequest::crypto_key_version() const {
  const ::google::cloud::kms::v1::CryptoKeyVersion* p = crypto_key_version_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::kms::v1::CryptoKeyVersion*>(
      &::google::cloud::kms::v1::_CryptoKeyVersion_default_instance_);
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* CreateCryptoKeyVersionRequest::release_crypto_key_version() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
  
  ::google::cloud::kms::v1::CryptoKeyVersion* temp = crypto_key_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  crypto_key_version_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* CreateCryptoKeyVersionRequest::unsafe_arena_release_crypto_key_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
  
  ::google::cloud::kms::v1::CryptoKeyVersion* temp = crypto_key_version_;
  crypto_key_version_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* CreateCryptoKeyVersionRequest::mutable_crypto_key_version() {
  
  if (crypto_key_version_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::kms::v1::CryptoKeyVersion>(GetArenaNoVirtual());
    crypto_key_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
  return crypto_key_version_;
}
inline void CreateCryptoKeyVersionRequest::set_allocated_crypto_key_version(::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crypto_key_version_);
  }
  if (crypto_key_version) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crypto_key_version)->GetArena();
    if (message_arena != submessage_arena) {
      crypto_key_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crypto_key_version, submessage_arena);
    }
    
  } else {
    
  }
  crypto_key_version_ = crypto_key_version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.CreateCryptoKeyVersionRequest.crypto_key_version)
}

// -------------------------------------------------------------------

// UpdateCryptoKeyRequest

// .google.cloud.kms.v1.CryptoKey crypto_key = 1;
inline bool UpdateCryptoKeyRequest::has_crypto_key() const {
  return this != internal_default_instance() && crypto_key_ != NULL;
}
inline const ::google::cloud::kms::v1::CryptoKey& UpdateCryptoKeyRequest::_internal_crypto_key() const {
  return *crypto_key_;
}
inline const ::google::cloud::kms::v1::CryptoKey& UpdateCryptoKeyRequest::crypto_key() const {
  const ::google::cloud::kms::v1::CryptoKey* p = crypto_key_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::kms::v1::CryptoKey*>(
      &::google::cloud::kms::v1::_CryptoKey_default_instance_);
}
inline ::google::cloud::kms::v1::CryptoKey* UpdateCryptoKeyRequest::release_crypto_key() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
  
  ::google::cloud::kms::v1::CryptoKey* temp = crypto_key_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  crypto_key_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKey* UpdateCryptoKeyRequest::unsafe_arena_release_crypto_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
  
  ::google::cloud::kms::v1::CryptoKey* temp = crypto_key_;
  crypto_key_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKey* UpdateCryptoKeyRequest::mutable_crypto_key() {
  
  if (crypto_key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::kms::v1::CryptoKey>(GetArenaNoVirtual());
    crypto_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
  return crypto_key_;
}
inline void UpdateCryptoKeyRequest::set_allocated_crypto_key(::google::cloud::kms::v1::CryptoKey* crypto_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crypto_key_);
  }
  if (crypto_key) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crypto_key)->GetArena();
    if (message_arena != submessage_arena) {
      crypto_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crypto_key, submessage_arena);
    }
    
  } else {
    
  }
  crypto_key_ = crypto_key;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyRequest.crypto_key)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateCryptoKeyRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateCryptoKeyRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateCryptoKeyRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
  return update_mask_;
}
inline void UpdateCryptoKeyRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyRequest.update_mask)
}

// -------------------------------------------------------------------

// UpdateCryptoKeyVersionRequest

// .google.cloud.kms.v1.CryptoKeyVersion crypto_key_version = 1;
inline bool UpdateCryptoKeyVersionRequest::has_crypto_key_version() const {
  return this != internal_default_instance() && crypto_key_version_ != NULL;
}
inline const ::google::cloud::kms::v1::CryptoKeyVersion& UpdateCryptoKeyVersionRequest::_internal_crypto_key_version() const {
  return *crypto_key_version_;
}
inline const ::google::cloud::kms::v1::CryptoKeyVersion& UpdateCryptoKeyVersionRequest::crypto_key_version() const {
  const ::google::cloud::kms::v1::CryptoKeyVersion* p = crypto_key_version_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::kms::v1::CryptoKeyVersion*>(
      &::google::cloud::kms::v1::_CryptoKeyVersion_default_instance_);
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* UpdateCryptoKeyVersionRequest::release_crypto_key_version() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
  
  ::google::cloud::kms::v1::CryptoKeyVersion* temp = crypto_key_version_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  crypto_key_version_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* UpdateCryptoKeyVersionRequest::unsafe_arena_release_crypto_key_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
  
  ::google::cloud::kms::v1::CryptoKeyVersion* temp = crypto_key_version_;
  crypto_key_version_ = NULL;
  return temp;
}
inline ::google::cloud::kms::v1::CryptoKeyVersion* UpdateCryptoKeyVersionRequest::mutable_crypto_key_version() {
  
  if (crypto_key_version_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::kms::v1::CryptoKeyVersion>(GetArenaNoVirtual());
    crypto_key_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
  return crypto_key_version_;
}
inline void UpdateCryptoKeyVersionRequest::set_allocated_crypto_key_version(::google::cloud::kms::v1::CryptoKeyVersion* crypto_key_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(crypto_key_version_);
  }
  if (crypto_key_version) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(crypto_key_version)->GetArena();
    if (message_arena != submessage_arena) {
      crypto_key_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crypto_key_version, submessage_arena);
    }
    
  } else {
    
  }
  crypto_key_version_ = crypto_key_version;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.crypto_key_version)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateCryptoKeyVersionRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateCryptoKeyVersionRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateCryptoKeyVersionRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyVersionRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyVersionRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateCryptoKeyVersionRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
  return update_mask_;
}
inline void UpdateCryptoKeyVersionRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyVersionRequest.update_mask)
}

// -------------------------------------------------------------------

// EncryptRequest

// string name = 1;
inline void EncryptRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EncryptRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.EncryptRequest.name)
  return name_.Get();
}
inline void EncryptRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.EncryptRequest.name)
}
#if LANG_CXX11
inline void EncryptRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.EncryptRequest.name)
}
#endif
inline void EncryptRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.EncryptRequest.name)
}
inline void EncryptRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.EncryptRequest.name)
}
inline ::std::string* EncryptRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.EncryptRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EncryptRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.EncryptRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EncryptRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.EncryptRequest.name)
}
inline ::std::string* EncryptRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.EncryptRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EncryptRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.EncryptRequest.name)
}

// bytes plaintext = 2;
inline void EncryptRequest::clear_plaintext() {
  plaintext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EncryptRequest::plaintext() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.EncryptRequest.plaintext)
  return plaintext_.Get();
}
inline void EncryptRequest::set_plaintext(const ::std::string& value) {
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.EncryptRequest.plaintext)
}
#if LANG_CXX11
inline void EncryptRequest::set_plaintext(::std::string&& value) {
  
  plaintext_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.EncryptRequest.plaintext)
}
#endif
inline void EncryptRequest::set_plaintext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.EncryptRequest.plaintext)
}
inline void EncryptRequest::set_plaintext(const void* value,
    size_t size) {
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.EncryptRequest.plaintext)
}
inline ::std::string* EncryptRequest::mutable_plaintext() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.EncryptRequest.plaintext)
  return plaintext_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EncryptRequest::release_plaintext() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.EncryptRequest.plaintext)
  
  return plaintext_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EncryptRequest::set_allocated_plaintext(::std::string* plaintext) {
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.EncryptRequest.plaintext)
}
inline ::std::string* EncryptRequest::unsafe_arena_release_plaintext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.EncryptRequest.plaintext)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return plaintext_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EncryptRequest::unsafe_arena_set_allocated_plaintext(
    ::std::string* plaintext) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      plaintext, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.EncryptRequest.plaintext)
}

// bytes additional_authenticated_data = 3;
inline void EncryptRequest::clear_additional_authenticated_data() {
  additional_authenticated_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EncryptRequest::additional_authenticated_data() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
  return additional_authenticated_data_.Get();
}
inline void EncryptRequest::set_additional_authenticated_data(const ::std::string& value) {
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}
#if LANG_CXX11
inline void EncryptRequest::set_additional_authenticated_data(::std::string&& value) {
  
  additional_authenticated_data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}
#endif
inline void EncryptRequest::set_additional_authenticated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}
inline void EncryptRequest::set_additional_authenticated_data(const void* value,
    size_t size) {
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}
inline ::std::string* EncryptRequest::mutable_additional_authenticated_data() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
  return additional_authenticated_data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EncryptRequest::release_additional_authenticated_data() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
  
  return additional_authenticated_data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EncryptRequest::set_allocated_additional_authenticated_data(::std::string* additional_authenticated_data) {
  if (additional_authenticated_data != NULL) {
    
  } else {
    
  }
  additional_authenticated_data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), additional_authenticated_data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}
inline ::std::string* EncryptRequest::unsafe_arena_release_additional_authenticated_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return additional_authenticated_data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EncryptRequest::unsafe_arena_set_allocated_additional_authenticated_data(
    ::std::string* additional_authenticated_data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (additional_authenticated_data != NULL) {
    
  } else {
    
  }
  additional_authenticated_data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      additional_authenticated_data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.EncryptRequest.additional_authenticated_data)
}

// -------------------------------------------------------------------

// DecryptRequest

// string name = 1;
inline void DecryptRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DecryptRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.DecryptRequest.name)
  return name_.Get();
}
inline void DecryptRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.DecryptRequest.name)
}
#if LANG_CXX11
inline void DecryptRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.DecryptRequest.name)
}
#endif
inline void DecryptRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.DecryptRequest.name)
}
inline void DecryptRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.DecryptRequest.name)
}
inline ::std::string* DecryptRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.DecryptRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DecryptRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.DecryptRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DecryptRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.DecryptRequest.name)
}
inline ::std::string* DecryptRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.DecryptRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DecryptRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.DecryptRequest.name)
}

// bytes ciphertext = 2;
inline void DecryptRequest::clear_ciphertext() {
  ciphertext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DecryptRequest::ciphertext() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.DecryptRequest.ciphertext)
  return ciphertext_.Get();
}
inline void DecryptRequest::set_ciphertext(const ::std::string& value) {
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.DecryptRequest.ciphertext)
}
#if LANG_CXX11
inline void DecryptRequest::set_ciphertext(::std::string&& value) {
  
  ciphertext_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.DecryptRequest.ciphertext)
}
#endif
inline void DecryptRequest::set_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.DecryptRequest.ciphertext)
}
inline void DecryptRequest::set_ciphertext(const void* value,
    size_t size) {
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.DecryptRequest.ciphertext)
}
inline ::std::string* DecryptRequest::mutable_ciphertext() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.DecryptRequest.ciphertext)
  return ciphertext_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DecryptRequest::release_ciphertext() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.DecryptRequest.ciphertext)
  
  return ciphertext_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DecryptRequest::set_allocated_ciphertext(::std::string* ciphertext) {
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphertext,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.DecryptRequest.ciphertext)
}
inline ::std::string* DecryptRequest::unsafe_arena_release_ciphertext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.DecryptRequest.ciphertext)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ciphertext_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DecryptRequest::unsafe_arena_set_allocated_ciphertext(
    ::std::string* ciphertext) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ciphertext, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.DecryptRequest.ciphertext)
}

// bytes additional_authenticated_data = 3;
inline void DecryptRequest::clear_additional_authenticated_data() {
  additional_authenticated_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DecryptRequest::additional_authenticated_data() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
  return additional_authenticated_data_.Get();
}
inline void DecryptRequest::set_additional_authenticated_data(const ::std::string& value) {
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}
#if LANG_CXX11
inline void DecryptRequest::set_additional_authenticated_data(::std::string&& value) {
  
  additional_authenticated_data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}
#endif
inline void DecryptRequest::set_additional_authenticated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}
inline void DecryptRequest::set_additional_authenticated_data(const void* value,
    size_t size) {
  
  additional_authenticated_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}
inline ::std::string* DecryptRequest::mutable_additional_authenticated_data() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
  return additional_authenticated_data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DecryptRequest::release_additional_authenticated_data() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
  
  return additional_authenticated_data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DecryptRequest::set_allocated_additional_authenticated_data(::std::string* additional_authenticated_data) {
  if (additional_authenticated_data != NULL) {
    
  } else {
    
  }
  additional_authenticated_data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), additional_authenticated_data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}
inline ::std::string* DecryptRequest::unsafe_arena_release_additional_authenticated_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return additional_authenticated_data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DecryptRequest::unsafe_arena_set_allocated_additional_authenticated_data(
    ::std::string* additional_authenticated_data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (additional_authenticated_data != NULL) {
    
  } else {
    
  }
  additional_authenticated_data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      additional_authenticated_data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.DecryptRequest.additional_authenticated_data)
}

// -------------------------------------------------------------------

// DecryptResponse

// bytes plaintext = 1;
inline void DecryptResponse::clear_plaintext() {
  plaintext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DecryptResponse::plaintext() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.DecryptResponse.plaintext)
  return plaintext_.Get();
}
inline void DecryptResponse::set_plaintext(const ::std::string& value) {
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.DecryptResponse.plaintext)
}
#if LANG_CXX11
inline void DecryptResponse::set_plaintext(::std::string&& value) {
  
  plaintext_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.DecryptResponse.plaintext)
}
#endif
inline void DecryptResponse::set_plaintext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.DecryptResponse.plaintext)
}
inline void DecryptResponse::set_plaintext(const void* value,
    size_t size) {
  
  plaintext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.DecryptResponse.plaintext)
}
inline ::std::string* DecryptResponse::mutable_plaintext() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.DecryptResponse.plaintext)
  return plaintext_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DecryptResponse::release_plaintext() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.DecryptResponse.plaintext)
  
  return plaintext_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DecryptResponse::set_allocated_plaintext(::std::string* plaintext) {
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.DecryptResponse.plaintext)
}
inline ::std::string* DecryptResponse::unsafe_arena_release_plaintext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.DecryptResponse.plaintext)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return plaintext_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DecryptResponse::unsafe_arena_set_allocated_plaintext(
    ::std::string* plaintext) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      plaintext, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.DecryptResponse.plaintext)
}

// -------------------------------------------------------------------

// EncryptResponse

// string name = 1;
inline void EncryptResponse::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EncryptResponse::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.EncryptResponse.name)
  return name_.Get();
}
inline void EncryptResponse::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.EncryptResponse.name)
}
#if LANG_CXX11
inline void EncryptResponse::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.EncryptResponse.name)
}
#endif
inline void EncryptResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.EncryptResponse.name)
}
inline void EncryptResponse::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.EncryptResponse.name)
}
inline ::std::string* EncryptResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.EncryptResponse.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EncryptResponse::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.EncryptResponse.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EncryptResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.EncryptResponse.name)
}
inline ::std::string* EncryptResponse::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.EncryptResponse.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EncryptResponse::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.EncryptResponse.name)
}

// bytes ciphertext = 2;
inline void EncryptResponse::clear_ciphertext() {
  ciphertext_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EncryptResponse::ciphertext() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.EncryptResponse.ciphertext)
  return ciphertext_.Get();
}
inline void EncryptResponse::set_ciphertext(const ::std::string& value) {
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.EncryptResponse.ciphertext)
}
#if LANG_CXX11
inline void EncryptResponse::set_ciphertext(::std::string&& value) {
  
  ciphertext_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.EncryptResponse.ciphertext)
}
#endif
inline void EncryptResponse::set_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.EncryptResponse.ciphertext)
}
inline void EncryptResponse::set_ciphertext(const void* value,
    size_t size) {
  
  ciphertext_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.EncryptResponse.ciphertext)
}
inline ::std::string* EncryptResponse::mutable_ciphertext() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.EncryptResponse.ciphertext)
  return ciphertext_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EncryptResponse::release_ciphertext() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.EncryptResponse.ciphertext)
  
  return ciphertext_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EncryptResponse::set_allocated_ciphertext(::std::string* ciphertext) {
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphertext,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.EncryptResponse.ciphertext)
}
inline ::std::string* EncryptResponse::unsafe_arena_release_ciphertext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.EncryptResponse.ciphertext)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ciphertext_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EncryptResponse::unsafe_arena_set_allocated_ciphertext(
    ::std::string* ciphertext) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ciphertext, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.EncryptResponse.ciphertext)
}

// -------------------------------------------------------------------

// UpdateCryptoKeyPrimaryVersionRequest

// string name = 1;
inline void UpdateCryptoKeyPrimaryVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateCryptoKeyPrimaryVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
  return name_.Get();
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}
#if LANG_CXX11
inline void UpdateCryptoKeyPrimaryVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}
#endif
inline void UpdateCryptoKeyPrimaryVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateCryptoKeyPrimaryVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.name)
}

// string crypto_key_version_id = 2;
inline void UpdateCryptoKeyPrimaryVersionRequest::clear_crypto_key_version_id() {
  crypto_key_version_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateCryptoKeyPrimaryVersionRequest::crypto_key_version_id() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
  return crypto_key_version_id_.Get();
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_crypto_key_version_id(const ::std::string& value) {
  
  crypto_key_version_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}
#if LANG_CXX11
inline void UpdateCryptoKeyPrimaryVersionRequest::set_crypto_key_version_id(::std::string&& value) {
  
  crypto_key_version_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}
#endif
inline void UpdateCryptoKeyPrimaryVersionRequest::set_crypto_key_version_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  crypto_key_version_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_crypto_key_version_id(const char* value,
    size_t size) {
  
  crypto_key_version_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::mutable_crypto_key_version_id() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
  return crypto_key_version_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::release_crypto_key_version_id() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
  
  return crypto_key_version_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UpdateCryptoKeyPrimaryVersionRequest::set_allocated_crypto_key_version_id(::std::string* crypto_key_version_id) {
  if (crypto_key_version_id != NULL) {
    
  } else {
    
  }
  crypto_key_version_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), crypto_key_version_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}
inline ::std::string* UpdateCryptoKeyPrimaryVersionRequest::unsafe_arena_release_crypto_key_version_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return crypto_key_version_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateCryptoKeyPrimaryVersionRequest::unsafe_arena_set_allocated_crypto_key_version_id(
    ::std::string* crypto_key_version_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (crypto_key_version_id != NULL) {
    
  } else {
    
  }
  crypto_key_version_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      crypto_key_version_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.UpdateCryptoKeyPrimaryVersionRequest.crypto_key_version_id)
}

// -------------------------------------------------------------------

// DestroyCryptoKeyVersionRequest

// string name = 1;
inline void DestroyCryptoKeyVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DestroyCryptoKeyVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
  return name_.Get();
}
inline void DestroyCryptoKeyVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}
#if LANG_CXX11
inline void DestroyCryptoKeyVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}
#endif
inline void DestroyCryptoKeyVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}
inline void DestroyCryptoKeyVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}
inline ::std::string* DestroyCryptoKeyVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DestroyCryptoKeyVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DestroyCryptoKeyVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}
inline ::std::string* DestroyCryptoKeyVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DestroyCryptoKeyVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.DestroyCryptoKeyVersionRequest.name)
}

// -------------------------------------------------------------------

// RestoreCryptoKeyVersionRequest

// string name = 1;
inline void RestoreCryptoKeyVersionRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& RestoreCryptoKeyVersionRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
  return name_.Get();
}
inline void RestoreCryptoKeyVersionRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}
#if LANG_CXX11
inline void RestoreCryptoKeyVersionRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}
#endif
inline void RestoreCryptoKeyVersionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}
inline void RestoreCryptoKeyVersionRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}
inline ::std::string* RestoreCryptoKeyVersionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* RestoreCryptoKeyVersionRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void RestoreCryptoKeyVersionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}
inline ::std::string* RestoreCryptoKeyVersionRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void RestoreCryptoKeyVersionRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.kms.v1.RestoreCryptoKeyVersionRequest.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace kms
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fkms_2fv1_2fservice_2eproto
