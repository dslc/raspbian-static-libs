// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/iot/v1/device_manager.proto

#ifndef PROTOBUF_INCLUDED_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto
#define PROTOBUF_INCLUDED_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/cloud/iot/v1/resources.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
#include "google/iam/v1/policy.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto 

namespace protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto
namespace google {
namespace cloud {
namespace iot {
namespace v1 {
class CreateDeviceRegistryRequest;
class CreateDeviceRegistryRequestDefaultTypeInternal;
extern CreateDeviceRegistryRequestDefaultTypeInternal _CreateDeviceRegistryRequest_default_instance_;
class CreateDeviceRequest;
class CreateDeviceRequestDefaultTypeInternal;
extern CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
class DeleteDeviceRegistryRequest;
class DeleteDeviceRegistryRequestDefaultTypeInternal;
extern DeleteDeviceRegistryRequestDefaultTypeInternal _DeleteDeviceRegistryRequest_default_instance_;
class DeleteDeviceRequest;
class DeleteDeviceRequestDefaultTypeInternal;
extern DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;
class GetDeviceRegistryRequest;
class GetDeviceRegistryRequestDefaultTypeInternal;
extern GetDeviceRegistryRequestDefaultTypeInternal _GetDeviceRegistryRequest_default_instance_;
class GetDeviceRequest;
class GetDeviceRequestDefaultTypeInternal;
extern GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;
class ListDeviceConfigVersionsRequest;
class ListDeviceConfigVersionsRequestDefaultTypeInternal;
extern ListDeviceConfigVersionsRequestDefaultTypeInternal _ListDeviceConfigVersionsRequest_default_instance_;
class ListDeviceConfigVersionsResponse;
class ListDeviceConfigVersionsResponseDefaultTypeInternal;
extern ListDeviceConfigVersionsResponseDefaultTypeInternal _ListDeviceConfigVersionsResponse_default_instance_;
class ListDeviceRegistriesRequest;
class ListDeviceRegistriesRequestDefaultTypeInternal;
extern ListDeviceRegistriesRequestDefaultTypeInternal _ListDeviceRegistriesRequest_default_instance_;
class ListDeviceRegistriesResponse;
class ListDeviceRegistriesResponseDefaultTypeInternal;
extern ListDeviceRegistriesResponseDefaultTypeInternal _ListDeviceRegistriesResponse_default_instance_;
class ListDeviceStatesRequest;
class ListDeviceStatesRequestDefaultTypeInternal;
extern ListDeviceStatesRequestDefaultTypeInternal _ListDeviceStatesRequest_default_instance_;
class ListDeviceStatesResponse;
class ListDeviceStatesResponseDefaultTypeInternal;
extern ListDeviceStatesResponseDefaultTypeInternal _ListDeviceStatesResponse_default_instance_;
class ListDevicesRequest;
class ListDevicesRequestDefaultTypeInternal;
extern ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;
class ListDevicesResponse;
class ListDevicesResponseDefaultTypeInternal;
extern ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;
class ModifyCloudToDeviceConfigRequest;
class ModifyCloudToDeviceConfigRequestDefaultTypeInternal;
extern ModifyCloudToDeviceConfigRequestDefaultTypeInternal _ModifyCloudToDeviceConfigRequest_default_instance_;
class UpdateDeviceRegistryRequest;
class UpdateDeviceRegistryRequestDefaultTypeInternal;
extern UpdateDeviceRegistryRequestDefaultTypeInternal _UpdateDeviceRegistryRequest_default_instance_;
class UpdateDeviceRequest;
class UpdateDeviceRequestDefaultTypeInternal;
extern UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;
}  // namespace v1
}  // namespace iot
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::cloud::iot::v1::CreateDeviceRegistryRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::CreateDeviceRegistryRequest>(Arena*);
template<> ::google::cloud::iot::v1::CreateDeviceRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::CreateDeviceRequest>(Arena*);
template<> ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::DeleteDeviceRegistryRequest>(Arena*);
template<> ::google::cloud::iot::v1::DeleteDeviceRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::DeleteDeviceRequest>(Arena*);
template<> ::google::cloud::iot::v1::GetDeviceRegistryRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::GetDeviceRegistryRequest>(Arena*);
template<> ::google::cloud::iot::v1::GetDeviceRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::GetDeviceRequest>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceConfigVersionsRequest>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceRegistriesRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceRegistriesRequest>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceRegistriesResponse* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceRegistriesResponse>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceStatesRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceStatesRequest>(Arena*);
template<> ::google::cloud::iot::v1::ListDeviceStatesResponse* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDeviceStatesResponse>(Arena*);
template<> ::google::cloud::iot::v1::ListDevicesRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDevicesRequest>(Arena*);
template<> ::google::cloud::iot::v1::ListDevicesResponse* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ListDevicesResponse>(Arena*);
template<> ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest>(Arena*);
template<> ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::UpdateDeviceRegistryRequest>(Arena*);
template<> ::google::cloud::iot::v1::UpdateDeviceRequest* Arena::CreateMaybeMessage<::google::cloud::iot::v1::UpdateDeviceRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace cloud {
namespace iot {
namespace v1 {

// ===================================================================

class CreateDeviceRegistryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.CreateDeviceRegistryRequest) */ {
 public:
  CreateDeviceRegistryRequest();
  virtual ~CreateDeviceRegistryRequest();

  CreateDeviceRegistryRequest(const CreateDeviceRegistryRequest& from);

  inline CreateDeviceRegistryRequest& operator=(const CreateDeviceRegistryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDeviceRegistryRequest(CreateDeviceRegistryRequest&& from) noexcept
    : CreateDeviceRegistryRequest() {
    *this = ::std::move(from);
  }

  inline CreateDeviceRegistryRequest& operator=(CreateDeviceRegistryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDeviceRegistryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDeviceRegistryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceRegistryRequest*>(
               &_CreateDeviceRegistryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(CreateDeviceRegistryRequest* other);
  void Swap(CreateDeviceRegistryRequest* other);
  friend void swap(CreateDeviceRegistryRequest& a, CreateDeviceRegistryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDeviceRegistryRequest* New() const final {
    return CreateMaybeMessage<CreateDeviceRegistryRequest>(NULL);
  }

  CreateDeviceRegistryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDeviceRegistryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDeviceRegistryRequest& from);
  void MergeFrom(const CreateDeviceRegistryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceRegistryRequest* other);
  protected:
  explicit CreateDeviceRegistryRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.iot.v1.DeviceRegistry device_registry = 2;
  bool has_device_registry() const;
  void clear_device_registry();
  static const int kDeviceRegistryFieldNumber = 2;
  private:
  const ::google::cloud::iot::v1::DeviceRegistry& _internal_device_registry() const;
  public:
  const ::google::cloud::iot::v1::DeviceRegistry& device_registry() const;
  ::google::cloud::iot::v1::DeviceRegistry* release_device_registry();
  ::google::cloud::iot::v1::DeviceRegistry* mutable_device_registry();
  void set_allocated_device_registry(::google::cloud::iot::v1::DeviceRegistry* device_registry);
  void unsafe_arena_set_allocated_device_registry(
      ::google::cloud::iot::v1::DeviceRegistry* device_registry);
  ::google::cloud::iot::v1::DeviceRegistry* unsafe_arena_release_device_registry();

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.CreateDeviceRegistryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::iot::v1::DeviceRegistry* device_registry_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDeviceRegistryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.GetDeviceRegistryRequest) */ {
 public:
  GetDeviceRegistryRequest();
  virtual ~GetDeviceRegistryRequest();

  GetDeviceRegistryRequest(const GetDeviceRegistryRequest& from);

  inline GetDeviceRegistryRequest& operator=(const GetDeviceRegistryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceRegistryRequest(GetDeviceRegistryRequest&& from) noexcept
    : GetDeviceRegistryRequest() {
    *this = ::std::move(from);
  }

  inline GetDeviceRegistryRequest& operator=(GetDeviceRegistryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeviceRegistryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceRegistryRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceRegistryRequest*>(
               &_GetDeviceRegistryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GetDeviceRegistryRequest* other);
  void Swap(GetDeviceRegistryRequest* other);
  friend void swap(GetDeviceRegistryRequest& a, GetDeviceRegistryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceRegistryRequest* New() const final {
    return CreateMaybeMessage<GetDeviceRegistryRequest>(NULL);
  }

  GetDeviceRegistryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDeviceRegistryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDeviceRegistryRequest& from);
  void MergeFrom(const GetDeviceRegistryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDeviceRegistryRequest* other);
  protected:
  explicit GetDeviceRegistryRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.GetDeviceRegistryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteDeviceRegistryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.DeleteDeviceRegistryRequest) */ {
 public:
  DeleteDeviceRegistryRequest();
  virtual ~DeleteDeviceRegistryRequest();

  DeleteDeviceRegistryRequest(const DeleteDeviceRegistryRequest& from);

  inline DeleteDeviceRegistryRequest& operator=(const DeleteDeviceRegistryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDeviceRegistryRequest(DeleteDeviceRegistryRequest&& from) noexcept
    : DeleteDeviceRegistryRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceRegistryRequest& operator=(DeleteDeviceRegistryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDeviceRegistryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDeviceRegistryRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceRegistryRequest*>(
               &_DeleteDeviceRegistryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(DeleteDeviceRegistryRequest* other);
  void Swap(DeleteDeviceRegistryRequest* other);
  friend void swap(DeleteDeviceRegistryRequest& a, DeleteDeviceRegistryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDeviceRegistryRequest* New() const final {
    return CreateMaybeMessage<DeleteDeviceRegistryRequest>(NULL);
  }

  DeleteDeviceRegistryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDeviceRegistryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDeviceRegistryRequest& from);
  void MergeFrom(const DeleteDeviceRegistryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceRegistryRequest* other);
  protected:
  explicit DeleteDeviceRegistryRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.DeleteDeviceRegistryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateDeviceRegistryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.UpdateDeviceRegistryRequest) */ {
 public:
  UpdateDeviceRegistryRequest();
  virtual ~UpdateDeviceRegistryRequest();

  UpdateDeviceRegistryRequest(const UpdateDeviceRegistryRequest& from);

  inline UpdateDeviceRegistryRequest& operator=(const UpdateDeviceRegistryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateDeviceRegistryRequest(UpdateDeviceRegistryRequest&& from) noexcept
    : UpdateDeviceRegistryRequest() {
    *this = ::std::move(from);
  }

  inline UpdateDeviceRegistryRequest& operator=(UpdateDeviceRegistryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDeviceRegistryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDeviceRegistryRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceRegistryRequest*>(
               &_UpdateDeviceRegistryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(UpdateDeviceRegistryRequest* other);
  void Swap(UpdateDeviceRegistryRequest* other);
  friend void swap(UpdateDeviceRegistryRequest& a, UpdateDeviceRegistryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateDeviceRegistryRequest* New() const final {
    return CreateMaybeMessage<UpdateDeviceRegistryRequest>(NULL);
  }

  UpdateDeviceRegistryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDeviceRegistryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateDeviceRegistryRequest& from);
  void MergeFrom(const UpdateDeviceRegistryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDeviceRegistryRequest* other);
  protected:
  explicit UpdateDeviceRegistryRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.iot.v1.DeviceRegistry device_registry = 1;
  bool has_device_registry() const;
  void clear_device_registry();
  static const int kDeviceRegistryFieldNumber = 1;
  private:
  const ::google::cloud::iot::v1::DeviceRegistry& _internal_device_registry() const;
  public:
  const ::google::cloud::iot::v1::DeviceRegistry& device_registry() const;
  ::google::cloud::iot::v1::DeviceRegistry* release_device_registry();
  ::google::cloud::iot::v1::DeviceRegistry* mutable_device_registry();
  void set_allocated_device_registry(::google::cloud::iot::v1::DeviceRegistry* device_registry);
  void unsafe_arena_set_allocated_device_registry(
      ::google::cloud::iot::v1::DeviceRegistry* device_registry);
  ::google::cloud::iot::v1::DeviceRegistry* unsafe_arena_release_device_registry();

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.UpdateDeviceRegistryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::iot::v1::DeviceRegistry* device_registry_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceRegistriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceRegistriesRequest) */ {
 public:
  ListDeviceRegistriesRequest();
  virtual ~ListDeviceRegistriesRequest();

  ListDeviceRegistriesRequest(const ListDeviceRegistriesRequest& from);

  inline ListDeviceRegistriesRequest& operator=(const ListDeviceRegistriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceRegistriesRequest(ListDeviceRegistriesRequest&& from) noexcept
    : ListDeviceRegistriesRequest() {
    *this = ::std::move(from);
  }

  inline ListDeviceRegistriesRequest& operator=(ListDeviceRegistriesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceRegistriesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceRegistriesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDeviceRegistriesRequest*>(
               &_ListDeviceRegistriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ListDeviceRegistriesRequest* other);
  void Swap(ListDeviceRegistriesRequest* other);
  friend void swap(ListDeviceRegistriesRequest& a, ListDeviceRegistriesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceRegistriesRequest* New() const final {
    return CreateMaybeMessage<ListDeviceRegistriesRequest>(NULL);
  }

  ListDeviceRegistriesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceRegistriesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceRegistriesRequest& from);
  void MergeFrom(const ListDeviceRegistriesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceRegistriesRequest* other);
  protected:
  explicit ListDeviceRegistriesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceRegistriesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceRegistriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceRegistriesResponse) */ {
 public:
  ListDeviceRegistriesResponse();
  virtual ~ListDeviceRegistriesResponse();

  ListDeviceRegistriesResponse(const ListDeviceRegistriesResponse& from);

  inline ListDeviceRegistriesResponse& operator=(const ListDeviceRegistriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceRegistriesResponse(ListDeviceRegistriesResponse&& from) noexcept
    : ListDeviceRegistriesResponse() {
    *this = ::std::move(from);
  }

  inline ListDeviceRegistriesResponse& operator=(ListDeviceRegistriesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceRegistriesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceRegistriesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDeviceRegistriesResponse*>(
               &_ListDeviceRegistriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ListDeviceRegistriesResponse* other);
  void Swap(ListDeviceRegistriesResponse* other);
  friend void swap(ListDeviceRegistriesResponse& a, ListDeviceRegistriesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceRegistriesResponse* New() const final {
    return CreateMaybeMessage<ListDeviceRegistriesResponse>(NULL);
  }

  ListDeviceRegistriesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceRegistriesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceRegistriesResponse& from);
  void MergeFrom(const ListDeviceRegistriesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceRegistriesResponse* other);
  protected:
  explicit ListDeviceRegistriesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.iot.v1.DeviceRegistry device_registries = 1;
  int device_registries_size() const;
  void clear_device_registries();
  static const int kDeviceRegistriesFieldNumber = 1;
  ::google::cloud::iot::v1::DeviceRegistry* mutable_device_registries(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceRegistry >*
      mutable_device_registries();
  const ::google::cloud::iot::v1::DeviceRegistry& device_registries(int index) const;
  ::google::cloud::iot::v1::DeviceRegistry* add_device_registries();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceRegistry >&
      device_registries() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceRegistriesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceRegistry > device_registries_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.CreateDeviceRequest) */ {
 public:
  CreateDeviceRequest();
  virtual ~CreateDeviceRequest();

  CreateDeviceRequest(const CreateDeviceRequest& from);

  inline CreateDeviceRequest& operator=(const CreateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDeviceRequest(CreateDeviceRequest&& from) noexcept
    : CreateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline CreateDeviceRequest& operator=(CreateDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceRequest*>(
               &_CreateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(CreateDeviceRequest* other);
  void Swap(CreateDeviceRequest* other);
  friend void swap(CreateDeviceRequest& a, CreateDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDeviceRequest* New() const final {
    return CreateMaybeMessage<CreateDeviceRequest>(NULL);
  }

  CreateDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDeviceRequest& from);
  void MergeFrom(const CreateDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceRequest* other);
  protected:
  explicit CreateDeviceRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // .google.cloud.iot.v1.Device device = 2;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 2;
  private:
  const ::google::cloud::iot::v1::Device& _internal_device() const;
  public:
  const ::google::cloud::iot::v1::Device& device() const;
  ::google::cloud::iot::v1::Device* release_device();
  ::google::cloud::iot::v1::Device* mutable_device();
  void set_allocated_device(::google::cloud::iot::v1::Device* device);
  void unsafe_arena_set_allocated_device(
      ::google::cloud::iot::v1::Device* device);
  ::google::cloud::iot::v1::Device* unsafe_arena_release_device();

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.CreateDeviceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::cloud::iot::v1::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.GetDeviceRequest) */ {
 public:
  GetDeviceRequest();
  virtual ~GetDeviceRequest();

  GetDeviceRequest(const GetDeviceRequest& from);

  inline GetDeviceRequest& operator=(const GetDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceRequest(GetDeviceRequest&& from) noexcept
    : GetDeviceRequest() {
    *this = ::std::move(from);
  }

  inline GetDeviceRequest& operator=(GetDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceRequest*>(
               &_GetDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(GetDeviceRequest* other);
  void Swap(GetDeviceRequest* other);
  friend void swap(GetDeviceRequest& a, GetDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceRequest* New() const final {
    return CreateMaybeMessage<GetDeviceRequest>(NULL);
  }

  GetDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDeviceRequest& from);
  void MergeFrom(const GetDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDeviceRequest* other);
  protected:
  explicit GetDeviceRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .google.protobuf.FieldMask field_mask = 2;
  bool has_field_mask() const;
  void clear_field_mask();
  static const int kFieldMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_field_mask() const;
  public:
  const ::google::protobuf::FieldMask& field_mask() const;
  ::google::protobuf::FieldMask* release_field_mask();
  ::google::protobuf::FieldMask* mutable_field_mask();
  void set_allocated_field_mask(::google::protobuf::FieldMask* field_mask);
  void unsafe_arena_set_allocated_field_mask(
      ::google::protobuf::FieldMask* field_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_field_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.GetDeviceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::FieldMask* field_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.UpdateDeviceRequest) */ {
 public:
  UpdateDeviceRequest();
  virtual ~UpdateDeviceRequest();

  UpdateDeviceRequest(const UpdateDeviceRequest& from);

  inline UpdateDeviceRequest& operator=(const UpdateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateDeviceRequest(UpdateDeviceRequest&& from) noexcept
    : UpdateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline UpdateDeviceRequest& operator=(UpdateDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceRequest*>(
               &_UpdateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(UpdateDeviceRequest* other);
  void Swap(UpdateDeviceRequest* other);
  friend void swap(UpdateDeviceRequest& a, UpdateDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateDeviceRequest* New() const final {
    return CreateMaybeMessage<UpdateDeviceRequest>(NULL);
  }

  UpdateDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateDeviceRequest& from);
  void MergeFrom(const UpdateDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDeviceRequest* other);
  protected:
  explicit UpdateDeviceRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.cloud.iot.v1.Device device = 2;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 2;
  private:
  const ::google::cloud::iot::v1::Device& _internal_device() const;
  public:
  const ::google::cloud::iot::v1::Device& device() const;
  ::google::cloud::iot::v1::Device* release_device();
  ::google::cloud::iot::v1::Device* mutable_device();
  void set_allocated_device(::google::cloud::iot::v1::Device* device);
  void unsafe_arena_set_allocated_device(
      ::google::cloud::iot::v1::Device* device);
  ::google::cloud::iot::v1::Device* unsafe_arena_release_device();

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.UpdateDeviceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::cloud::iot::v1::Device* device_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.DeleteDeviceRequest) */ {
 public:
  DeleteDeviceRequest();
  virtual ~DeleteDeviceRequest();

  DeleteDeviceRequest(const DeleteDeviceRequest& from);

  inline DeleteDeviceRequest& operator=(const DeleteDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDeviceRequest(DeleteDeviceRequest&& from) noexcept
    : DeleteDeviceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceRequest& operator=(DeleteDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceRequest*>(
               &_DeleteDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(DeleteDeviceRequest* other);
  void Swap(DeleteDeviceRequest* other);
  friend void swap(DeleteDeviceRequest& a, DeleteDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDeviceRequest* New() const final {
    return CreateMaybeMessage<DeleteDeviceRequest>(NULL);
  }

  DeleteDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDeviceRequest& from);
  void MergeFrom(const DeleteDeviceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceRequest* other);
  protected:
  explicit DeleteDeviceRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.DeleteDeviceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDevicesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDevicesRequest) */ {
 public:
  ListDevicesRequest();
  virtual ~ListDevicesRequest();

  ListDevicesRequest(const ListDevicesRequest& from);

  inline ListDevicesRequest& operator=(const ListDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDevicesRequest(ListDevicesRequest&& from) noexcept
    : ListDevicesRequest() {
    *this = ::std::move(from);
  }

  inline ListDevicesRequest& operator=(ListDevicesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDevicesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDevicesRequest*>(
               &_ListDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ListDevicesRequest* other);
  void Swap(ListDevicesRequest* other);
  friend void swap(ListDevicesRequest& a, ListDevicesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDevicesRequest* New() const final {
    return CreateMaybeMessage<ListDevicesRequest>(NULL);
  }

  ListDevicesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDevicesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDevicesRequest& from);
  void MergeFrom(const ListDevicesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesRequest* other);
  protected:
  explicit ListDevicesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 device_num_ids = 2;
  int device_num_ids_size() const;
  void clear_device_num_ids();
  static const int kDeviceNumIdsFieldNumber = 2;
  ::google::protobuf::uint64 device_num_ids(int index) const;
  void set_device_num_ids(int index, ::google::protobuf::uint64 value);
  void add_device_num_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      device_num_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_device_num_ids();

  // repeated string device_ids = 3;
  int device_ids_size() const;
  void clear_device_ids();
  static const int kDeviceIdsFieldNumber = 3;
  const ::std::string& device_ids(int index) const;
  ::std::string* mutable_device_ids(int index);
  void set_device_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_device_ids(int index, ::std::string&& value);
  #endif
  void set_device_ids(int index, const char* value);
  void set_device_ids(int index, const char* value, size_t size);
  ::std::string* add_device_ids();
  void add_device_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_device_ids(::std::string&& value);
  #endif
  void add_device_ids(const char* value);
  void add_device_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& device_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_device_ids();

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parent();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parent(
      ::std::string* parent);

  // string page_token = 101;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 101;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // .google.protobuf.FieldMask field_mask = 4;
  bool has_field_mask() const;
  void clear_field_mask();
  static const int kFieldMaskFieldNumber = 4;
  private:
  const ::google::protobuf::FieldMask& _internal_field_mask() const;
  public:
  const ::google::protobuf::FieldMask& field_mask() const;
  ::google::protobuf::FieldMask* release_field_mask();
  ::google::protobuf::FieldMask* mutable_field_mask();
  void set_allocated_field_mask(::google::protobuf::FieldMask* field_mask);
  void unsafe_arena_set_allocated_field_mask(
      ::google::protobuf::FieldMask* field_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_field_mask();

  // int32 page_size = 100;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 100;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDevicesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > device_num_ids_;
  mutable int _device_num_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> device_ids_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::FieldMask* field_mask_;
  ::google::protobuf::int32 page_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDevicesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDevicesResponse) */ {
 public:
  ListDevicesResponse();
  virtual ~ListDevicesResponse();

  ListDevicesResponse(const ListDevicesResponse& from);

  inline ListDevicesResponse& operator=(const ListDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDevicesResponse(ListDevicesResponse&& from) noexcept
    : ListDevicesResponse() {
    *this = ::std::move(from);
  }

  inline ListDevicesResponse& operator=(ListDevicesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDevicesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDevicesResponse*>(
               &_ListDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ListDevicesResponse* other);
  void Swap(ListDevicesResponse* other);
  friend void swap(ListDevicesResponse& a, ListDevicesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDevicesResponse* New() const final {
    return CreateMaybeMessage<ListDevicesResponse>(NULL);
  }

  ListDevicesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDevicesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDevicesResponse& from);
  void MergeFrom(const ListDevicesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesResponse* other);
  protected:
  explicit ListDevicesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.iot.v1.Device devices = 1;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 1;
  ::google::cloud::iot::v1::Device* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::Device >*
      mutable_devices();
  const ::google::cloud::iot::v1::Device& devices(int index) const;
  ::google::cloud::iot::v1::Device* add_devices();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::Device >&
      devices() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_next_page_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDevicesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::Device > devices_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyCloudToDeviceConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest) */ {
 public:
  ModifyCloudToDeviceConfigRequest();
  virtual ~ModifyCloudToDeviceConfigRequest();

  ModifyCloudToDeviceConfigRequest(const ModifyCloudToDeviceConfigRequest& from);

  inline ModifyCloudToDeviceConfigRequest& operator=(const ModifyCloudToDeviceConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifyCloudToDeviceConfigRequest(ModifyCloudToDeviceConfigRequest&& from) noexcept
    : ModifyCloudToDeviceConfigRequest() {
    *this = ::std::move(from);
  }

  inline ModifyCloudToDeviceConfigRequest& operator=(ModifyCloudToDeviceConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyCloudToDeviceConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyCloudToDeviceConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ModifyCloudToDeviceConfigRequest*>(
               &_ModifyCloudToDeviceConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(ModifyCloudToDeviceConfigRequest* other);
  void Swap(ModifyCloudToDeviceConfigRequest* other);
  friend void swap(ModifyCloudToDeviceConfigRequest& a, ModifyCloudToDeviceConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifyCloudToDeviceConfigRequest* New() const final {
    return CreateMaybeMessage<ModifyCloudToDeviceConfigRequest>(NULL);
  }

  ModifyCloudToDeviceConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ModifyCloudToDeviceConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ModifyCloudToDeviceConfigRequest& from);
  void MergeFrom(const ModifyCloudToDeviceConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModifyCloudToDeviceConfigRequest* other);
  protected:
  explicit ModifyCloudToDeviceConfigRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // bytes binary_data = 3;
  void clear_binary_data();
  static const int kBinaryDataFieldNumber = 3;
  const ::std::string& binary_data() const;
  void set_binary_data(const ::std::string& value);
  #if LANG_CXX11
  void set_binary_data(::std::string&& value);
  #endif
  void set_binary_data(const char* value);
  void set_binary_data(const void* value, size_t size);
  ::std::string* mutable_binary_data();
  ::std::string* release_binary_data();
  void set_allocated_binary_data(::std::string* binary_data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_binary_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_binary_data(
      ::std::string* binary_data);

  // int64 version_to_update = 2;
  void clear_version_to_update();
  static const int kVersionToUpdateFieldNumber = 2;
  ::google::protobuf::int64 version_to_update() const;
  void set_version_to_update(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr binary_data_;
  ::google::protobuf::int64 version_to_update_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceConfigVersionsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceConfigVersionsRequest) */ {
 public:
  ListDeviceConfigVersionsRequest();
  virtual ~ListDeviceConfigVersionsRequest();

  ListDeviceConfigVersionsRequest(const ListDeviceConfigVersionsRequest& from);

  inline ListDeviceConfigVersionsRequest& operator=(const ListDeviceConfigVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceConfigVersionsRequest(ListDeviceConfigVersionsRequest&& from) noexcept
    : ListDeviceConfigVersionsRequest() {
    *this = ::std::move(from);
  }

  inline ListDeviceConfigVersionsRequest& operator=(ListDeviceConfigVersionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceConfigVersionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceConfigVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListDeviceConfigVersionsRequest*>(
               &_ListDeviceConfigVersionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(ListDeviceConfigVersionsRequest* other);
  void Swap(ListDeviceConfigVersionsRequest* other);
  friend void swap(ListDeviceConfigVersionsRequest& a, ListDeviceConfigVersionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceConfigVersionsRequest* New() const final {
    return CreateMaybeMessage<ListDeviceConfigVersionsRequest>(NULL);
  }

  ListDeviceConfigVersionsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceConfigVersionsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceConfigVersionsRequest& from);
  void MergeFrom(const ListDeviceConfigVersionsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceConfigVersionsRequest* other);
  protected:
  explicit ListDeviceConfigVersionsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // int32 num_versions = 2;
  void clear_num_versions();
  static const int kNumVersionsFieldNumber = 2;
  ::google::protobuf::int32 num_versions() const;
  void set_num_versions(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceConfigVersionsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 num_versions_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceConfigVersionsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceConfigVersionsResponse) */ {
 public:
  ListDeviceConfigVersionsResponse();
  virtual ~ListDeviceConfigVersionsResponse();

  ListDeviceConfigVersionsResponse(const ListDeviceConfigVersionsResponse& from);

  inline ListDeviceConfigVersionsResponse& operator=(const ListDeviceConfigVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceConfigVersionsResponse(ListDeviceConfigVersionsResponse&& from) noexcept
    : ListDeviceConfigVersionsResponse() {
    *this = ::std::move(from);
  }

  inline ListDeviceConfigVersionsResponse& operator=(ListDeviceConfigVersionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceConfigVersionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceConfigVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListDeviceConfigVersionsResponse*>(
               &_ListDeviceConfigVersionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(ListDeviceConfigVersionsResponse* other);
  void Swap(ListDeviceConfigVersionsResponse* other);
  friend void swap(ListDeviceConfigVersionsResponse& a, ListDeviceConfigVersionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceConfigVersionsResponse* New() const final {
    return CreateMaybeMessage<ListDeviceConfigVersionsResponse>(NULL);
  }

  ListDeviceConfigVersionsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceConfigVersionsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceConfigVersionsResponse& from);
  void MergeFrom(const ListDeviceConfigVersionsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceConfigVersionsResponse* other);
  protected:
  explicit ListDeviceConfigVersionsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.iot.v1.DeviceConfig device_configs = 1;
  int device_configs_size() const;
  void clear_device_configs();
  static const int kDeviceConfigsFieldNumber = 1;
  ::google::cloud::iot::v1::DeviceConfig* mutable_device_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceConfig >*
      mutable_device_configs();
  const ::google::cloud::iot::v1::DeviceConfig& device_configs(int index) const;
  ::google::cloud::iot::v1::DeviceConfig* add_device_configs();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceConfig >&
      device_configs() const;

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceConfigVersionsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceConfig > device_configs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceStatesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceStatesRequest) */ {
 public:
  ListDeviceStatesRequest();
  virtual ~ListDeviceStatesRequest();

  ListDeviceStatesRequest(const ListDeviceStatesRequest& from);

  inline ListDeviceStatesRequest& operator=(const ListDeviceStatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceStatesRequest(ListDeviceStatesRequest&& from) noexcept
    : ListDeviceStatesRequest() {
    *this = ::std::move(from);
  }

  inline ListDeviceStatesRequest& operator=(ListDeviceStatesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceStatesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceStatesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDeviceStatesRequest*>(
               &_ListDeviceStatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(ListDeviceStatesRequest* other);
  void Swap(ListDeviceStatesRequest* other);
  friend void swap(ListDeviceStatesRequest& a, ListDeviceStatesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceStatesRequest* New() const final {
    return CreateMaybeMessage<ListDeviceStatesRequest>(NULL);
  }

  ListDeviceStatesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceStatesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceStatesRequest& from);
  void MergeFrom(const ListDeviceStatesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceStatesRequest* other);
  protected:
  explicit ListDeviceStatesRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // int32 num_states = 2;
  void clear_num_states();
  static const int kNumStatesFieldNumber = 2;
  ::google::protobuf::int32 num_states() const;
  void set_num_states(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceStatesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 num_states_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDeviceStatesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.cloud.iot.v1.ListDeviceStatesResponse) */ {
 public:
  ListDeviceStatesResponse();
  virtual ~ListDeviceStatesResponse();

  ListDeviceStatesResponse(const ListDeviceStatesResponse& from);

  inline ListDeviceStatesResponse& operator=(const ListDeviceStatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDeviceStatesResponse(ListDeviceStatesResponse&& from) noexcept
    : ListDeviceStatesResponse() {
    *this = ::std::move(from);
  }

  inline ListDeviceStatesResponse& operator=(ListDeviceStatesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDeviceStatesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDeviceStatesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDeviceStatesResponse*>(
               &_ListDeviceStatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(ListDeviceStatesResponse* other);
  void Swap(ListDeviceStatesResponse* other);
  friend void swap(ListDeviceStatesResponse& a, ListDeviceStatesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDeviceStatesResponse* New() const final {
    return CreateMaybeMessage<ListDeviceStatesResponse>(NULL);
  }

  ListDeviceStatesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDeviceStatesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDeviceStatesResponse& from);
  void MergeFrom(const ListDeviceStatesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDeviceStatesResponse* other);
  protected:
  explicit ListDeviceStatesResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.cloud.iot.v1.DeviceState device_states = 1;
  int device_states_size() const;
  void clear_device_states();
  static const int kDeviceStatesFieldNumber = 1;
  ::google::cloud::iot::v1::DeviceState* mutable_device_states(int index);
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceState >*
      mutable_device_states();
  const ::google::cloud::iot::v1::DeviceState& device_states(int index) const;
  ::google::cloud::iot::v1::DeviceState* add_device_states();
  const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceState >&
      device_states() const;

  // @@protoc_insertion_point(class_scope:google.cloud.iot.v1.ListDeviceStatesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceState > device_states_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateDeviceRegistryRequest

// string parent = 1;
inline void CreateDeviceRegistryRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateDeviceRegistryRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
  return parent_.Get();
}
inline void CreateDeviceRegistryRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}
#if LANG_CXX11
inline void CreateDeviceRegistryRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}
#endif
inline void CreateDeviceRegistryRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}
inline void CreateDeviceRegistryRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}
inline ::std::string* CreateDeviceRegistryRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateDeviceRegistryRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateDeviceRegistryRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}
inline ::std::string* CreateDeviceRegistryRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateDeviceRegistryRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.CreateDeviceRegistryRequest.parent)
}

// .google.cloud.iot.v1.DeviceRegistry device_registry = 2;
inline bool CreateDeviceRegistryRequest::has_device_registry() const {
  return this != internal_default_instance() && device_registry_ != NULL;
}
inline const ::google::cloud::iot::v1::DeviceRegistry& CreateDeviceRegistryRequest::_internal_device_registry() const {
  return *device_registry_;
}
inline const ::google::cloud::iot::v1::DeviceRegistry& CreateDeviceRegistryRequest::device_registry() const {
  const ::google::cloud::iot::v1::DeviceRegistry* p = device_registry_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.CreateDeviceRegistryRequest.device_registry)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::iot::v1::DeviceRegistry*>(
      &::google::cloud::iot::v1::_DeviceRegistry_default_instance_);
}
inline ::google::cloud::iot::v1::DeviceRegistry* CreateDeviceRegistryRequest::release_device_registry() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.CreateDeviceRegistryRequest.device_registry)
  
  ::google::cloud::iot::v1::DeviceRegistry* temp = device_registry_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  device_registry_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::DeviceRegistry* CreateDeviceRegistryRequest::unsafe_arena_release_device_registry() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.CreateDeviceRegistryRequest.device_registry)
  
  ::google::cloud::iot::v1::DeviceRegistry* temp = device_registry_;
  device_registry_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::DeviceRegistry* CreateDeviceRegistryRequest::mutable_device_registry() {
  
  if (device_registry_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::iot::v1::DeviceRegistry>(GetArenaNoVirtual());
    device_registry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.CreateDeviceRegistryRequest.device_registry)
  return device_registry_;
}
inline void CreateDeviceRegistryRequest::set_allocated_device_registry(::google::cloud::iot::v1::DeviceRegistry* device_registry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_registry_);
  }
  if (device_registry) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(device_registry)->GetArena();
    if (message_arena != submessage_arena) {
      device_registry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_registry, submessage_arena);
    }
    
  } else {
    
  }
  device_registry_ = device_registry;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.CreateDeviceRegistryRequest.device_registry)
}

// -------------------------------------------------------------------

// GetDeviceRegistryRequest

// string name = 1;
inline void GetDeviceRegistryRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetDeviceRegistryRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
  return name_.Get();
}
inline void GetDeviceRegistryRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}
#if LANG_CXX11
inline void GetDeviceRegistryRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}
#endif
inline void GetDeviceRegistryRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}
inline void GetDeviceRegistryRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}
inline ::std::string* GetDeviceRegistryRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetDeviceRegistryRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetDeviceRegistryRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}
inline ::std::string* GetDeviceRegistryRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetDeviceRegistryRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.GetDeviceRegistryRequest.name)
}

// -------------------------------------------------------------------

// DeleteDeviceRegistryRequest

// string name = 1;
inline void DeleteDeviceRegistryRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteDeviceRegistryRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
  return name_.Get();
}
inline void DeleteDeviceRegistryRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}
#if LANG_CXX11
inline void DeleteDeviceRegistryRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}
#endif
inline void DeleteDeviceRegistryRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}
inline void DeleteDeviceRegistryRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}
inline ::std::string* DeleteDeviceRegistryRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteDeviceRegistryRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteDeviceRegistryRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}
inline ::std::string* DeleteDeviceRegistryRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteDeviceRegistryRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeleteDeviceRegistryRequest.name)
}

// -------------------------------------------------------------------

// UpdateDeviceRegistryRequest

// .google.cloud.iot.v1.DeviceRegistry device_registry = 1;
inline bool UpdateDeviceRegistryRequest::has_device_registry() const {
  return this != internal_default_instance() && device_registry_ != NULL;
}
inline const ::google::cloud::iot::v1::DeviceRegistry& UpdateDeviceRegistryRequest::_internal_device_registry() const {
  return *device_registry_;
}
inline const ::google::cloud::iot::v1::DeviceRegistry& UpdateDeviceRegistryRequest::device_registry() const {
  const ::google::cloud::iot::v1::DeviceRegistry* p = device_registry_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.UpdateDeviceRegistryRequest.device_registry)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::iot::v1::DeviceRegistry*>(
      &::google::cloud::iot::v1::_DeviceRegistry_default_instance_);
}
inline ::google::cloud::iot::v1::DeviceRegistry* UpdateDeviceRegistryRequest::release_device_registry() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.UpdateDeviceRegistryRequest.device_registry)
  
  ::google::cloud::iot::v1::DeviceRegistry* temp = device_registry_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  device_registry_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::DeviceRegistry* UpdateDeviceRegistryRequest::unsafe_arena_release_device_registry() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.UpdateDeviceRegistryRequest.device_registry)
  
  ::google::cloud::iot::v1::DeviceRegistry* temp = device_registry_;
  device_registry_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::DeviceRegistry* UpdateDeviceRegistryRequest::mutable_device_registry() {
  
  if (device_registry_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::iot::v1::DeviceRegistry>(GetArenaNoVirtual());
    device_registry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.UpdateDeviceRegistryRequest.device_registry)
  return device_registry_;
}
inline void UpdateDeviceRegistryRequest::set_allocated_device_registry(::google::cloud::iot::v1::DeviceRegistry* device_registry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_registry_);
  }
  if (device_registry) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(device_registry)->GetArena();
    if (message_arena != submessage_arena) {
      device_registry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_registry, submessage_arena);
    }
    
  } else {
    
  }
  device_registry_ = device_registry;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.UpdateDeviceRegistryRequest.device_registry)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateDeviceRegistryRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRegistryRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRegistryRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.UpdateDeviceRegistryRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateDeviceRegistryRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.UpdateDeviceRegistryRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRegistryRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.UpdateDeviceRegistryRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRegistryRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.UpdateDeviceRegistryRequest.update_mask)
  return update_mask_;
}
inline void UpdateDeviceRegistryRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.UpdateDeviceRegistryRequest.update_mask)
}

// -------------------------------------------------------------------

// ListDeviceRegistriesRequest

// string parent = 1;
inline void ListDeviceRegistriesRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDeviceRegistriesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
  return parent_.Get();
}
inline void ListDeviceRegistriesRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}
#if LANG_CXX11
inline void ListDeviceRegistriesRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}
#endif
inline void ListDeviceRegistriesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}
inline void ListDeviceRegistriesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}
inline ::std::string* ListDeviceRegistriesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDeviceRegistriesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDeviceRegistriesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}
inline ::std::string* ListDeviceRegistriesRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDeviceRegistriesRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesRequest.parent)
}

// int32 page_size = 2;
inline void ListDeviceRegistriesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListDeviceRegistriesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_size)
  return page_size_;
}
inline void ListDeviceRegistriesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_size)
}

// string page_token = 3;
inline void ListDeviceRegistriesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDeviceRegistriesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
  return page_token_.Get();
}
inline void ListDeviceRegistriesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}
#if LANG_CXX11
inline void ListDeviceRegistriesRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}
#endif
inline void ListDeviceRegistriesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}
inline void ListDeviceRegistriesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}
inline ::std::string* ListDeviceRegistriesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDeviceRegistriesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDeviceRegistriesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}
inline ::std::string* ListDeviceRegistriesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDeviceRegistriesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesRequest.page_token)
}

// -------------------------------------------------------------------

// ListDeviceRegistriesResponse

// repeated .google.cloud.iot.v1.DeviceRegistry device_registries = 1;
inline int ListDeviceRegistriesResponse::device_registries_size() const {
  return device_registries_.size();
}
inline ::google::cloud::iot::v1::DeviceRegistry* ListDeviceRegistriesResponse::mutable_device_registries(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceRegistriesResponse.device_registries)
  return device_registries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceRegistry >*
ListDeviceRegistriesResponse::mutable_device_registries() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDeviceRegistriesResponse.device_registries)
  return &device_registries_;
}
inline const ::google::cloud::iot::v1::DeviceRegistry& ListDeviceRegistriesResponse::device_registries(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceRegistriesResponse.device_registries)
  return device_registries_.Get(index);
}
inline ::google::cloud::iot::v1::DeviceRegistry* ListDeviceRegistriesResponse::add_device_registries() {
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDeviceRegistriesResponse.device_registries)
  return device_registries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceRegistry >&
ListDeviceRegistriesResponse::device_registries() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDeviceRegistriesResponse.device_registries)
  return device_registries_;
}

// string next_page_token = 2;
inline void ListDeviceRegistriesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDeviceRegistriesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListDeviceRegistriesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListDeviceRegistriesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}
#endif
inline void ListDeviceRegistriesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}
inline void ListDeviceRegistriesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}
inline ::std::string* ListDeviceRegistriesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDeviceRegistriesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDeviceRegistriesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}
inline ::std::string* ListDeviceRegistriesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDeviceRegistriesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDeviceRegistriesResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateDeviceRequest

// string parent = 1;
inline void CreateDeviceRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CreateDeviceRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.CreateDeviceRequest.parent)
  return parent_.Get();
}
inline void CreateDeviceRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.CreateDeviceRequest.parent)
}
#if LANG_CXX11
inline void CreateDeviceRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.CreateDeviceRequest.parent)
}
#endif
inline void CreateDeviceRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.CreateDeviceRequest.parent)
}
inline void CreateDeviceRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.CreateDeviceRequest.parent)
}
inline ::std::string* CreateDeviceRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.CreateDeviceRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CreateDeviceRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.CreateDeviceRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CreateDeviceRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.CreateDeviceRequest.parent)
}
inline ::std::string* CreateDeviceRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.CreateDeviceRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CreateDeviceRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.CreateDeviceRequest.parent)
}

// .google.cloud.iot.v1.Device device = 2;
inline bool CreateDeviceRequest::has_device() const {
  return this != internal_default_instance() && device_ != NULL;
}
inline const ::google::cloud::iot::v1::Device& CreateDeviceRequest::_internal_device() const {
  return *device_;
}
inline const ::google::cloud::iot::v1::Device& CreateDeviceRequest::device() const {
  const ::google::cloud::iot::v1::Device* p = device_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.CreateDeviceRequest.device)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::iot::v1::Device*>(
      &::google::cloud::iot::v1::_Device_default_instance_);
}
inline ::google::cloud::iot::v1::Device* CreateDeviceRequest::release_device() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.CreateDeviceRequest.device)
  
  ::google::cloud::iot::v1::Device* temp = device_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  device_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::Device* CreateDeviceRequest::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.CreateDeviceRequest.device)
  
  ::google::cloud::iot::v1::Device* temp = device_;
  device_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::Device* CreateDeviceRequest::mutable_device() {
  
  if (device_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::iot::v1::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.CreateDeviceRequest.device)
  return device_;
}
inline void CreateDeviceRequest::set_allocated_device(::google::cloud::iot::v1::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(device)->GetArena();
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.CreateDeviceRequest.device)
}

// -------------------------------------------------------------------

// GetDeviceRequest

// string name = 1;
inline void GetDeviceRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetDeviceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.GetDeviceRequest.name)
  return name_.Get();
}
inline void GetDeviceRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.GetDeviceRequest.name)
}
#if LANG_CXX11
inline void GetDeviceRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.GetDeviceRequest.name)
}
#endif
inline void GetDeviceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.GetDeviceRequest.name)
}
inline void GetDeviceRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.GetDeviceRequest.name)
}
inline ::std::string* GetDeviceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.GetDeviceRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetDeviceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.GetDeviceRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GetDeviceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.GetDeviceRequest.name)
}
inline ::std::string* GetDeviceRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.GetDeviceRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetDeviceRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.GetDeviceRequest.name)
}

// .google.protobuf.FieldMask field_mask = 2;
inline bool GetDeviceRequest::has_field_mask() const {
  return this != internal_default_instance() && field_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& GetDeviceRequest::_internal_field_mask() const {
  return *field_mask_;
}
inline const ::google::protobuf::FieldMask& GetDeviceRequest::field_mask() const {
  const ::google::protobuf::FieldMask* p = field_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.GetDeviceRequest.field_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* GetDeviceRequest::release_field_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.GetDeviceRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  field_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* GetDeviceRequest::unsafe_arena_release_field_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.GetDeviceRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  field_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* GetDeviceRequest::mutable_field_mask() {
  
  if (field_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    field_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.GetDeviceRequest.field_mask)
  return field_mask_;
}
inline void GetDeviceRequest::set_allocated_field_mask(::google::protobuf::FieldMask* field_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(field_mask_);
  }
  if (field_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      field_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field_mask, submessage_arena);
    }
    
  } else {
    
  }
  field_mask_ = field_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.GetDeviceRequest.field_mask)
}

// -------------------------------------------------------------------

// UpdateDeviceRequest

// .google.cloud.iot.v1.Device device = 2;
inline bool UpdateDeviceRequest::has_device() const {
  return this != internal_default_instance() && device_ != NULL;
}
inline const ::google::cloud::iot::v1::Device& UpdateDeviceRequest::_internal_device() const {
  return *device_;
}
inline const ::google::cloud::iot::v1::Device& UpdateDeviceRequest::device() const {
  const ::google::cloud::iot::v1::Device* p = device_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.UpdateDeviceRequest.device)
  return p != NULL ? *p : *reinterpret_cast<const ::google::cloud::iot::v1::Device*>(
      &::google::cloud::iot::v1::_Device_default_instance_);
}
inline ::google::cloud::iot::v1::Device* UpdateDeviceRequest::release_device() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.UpdateDeviceRequest.device)
  
  ::google::cloud::iot::v1::Device* temp = device_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  device_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::Device* UpdateDeviceRequest::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.UpdateDeviceRequest.device)
  
  ::google::cloud::iot::v1::Device* temp = device_;
  device_ = NULL;
  return temp;
}
inline ::google::cloud::iot::v1::Device* UpdateDeviceRequest::mutable_device() {
  
  if (device_ == NULL) {
    auto* p = CreateMaybeMessage<::google::cloud::iot::v1::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.UpdateDeviceRequest.device)
  return device_;
}
inline void UpdateDeviceRequest::set_allocated_device(::google::cloud::iot::v1::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(device)->GetArena();
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.UpdateDeviceRequest.device)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateDeviceRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateDeviceRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.UpdateDeviceRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.UpdateDeviceRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.UpdateDeviceRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateDeviceRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.UpdateDeviceRequest.update_mask)
  return update_mask_;
}
inline void UpdateDeviceRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.UpdateDeviceRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteDeviceRequest

// string name = 1;
inline void DeleteDeviceRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteDeviceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.DeleteDeviceRequest.name)
  return name_.Get();
}
inline void DeleteDeviceRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.DeleteDeviceRequest.name)
}
#if LANG_CXX11
inline void DeleteDeviceRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.DeleteDeviceRequest.name)
}
#endif
inline void DeleteDeviceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.DeleteDeviceRequest.name)
}
inline void DeleteDeviceRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.DeleteDeviceRequest.name)
}
inline ::std::string* DeleteDeviceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.DeleteDeviceRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteDeviceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.DeleteDeviceRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void DeleteDeviceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.DeleteDeviceRequest.name)
}
inline ::std::string* DeleteDeviceRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.DeleteDeviceRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteDeviceRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeleteDeviceRequest.name)
}

// -------------------------------------------------------------------

// ListDevicesRequest

// string parent = 1;
inline void ListDevicesRequest::clear_parent() {
  parent_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDevicesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.parent)
  return parent_.Get();
}
inline void ListDevicesRequest::set_parent(const ::std::string& value) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.parent)
}
#if LANG_CXX11
inline void ListDevicesRequest::set_parent(::std::string&& value) {
  
  parent_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDevicesRequest.parent)
}
#endif
inline void ListDevicesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDevicesRequest.parent)
}
inline void ListDevicesRequest::set_parent(const char* value,
    size_t size) {
  
  parent_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDevicesRequest.parent)
}
inline ::std::string* ListDevicesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesRequest.parent)
  return parent_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDevicesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDevicesRequest.parent)
  
  return parent_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDevicesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDevicesRequest.parent)
}
inline ::std::string* ListDevicesRequest::unsafe_arena_release_parent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDevicesRequest.parent)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return parent_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDevicesRequest::unsafe_arena_set_allocated_parent(
    ::std::string* parent) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parent, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDevicesRequest.parent)
}

// repeated uint64 device_num_ids = 2;
inline int ListDevicesRequest::device_num_ids_size() const {
  return device_num_ids_.size();
}
inline void ListDevicesRequest::clear_device_num_ids() {
  device_num_ids_.Clear();
}
inline ::google::protobuf::uint64 ListDevicesRequest::device_num_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.device_num_ids)
  return device_num_ids_.Get(index);
}
inline void ListDevicesRequest::set_device_num_ids(int index, ::google::protobuf::uint64 value) {
  device_num_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.device_num_ids)
}
inline void ListDevicesRequest::add_device_num_ids(::google::protobuf::uint64 value) {
  device_num_ids_.Add(value);
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDevicesRequest.device_num_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListDevicesRequest::device_num_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDevicesRequest.device_num_ids)
  return device_num_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListDevicesRequest::mutable_device_num_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDevicesRequest.device_num_ids)
  return &device_num_ids_;
}

// repeated string device_ids = 3;
inline int ListDevicesRequest::device_ids_size() const {
  return device_ids_.size();
}
inline void ListDevicesRequest::clear_device_ids() {
  device_ids_.Clear();
}
inline const ::std::string& ListDevicesRequest::device_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  return device_ids_.Get(index);
}
inline ::std::string* ListDevicesRequest::mutable_device_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  return device_ids_.Mutable(index);
}
inline void ListDevicesRequest::set_device_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  device_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListDevicesRequest::set_device_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  device_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListDevicesRequest::set_device_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  device_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
inline void ListDevicesRequest::set_device_ids(int index, const char* value, size_t size) {
  device_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
inline ::std::string* ListDevicesRequest::add_device_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  return device_ids_.Add();
}
inline void ListDevicesRequest::add_device_ids(const ::std::string& value) {
  device_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
#if LANG_CXX11
inline void ListDevicesRequest::add_device_ids(::std::string&& value) {
  device_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
#endif
inline void ListDevicesRequest::add_device_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  device_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
inline void ListDevicesRequest::add_device_ids(const char* value, size_t size) {
  device_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.cloud.iot.v1.ListDevicesRequest.device_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListDevicesRequest::device_ids() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  return device_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListDevicesRequest::mutable_device_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDevicesRequest.device_ids)
  return &device_ids_;
}

// .google.protobuf.FieldMask field_mask = 4;
inline bool ListDevicesRequest::has_field_mask() const {
  return this != internal_default_instance() && field_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& ListDevicesRequest::_internal_field_mask() const {
  return *field_mask_;
}
inline const ::google::protobuf::FieldMask& ListDevicesRequest::field_mask() const {
  const ::google::protobuf::FieldMask* p = field_mask_;
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.field_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* ListDevicesRequest::release_field_mask() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDevicesRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  field_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* ListDevicesRequest::unsafe_arena_release_field_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDevicesRequest.field_mask)
  
  ::google::protobuf::FieldMask* temp = field_mask_;
  field_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* ListDevicesRequest::mutable_field_mask() {
  
  if (field_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    field_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesRequest.field_mask)
  return field_mask_;
}
inline void ListDevicesRequest::set_allocated_field_mask(::google::protobuf::FieldMask* field_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(field_mask_);
  }
  if (field_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      field_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field_mask, submessage_arena);
    }
    
  } else {
    
  }
  field_mask_ = field_mask;
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDevicesRequest.field_mask)
}

// int32 page_size = 100;
inline void ListDevicesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 ListDevicesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.page_size)
  return page_size_;
}
inline void ListDevicesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.page_size)
}

// string page_token = 101;
inline void ListDevicesRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDevicesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesRequest.page_token)
  return page_token_.Get();
}
inline void ListDevicesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesRequest.page_token)
}
#if LANG_CXX11
inline void ListDevicesRequest::set_page_token(::std::string&& value) {
  
  page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDevicesRequest.page_token)
}
#endif
inline void ListDevicesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDevicesRequest.page_token)
}
inline void ListDevicesRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDevicesRequest.page_token)
}
inline ::std::string* ListDevicesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDevicesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDevicesRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDevicesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDevicesRequest.page_token)
}
inline ::std::string* ListDevicesRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDevicesRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDevicesRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDevicesRequest.page_token)
}

// -------------------------------------------------------------------

// ListDevicesResponse

// repeated .google.cloud.iot.v1.Device devices = 1;
inline int ListDevicesResponse::devices_size() const {
  return devices_.size();
}
inline ::google::cloud::iot::v1::Device* ListDevicesResponse::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesResponse.devices)
  return devices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::Device >*
ListDevicesResponse::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDevicesResponse.devices)
  return &devices_;
}
inline const ::google::cloud::iot::v1::Device& ListDevicesResponse::devices(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesResponse.devices)
  return devices_.Get(index);
}
inline ::google::cloud::iot::v1::Device* ListDevicesResponse::add_devices() {
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDevicesResponse.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::Device >&
ListDevicesResponse::devices() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDevicesResponse.devices)
  return devices_;
}

// string next_page_token = 2;
inline void ListDevicesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDevicesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
  return next_page_token_.Get();
}
inline void ListDevicesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListDevicesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}
#endif
inline void ListDevicesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}
inline void ListDevicesResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}
inline ::std::string* ListDevicesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDevicesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDevicesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}
inline ::std::string* ListDevicesResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDevicesResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDevicesResponse.next_page_token)
}

// -------------------------------------------------------------------

// ModifyCloudToDeviceConfigRequest

// string name = 1;
inline void ModifyCloudToDeviceConfigRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ModifyCloudToDeviceConfigRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
  return name_.Get();
}
inline void ModifyCloudToDeviceConfigRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}
#if LANG_CXX11
inline void ModifyCloudToDeviceConfigRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}
#endif
inline void ModifyCloudToDeviceConfigRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}
inline void ModifyCloudToDeviceConfigRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ModifyCloudToDeviceConfigRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ModifyCloudToDeviceConfigRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.name)
}

// int64 version_to_update = 2;
inline void ModifyCloudToDeviceConfigRequest::clear_version_to_update() {
  version_to_update_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ModifyCloudToDeviceConfigRequest::version_to_update() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.version_to_update)
  return version_to_update_;
}
inline void ModifyCloudToDeviceConfigRequest::set_version_to_update(::google::protobuf::int64 value) {
  
  version_to_update_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.version_to_update)
}

// bytes binary_data = 3;
inline void ModifyCloudToDeviceConfigRequest::clear_binary_data() {
  binary_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ModifyCloudToDeviceConfigRequest::binary_data() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
  return binary_data_.Get();
}
inline void ModifyCloudToDeviceConfigRequest::set_binary_data(const ::std::string& value) {
  
  binary_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}
#if LANG_CXX11
inline void ModifyCloudToDeviceConfigRequest::set_binary_data(::std::string&& value) {
  
  binary_data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}
#endif
inline void ModifyCloudToDeviceConfigRequest::set_binary_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  binary_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}
inline void ModifyCloudToDeviceConfigRequest::set_binary_data(const void* value,
    size_t size) {
  
  binary_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::mutable_binary_data() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
  return binary_data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::release_binary_data() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
  
  return binary_data_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ModifyCloudToDeviceConfigRequest::set_allocated_binary_data(::std::string* binary_data) {
  if (binary_data != NULL) {
    
  } else {
    
  }
  binary_data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}
inline ::std::string* ModifyCloudToDeviceConfigRequest::unsafe_arena_release_binary_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return binary_data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ModifyCloudToDeviceConfigRequest::unsafe_arena_set_allocated_binary_data(
    ::std::string* binary_data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (binary_data != NULL) {
    
  } else {
    
  }
  binary_data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      binary_data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ModifyCloudToDeviceConfigRequest.binary_data)
}

// -------------------------------------------------------------------

// ListDeviceConfigVersionsRequest

// string name = 1;
inline void ListDeviceConfigVersionsRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDeviceConfigVersionsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
  return name_.Get();
}
inline void ListDeviceConfigVersionsRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}
#if LANG_CXX11
inline void ListDeviceConfigVersionsRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}
#endif
inline void ListDeviceConfigVersionsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}
inline void ListDeviceConfigVersionsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}
inline ::std::string* ListDeviceConfigVersionsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDeviceConfigVersionsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDeviceConfigVersionsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}
inline ::std::string* ListDeviceConfigVersionsRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDeviceConfigVersionsRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.name)
}

// int32 num_versions = 2;
inline void ListDeviceConfigVersionsRequest::clear_num_versions() {
  num_versions_ = 0;
}
inline ::google::protobuf::int32 ListDeviceConfigVersionsRequest::num_versions() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.num_versions)
  return num_versions_;
}
inline void ListDeviceConfigVersionsRequest::set_num_versions(::google::protobuf::int32 value) {
  
  num_versions_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceConfigVersionsRequest.num_versions)
}

// -------------------------------------------------------------------

// ListDeviceConfigVersionsResponse

// repeated .google.cloud.iot.v1.DeviceConfig device_configs = 1;
inline int ListDeviceConfigVersionsResponse::device_configs_size() const {
  return device_configs_.size();
}
inline ::google::cloud::iot::v1::DeviceConfig* ListDeviceConfigVersionsResponse::mutable_device_configs(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceConfigVersionsResponse.device_configs)
  return device_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceConfig >*
ListDeviceConfigVersionsResponse::mutable_device_configs() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDeviceConfigVersionsResponse.device_configs)
  return &device_configs_;
}
inline const ::google::cloud::iot::v1::DeviceConfig& ListDeviceConfigVersionsResponse::device_configs(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceConfigVersionsResponse.device_configs)
  return device_configs_.Get(index);
}
inline ::google::cloud::iot::v1::DeviceConfig* ListDeviceConfigVersionsResponse::add_device_configs() {
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDeviceConfigVersionsResponse.device_configs)
  return device_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceConfig >&
ListDeviceConfigVersionsResponse::device_configs() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDeviceConfigVersionsResponse.device_configs)
  return device_configs_;
}

// -------------------------------------------------------------------

// ListDeviceStatesRequest

// string name = 1;
inline void ListDeviceStatesRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ListDeviceStatesRequest::name() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceStatesRequest.name)
  return name_.Get();
}
inline void ListDeviceStatesRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}
#if LANG_CXX11
inline void ListDeviceStatesRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}
#endif
inline void ListDeviceStatesRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}
inline void ListDeviceStatesRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}
inline ::std::string* ListDeviceStatesRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceStatesRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ListDeviceStatesRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.cloud.iot.v1.ListDeviceStatesRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ListDeviceStatesRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}
inline ::std::string* ListDeviceStatesRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.cloud.iot.v1.ListDeviceStatesRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ListDeviceStatesRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.ListDeviceStatesRequest.name)
}

// int32 num_states = 2;
inline void ListDeviceStatesRequest::clear_num_states() {
  num_states_ = 0;
}
inline ::google::protobuf::int32 ListDeviceStatesRequest::num_states() const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceStatesRequest.num_states)
  return num_states_;
}
inline void ListDeviceStatesRequest::set_num_states(::google::protobuf::int32 value) {
  
  num_states_ = value;
  // @@protoc_insertion_point(field_set:google.cloud.iot.v1.ListDeviceStatesRequest.num_states)
}

// -------------------------------------------------------------------

// ListDeviceStatesResponse

// repeated .google.cloud.iot.v1.DeviceState device_states = 1;
inline int ListDeviceStatesResponse::device_states_size() const {
  return device_states_.size();
}
inline ::google::cloud::iot::v1::DeviceState* ListDeviceStatesResponse::mutable_device_states(int index) {
  // @@protoc_insertion_point(field_mutable:google.cloud.iot.v1.ListDeviceStatesResponse.device_states)
  return device_states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceState >*
ListDeviceStatesResponse::mutable_device_states() {
  // @@protoc_insertion_point(field_mutable_list:google.cloud.iot.v1.ListDeviceStatesResponse.device_states)
  return &device_states_;
}
inline const ::google::cloud::iot::v1::DeviceState& ListDeviceStatesResponse::device_states(int index) const {
  // @@protoc_insertion_point(field_get:google.cloud.iot.v1.ListDeviceStatesResponse.device_states)
  return device_states_.Get(index);
}
inline ::google::cloud::iot::v1::DeviceState* ListDeviceStatesResponse::add_device_states() {
  // @@protoc_insertion_point(field_add:google.cloud.iot.v1.ListDeviceStatesResponse.device_states)
  return device_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::cloud::iot::v1::DeviceState >&
ListDeviceStatesResponse::device_states() const {
  // @@protoc_insertion_point(field_list:google.cloud.iot.v1.ListDeviceStatesResponse.device_states)
  return device_states_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace iot
}  // namespace cloud
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto
