// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/cloud/iot/v1/device_manager.proto
// Original file comments:
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto__INCLUDED
#define GRPC_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto__INCLUDED

#include "google/cloud/iot/v1/device_manager.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace cloud {
namespace iot {
namespace v1 {

// Internet of things (IoT) service. Allows to manipulate device registry
// instances and the registration of devices (Things) to the cloud.
class DeviceManager final {
 public:
  static constexpr char const* service_full_name() {
    return "google.cloud.iot.v1.DeviceManager";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates a device registry that contains devices.
    virtual ::grpc::Status CreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> AsyncCreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncCreateDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncCreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncCreateDeviceRegistryRaw(context, request, cq));
    }
    // Gets a device registry configuration.
    virtual ::grpc::Status GetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> AsyncGetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncGetDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncGetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncGetDeviceRegistryRaw(context, request, cq));
    }
    // Updates a device registry configuration.
    virtual ::grpc::Status UpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> AsyncUpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncUpdateDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncUpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncUpdateDeviceRegistryRaw(context, request, cq));
    }
    // Deletes a device registry configuration.
    virtual ::grpc::Status DeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeviceRegistryRaw(context, request, cq));
    }
    // Lists device registries.
    virtual ::grpc::Status ListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>> AsyncListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>>(AsyncListDeviceRegistriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>> PrepareAsyncListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>>(PrepareAsyncListDeviceRegistriesRaw(context, request, cq));
    }
    // Creates a device in a device registry.
    virtual ::grpc::Status CreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::google::cloud::iot::v1::Device* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> AsyncCreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(AsyncCreateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> PrepareAsyncCreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(PrepareAsyncCreateDeviceRaw(context, request, cq));
    }
    // Gets details about a device.
    virtual ::grpc::Status GetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::google::cloud::iot::v1::Device* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> AsyncGetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(AsyncGetDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> PrepareAsyncGetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(PrepareAsyncGetDeviceRaw(context, request, cq));
    }
    // Updates a device.
    virtual ::grpc::Status UpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::google::cloud::iot::v1::Device* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> AsyncUpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(AsyncUpdateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>> PrepareAsyncUpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>>(PrepareAsyncUpdateDeviceRaw(context, request, cq));
    }
    // Deletes a device.
    virtual ::grpc::Status DeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeviceRaw(context, request, cq));
    }
    // List devices in a device registry.
    virtual ::grpc::Status ListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::google::cloud::iot::v1::ListDevicesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>> AsyncListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>>(AsyncListDevicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>> PrepareAsyncListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>>(PrepareAsyncListDevicesRaw(context, request, cq));
    }
    // Modifies the configuration for the device, which is eventually sent from
    // the Cloud IoT Core servers. Returns the modified configuration version and
    // its metadata.
    virtual ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::google::cloud::iot::v1::DeviceConfig* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>> AsyncModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>>(AsyncModifyCloudToDeviceConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>> PrepareAsyncModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>>(PrepareAsyncModifyCloudToDeviceConfigRaw(context, request, cq));
    }
    // Lists the last few versions of the device configuration in descending
    // order (i.e.: newest first).
    virtual ::grpc::Status ListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>> AsyncListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>>(AsyncListDeviceConfigVersionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>> PrepareAsyncListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>>(PrepareAsyncListDeviceConfigVersionsRaw(context, request, cq));
    }
    // Lists the last few versions of the device state in descending order (i.e.:
    // newest first).
    virtual ::grpc::Status ListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>> AsyncListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>>(AsyncListDeviceStatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>> PrepareAsyncListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>>(PrepareAsyncListDeviceStatesRaw(context, request, cq));
    }
    // Sets the access control policy on the specified resource. Replaces any
    // existing policy.
    virtual ::grpc::Status SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncSetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncSetIamPolicyRaw(context, request, cq));
    }
    // Gets the access control policy for a resource.
    // Returns an empty policy if the resource exists and does not have a policy
    // set.
    virtual ::grpc::Status GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> AsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(AsyncGetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>> PrepareAsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>>(PrepareAsyncGetIamPolicyRaw(context, request, cq));
    }
    // Returns permissions that a caller has on the specified resource.
    // If the resource does not exist, this will return an empty set of
    // permissions, not a NOT_FOUND error.
    virtual ::grpc::Status TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestIamPermissionsRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* AsyncCreateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncCreateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* AsyncGetDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncGetDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* AsyncUpdateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncUpdateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>* AsyncListDeviceRegistriesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>* PrepareAsyncListDeviceRegistriesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* AsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* PrepareAsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* AsyncGetDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* PrepareAsyncGetDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* AsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::Device>* PrepareAsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>* AsyncListDevicesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDevicesResponse>* PrepareAsyncListDevicesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>* AsyncModifyCloudToDeviceConfigRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::DeviceConfig>* PrepareAsyncModifyCloudToDeviceConfigRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* AsyncListDeviceConfigVersionsRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* PrepareAsyncListDeviceConfigVersionsRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>* AsyncListDeviceStatesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::cloud::iot::v1::ListDeviceStatesResponse>* PrepareAsyncListDeviceStatesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::Policy>* PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> AsyncCreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncCreateDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncCreateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncCreateDeviceRegistryRaw(context, request, cq));
    }
    ::grpc::Status GetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> AsyncGetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncGetDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncGetDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncGetDeviceRegistryRaw(context, request, cq));
    }
    ::grpc::Status UpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::google::cloud::iot::v1::DeviceRegistry* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> AsyncUpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(AsyncUpdateDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>> PrepareAsyncUpdateDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>>(PrepareAsyncUpdateDeviceRegistryRaw(context, request, cq));
    }
    ::grpc::Status DeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDeviceRegistryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDeviceRegistry(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeviceRegistryRaw(context, request, cq));
    }
    ::grpc::Status ListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>> AsyncListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>>(AsyncListDeviceRegistriesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>> PrepareAsyncListDeviceRegistries(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>>(PrepareAsyncListDeviceRegistriesRaw(context, request, cq));
    }
    ::grpc::Status CreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::google::cloud::iot::v1::Device* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> AsyncCreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(AsyncCreateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> PrepareAsyncCreateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(PrepareAsyncCreateDeviceRaw(context, request, cq));
    }
    ::grpc::Status GetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::google::cloud::iot::v1::Device* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> AsyncGetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(AsyncGetDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> PrepareAsyncGetDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(PrepareAsyncGetDeviceRaw(context, request, cq));
    }
    ::grpc::Status UpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::google::cloud::iot::v1::Device* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> AsyncUpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(AsyncUpdateDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>> PrepareAsyncUpdateDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>>(PrepareAsyncUpdateDeviceRaw(context, request, cq));
    }
    ::grpc::Status DeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDevice(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDeviceRaw(context, request, cq));
    }
    ::grpc::Status ListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::google::cloud::iot::v1::ListDevicesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>> AsyncListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>>(AsyncListDevicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>> PrepareAsyncListDevices(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>>(PrepareAsyncListDevicesRaw(context, request, cq));
    }
    ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::google::cloud::iot::v1::DeviceConfig* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>> AsyncModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>>(AsyncModifyCloudToDeviceConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>> PrepareAsyncModifyCloudToDeviceConfig(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>>(PrepareAsyncModifyCloudToDeviceConfigRaw(context, request, cq));
    }
    ::grpc::Status ListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>> AsyncListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>>(AsyncListDeviceConfigVersionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>> PrepareAsyncListDeviceConfigVersions(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>>(PrepareAsyncListDeviceConfigVersionsRaw(context, request, cq));
    }
    ::grpc::Status ListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>> AsyncListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>>(AsyncListDeviceStatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>> PrepareAsyncListDeviceStates(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>>(PrepareAsyncListDeviceStatesRaw(context, request, cq));
    }
    ::grpc::Status SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncSetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncSetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncSetIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> AsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(AsyncGetIamPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>> PrepareAsyncGetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>>(PrepareAsyncGetIamPolicyRaw(context, request, cq));
    }
    ::grpc::Status TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> AsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(AsyncTestIamPermissionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>> PrepareAsyncTestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>>(PrepareAsyncTestIamPermissionsRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* AsyncCreateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncCreateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* AsyncGetDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncGetDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* AsyncUpdateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceRegistry>* PrepareAsyncUpdateDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDeviceRegistryRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>* AsyncListDeviceRegistriesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>* PrepareAsyncListDeviceRegistriesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* AsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* PrepareAsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* AsyncGetDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* PrepareAsyncGetDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* AsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::Device>* PrepareAsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>* AsyncListDevicesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDevicesResponse>* PrepareAsyncListDevicesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>* AsyncModifyCloudToDeviceConfigRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::DeviceConfig>* PrepareAsyncModifyCloudToDeviceConfigRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* AsyncListDeviceConfigVersionsRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* PrepareAsyncListDeviceConfigVersionsRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>* AsyncListDeviceStatesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::cloud::iot::v1::ListDeviceStatesResponse>* PrepareAsyncListDeviceStatesRaw(::grpc::ClientContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDeviceRegistry_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceRegistry_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDeviceRegistry_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDeviceRegistry_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDeviceRegistries_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDevices_;
    const ::grpc::internal::RpcMethod rpcmethod_ModifyCloudToDeviceConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDeviceConfigVersions_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDeviceStates_;
    const ::grpc::internal::RpcMethod rpcmethod_SetIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIamPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_TestIamPermissions_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates a device registry that contains devices.
    virtual ::grpc::Status CreateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response);
    // Gets a device registry configuration.
    virtual ::grpc::Status GetDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response);
    // Updates a device registry configuration.
    virtual ::grpc::Status UpdateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response);
    // Deletes a device registry configuration.
    virtual ::grpc::Status DeleteDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* request, ::google::protobuf::Empty* response);
    // Lists device registries.
    virtual ::grpc::Status ListDeviceRegistries(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest* request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response);
    // Creates a device in a device registry.
    virtual ::grpc::Status CreateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest* request, ::google::cloud::iot::v1::Device* response);
    // Gets details about a device.
    virtual ::grpc::Status GetDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRequest* request, ::google::cloud::iot::v1::Device* response);
    // Updates a device.
    virtual ::grpc::Status UpdateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest* request, ::google::cloud::iot::v1::Device* response);
    // Deletes a device.
    virtual ::grpc::Status DeleteDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response);
    // List devices in a device registry.
    virtual ::grpc::Status ListDevices(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDevicesRequest* request, ::google::cloud::iot::v1::ListDevicesResponse* response);
    // Modifies the configuration for the device, which is eventually sent from
    // the Cloud IoT Core servers. Returns the modified configuration version and
    // its metadata.
    virtual ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* request, ::google::cloud::iot::v1::DeviceConfig* response);
    // Lists the last few versions of the device configuration in descending
    // order (i.e.: newest first).
    virtual ::grpc::Status ListDeviceConfigVersions(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response);
    // Lists the last few versions of the device state in descending order (i.e.:
    // newest first).
    virtual ::grpc::Status ListDeviceStates(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest* request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response);
    // Sets the access control policy on the specified resource. Replaces any
    // existing policy.
    virtual ::grpc::Status SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Gets the access control policy for a resource.
    // Returns an empty policy if the resource exists and does not have a policy
    // set.
    virtual ::grpc::Status GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response);
    // Returns permissions that a caller has on the specified resource.
    // If the resource does not exist, this will return an empty set of
    // permissions, not a NOT_FOUND error.
    virtual ::grpc::Status TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateDeviceRegistry() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDeviceRegistry(::grpc::ServerContext* context, ::google::cloud::iot::v1::CreateDeviceRegistryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::DeviceRegistry>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDeviceRegistry() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceRegistry(::grpc::ServerContext* context, ::google::cloud::iot::v1::GetDeviceRegistryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::DeviceRegistry>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateDeviceRegistry() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDeviceRegistry(::grpc::ServerContext* context, ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::DeviceRegistry>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteDeviceRegistry() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDeviceRegistry(::grpc::ServerContext* context, ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDeviceRegistries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDeviceRegistries() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListDeviceRegistries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceRegistries(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest* request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDeviceRegistries(::grpc::ServerContext* context, ::google::cloud::iot::v1::ListDeviceRegistriesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::ListDeviceRegistriesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateDevice() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDevice(::grpc::ServerContext* context, ::google::cloud::iot::v1::CreateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::Device>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDevice() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDevice(::grpc::ServerContext* context, ::google::cloud::iot::v1::GetDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::Device>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateDevice() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UpdateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDevice(::grpc::ServerContext* context, ::google::cloud::iot::v1::UpdateDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::Device>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteDevice() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DeleteDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDevice(::grpc::ServerContext* context, ::google::cloud::iot::v1::DeleteDeviceRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDevices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDevices() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListDevices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevices(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDevicesRequest* request, ::google::cloud::iot::v1::ListDevicesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDevices(::grpc::ServerContext* context, ::google::cloud::iot::v1::ListDevicesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::ListDevicesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ModifyCloudToDeviceConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ModifyCloudToDeviceConfig() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ModifyCloudToDeviceConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* request, ::google::cloud::iot::v1::DeviceConfig* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestModifyCloudToDeviceConfig(::grpc::ServerContext* context, ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::DeviceConfig>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDeviceConfigVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDeviceConfigVersions() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ListDeviceConfigVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceConfigVersions(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDeviceConfigVersions(::grpc::ServerContext* context, ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDeviceStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListDeviceStates() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ListDeviceStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceStates(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest* request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDeviceStates(::grpc::ServerContext* context, ::google::cloud::iot::v1::ListDeviceStatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::cloud::iot::v1::ListDeviceStatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIamPolicy(::grpc::ServerContext* context, ::google::iam::v1::SetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIamPolicy(::grpc::ServerContext* context, ::google::iam::v1::GetIamPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::Policy>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestIamPermissions(::grpc::ServerContext* context, ::google::iam::v1::TestIamPermissionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::iam::v1::TestIamPermissionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateDeviceRegistry<WithAsyncMethod_GetDeviceRegistry<WithAsyncMethod_UpdateDeviceRegistry<WithAsyncMethod_DeleteDeviceRegistry<WithAsyncMethod_ListDeviceRegistries<WithAsyncMethod_CreateDevice<WithAsyncMethod_GetDevice<WithAsyncMethod_UpdateDevice<WithAsyncMethod_DeleteDevice<WithAsyncMethod_ListDevices<WithAsyncMethod_ModifyCloudToDeviceConfig<WithAsyncMethod_ListDeviceConfigVersions<WithAsyncMethod_ListDeviceStates<WithAsyncMethod_SetIamPolicy<WithAsyncMethod_GetIamPolicy<WithAsyncMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_CreateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateDeviceRegistry() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDeviceRegistry() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateDeviceRegistry() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteDeviceRegistry() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDeviceRegistries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDeviceRegistries() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListDeviceRegistries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceRegistries(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest* request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateDevice() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDevice() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateDevice() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UpdateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteDevice() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DeleteDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDevices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDevices() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListDevices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevices(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDevicesRequest* request, ::google::cloud::iot::v1::ListDevicesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ModifyCloudToDeviceConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ModifyCloudToDeviceConfig() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ModifyCloudToDeviceConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* request, ::google::cloud::iot::v1::DeviceConfig* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDeviceConfigVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDeviceConfigVersions() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ListDeviceConfigVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceConfigVersions(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDeviceStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListDeviceStates() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ListDeviceStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDeviceStates(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest* request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateDeviceRegistry() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::CreateDeviceRegistryRequest, ::google::cloud::iot::v1::DeviceRegistry>(std::bind(&WithStreamedUnaryMethod_CreateDeviceRegistry<BaseClass>::StreamedCreateDeviceRegistry, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDeviceRegistry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::CreateDeviceRegistryRequest,::google::cloud::iot::v1::DeviceRegistry>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDeviceRegistry() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::GetDeviceRegistryRequest, ::google::cloud::iot::v1::DeviceRegistry>(std::bind(&WithStreamedUnaryMethod_GetDeviceRegistry<BaseClass>::StreamedGetDeviceRegistry, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeviceRegistry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::GetDeviceRegistryRequest,::google::cloud::iot::v1::DeviceRegistry>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateDeviceRegistry() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::UpdateDeviceRegistryRequest, ::google::cloud::iot::v1::DeviceRegistry>(std::bind(&WithStreamedUnaryMethod_UpdateDeviceRegistry<BaseClass>::StreamedUpdateDeviceRegistry, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRegistryRequest* request, ::google::cloud::iot::v1::DeviceRegistry* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDeviceRegistry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::UpdateDeviceRegistryRequest,::google::cloud::iot::v1::DeviceRegistry>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDeviceRegistry : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteDeviceRegistry() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::DeleteDeviceRegistryRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteDeviceRegistry<BaseClass>::StreamedDeleteDeviceRegistry, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDeviceRegistry() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDeviceRegistry(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRegistryRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDeviceRegistry(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::DeleteDeviceRegistryRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDeviceRegistries : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDeviceRegistries() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::ListDeviceRegistriesRequest, ::google::cloud::iot::v1::ListDeviceRegistriesResponse>(std::bind(&WithStreamedUnaryMethod_ListDeviceRegistries<BaseClass>::StreamedListDeviceRegistries, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDeviceRegistries() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDeviceRegistries(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceRegistriesRequest* request, ::google::cloud::iot::v1::ListDeviceRegistriesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDeviceRegistries(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::ListDeviceRegistriesRequest,::google::cloud::iot::v1::ListDeviceRegistriesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateDevice() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::CreateDeviceRequest, ::google::cloud::iot::v1::Device>(std::bind(&WithStreamedUnaryMethod_CreateDevice<BaseClass>::StreamedCreateDevice, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::CreateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::CreateDeviceRequest,::google::cloud::iot::v1::Device>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDevice() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::GetDeviceRequest, ::google::cloud::iot::v1::Device>(std::bind(&WithStreamedUnaryMethod_GetDevice<BaseClass>::StreamedGetDevice, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::GetDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::GetDeviceRequest,::google::cloud::iot::v1::Device>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateDevice() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::UpdateDeviceRequest, ::google::cloud::iot::v1::Device>(std::bind(&WithStreamedUnaryMethod_UpdateDevice<BaseClass>::StreamedUpdateDevice, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::UpdateDeviceRequest* request, ::google::cloud::iot::v1::Device* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::UpdateDeviceRequest,::google::cloud::iot::v1::Device>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteDevice() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::DeleteDeviceRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteDevice<BaseClass>::StreamedDeleteDevice, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDevice(::grpc::ServerContext* context, const ::google::cloud::iot::v1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::DeleteDeviceRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDevices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDevices() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::ListDevicesRequest, ::google::cloud::iot::v1::ListDevicesResponse>(std::bind(&WithStreamedUnaryMethod_ListDevices<BaseClass>::StreamedListDevices, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDevices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDevices(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDevicesRequest* request, ::google::cloud::iot::v1::ListDevicesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDevices(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::ListDevicesRequest,::google::cloud::iot::v1::ListDevicesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ModifyCloudToDeviceConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ModifyCloudToDeviceConfig() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest, ::google::cloud::iot::v1::DeviceConfig>(std::bind(&WithStreamedUnaryMethod_ModifyCloudToDeviceConfig<BaseClass>::StreamedModifyCloudToDeviceConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ModifyCloudToDeviceConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ModifyCloudToDeviceConfig(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest* request, ::google::cloud::iot::v1::DeviceConfig* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedModifyCloudToDeviceConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::ModifyCloudToDeviceConfigRequest,::google::cloud::iot::v1::DeviceConfig>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDeviceConfigVersions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDeviceConfigVersions() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>(std::bind(&WithStreamedUnaryMethod_ListDeviceConfigVersions<BaseClass>::StreamedListDeviceConfigVersions, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDeviceConfigVersions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDeviceConfigVersions(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest* request, ::google::cloud::iot::v1::ListDeviceConfigVersionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDeviceConfigVersions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::ListDeviceConfigVersionsRequest,::google::cloud::iot::v1::ListDeviceConfigVersionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDeviceStates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListDeviceStates() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler< ::google::cloud::iot::v1::ListDeviceStatesRequest, ::google::cloud::iot::v1::ListDeviceStatesResponse>(std::bind(&WithStreamedUnaryMethod_ListDeviceStates<BaseClass>::StreamedListDeviceStates, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDeviceStates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDeviceStates(::grpc::ServerContext* context, const ::google::cloud::iot::v1::ListDeviceStatesRequest* request, ::google::cloud::iot::v1::ListDeviceStatesResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDeviceStates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::cloud::iot::v1::ListDeviceStatesRequest,::google::cloud::iot::v1::ListDeviceStatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(std::bind(&WithStreamedUnaryMethod_SetIamPolicy<BaseClass>::StreamedSetIamPolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::SetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIamPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetIamPolicy() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(std::bind(&WithStreamedUnaryMethod_GetIamPolicy<BaseClass>::StreamedGetIamPolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetIamPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIamPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::GetIamPolicyRequest,::google::iam::v1::Policy>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestIamPermissions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_TestIamPermissions() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(std::bind(&WithStreamedUnaryMethod_TestIamPermissions<BaseClass>::StreamedTestIamPermissions, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_TestIamPermissions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestIamPermissions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::iam::v1::TestIamPermissionsRequest,::google::iam::v1::TestIamPermissionsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateDeviceRegistry<WithStreamedUnaryMethod_GetDeviceRegistry<WithStreamedUnaryMethod_UpdateDeviceRegistry<WithStreamedUnaryMethod_DeleteDeviceRegistry<WithStreamedUnaryMethod_ListDeviceRegistries<WithStreamedUnaryMethod_CreateDevice<WithStreamedUnaryMethod_GetDevice<WithStreamedUnaryMethod_UpdateDevice<WithStreamedUnaryMethod_DeleteDevice<WithStreamedUnaryMethod_ListDevices<WithStreamedUnaryMethod_ModifyCloudToDeviceConfig<WithStreamedUnaryMethod_ListDeviceConfigVersions<WithStreamedUnaryMethod_ListDeviceStates<WithStreamedUnaryMethod_SetIamPolicy<WithStreamedUnaryMethod_GetIamPolicy<WithStreamedUnaryMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateDeviceRegistry<WithStreamedUnaryMethod_GetDeviceRegistry<WithStreamedUnaryMethod_UpdateDeviceRegistry<WithStreamedUnaryMethod_DeleteDeviceRegistry<WithStreamedUnaryMethod_ListDeviceRegistries<WithStreamedUnaryMethod_CreateDevice<WithStreamedUnaryMethod_GetDevice<WithStreamedUnaryMethod_UpdateDevice<WithStreamedUnaryMethod_DeleteDevice<WithStreamedUnaryMethod_ListDevices<WithStreamedUnaryMethod_ModifyCloudToDeviceConfig<WithStreamedUnaryMethod_ListDeviceConfigVersions<WithStreamedUnaryMethod_ListDeviceStates<WithStreamedUnaryMethod_SetIamPolicy<WithStreamedUnaryMethod_GetIamPolicy<WithStreamedUnaryMethod_TestIamPermissions<Service > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace iot
}  // namespace cloud
}  // namespace google


#endif  // GRPC_google_2fcloud_2fiot_2fv1_2fdevice_5fmanager_2eproto__INCLUDED
