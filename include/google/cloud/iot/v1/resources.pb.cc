// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/iot/v1/resources.proto

#include "google/cloud/iot/v1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Device_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EventNotificationConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HttpConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MqttConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublicKeyCredential;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StateNotificationConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PublicKeyCertificate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegistryCredential;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_X509CertificateDetails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DeviceCredential;
}  // namespace protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace cloud {
namespace iot {
namespace v1 {
class Device_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Device_MetadataEntry_DoNotUse>
      _instance;
} _Device_MetadataEntry_DoNotUse_default_instance_;
class DeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Device>
      _instance;
} _Device_default_instance_;
class DeviceRegistryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceRegistry>
      _instance;
} _DeviceRegistry_default_instance_;
class MqttConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MqttConfig>
      _instance;
} _MqttConfig_default_instance_;
class HttpConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpConfig>
      _instance;
} _HttpConfig_default_instance_;
class EventNotificationConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventNotificationConfig>
      _instance;
} _EventNotificationConfig_default_instance_;
class StateNotificationConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateNotificationConfig>
      _instance;
} _StateNotificationConfig_default_instance_;
class RegistryCredentialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegistryCredential>
      _instance;
  const ::google::cloud::iot::v1::PublicKeyCertificate* public_key_certificate_;
} _RegistryCredential_default_instance_;
class X509CertificateDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<X509CertificateDetails>
      _instance;
} _X509CertificateDetails_default_instance_;
class PublicKeyCertificateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublicKeyCertificate>
      _instance;
} _PublicKeyCertificate_default_instance_;
class DeviceCredentialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceCredential>
      _instance;
  const ::google::cloud::iot::v1::PublicKeyCredential* public_key_;
} _DeviceCredential_default_instance_;
class PublicKeyCredentialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublicKeyCredential>
      _instance;
} _PublicKeyCredential_default_instance_;
class DeviceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceConfig>
      _instance;
} _DeviceConfig_default_instance_;
class DeviceStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceState>
      _instance;
} _DeviceState_default_instance_;
}  // namespace v1
}  // namespace iot
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto {
static void InitDefaultsDevice_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_Device_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse();
  }
  ::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Device_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDevice_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_Device_default_instance_;
    new (ptr) ::google::cloud::iot::v1::Device();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::Device::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Device =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsDevice}, {
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceCredential.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceConfig.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceState.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_Device_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsDeviceRegistry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_DeviceRegistry_default_instance_;
    new (ptr) ::google::cloud::iot::v1::DeviceRegistry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::DeviceRegistry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_DeviceRegistry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsDeviceRegistry}, {
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_EventNotificationConfig.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_StateNotificationConfig.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_MqttConfig.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_HttpConfig.base,
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_RegistryCredential.base,}};

static void InitDefaultsMqttConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_MqttConfig_default_instance_;
    new (ptr) ::google::cloud::iot::v1::MqttConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::MqttConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MqttConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMqttConfig}, {}};

static void InitDefaultsHttpConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_HttpConfig_default_instance_;
    new (ptr) ::google::cloud::iot::v1::HttpConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::HttpConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpConfig}, {}};

static void InitDefaultsEventNotificationConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_EventNotificationConfig_default_instance_;
    new (ptr) ::google::cloud::iot::v1::EventNotificationConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::EventNotificationConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventNotificationConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventNotificationConfig}, {}};

static void InitDefaultsStateNotificationConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_StateNotificationConfig_default_instance_;
    new (ptr) ::google::cloud::iot::v1::StateNotificationConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::StateNotificationConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StateNotificationConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStateNotificationConfig}, {}};

static void InitDefaultsRegistryCredential() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_RegistryCredential_default_instance_;
    new (ptr) ::google::cloud::iot::v1::RegistryCredential();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::RegistryCredential::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegistryCredential =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegistryCredential}, {
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCertificate.base,}};

static void InitDefaultsX509CertificateDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_X509CertificateDetails_default_instance_;
    new (ptr) ::google::cloud::iot::v1::X509CertificateDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::X509CertificateDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_X509CertificateDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsX509CertificateDetails}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsPublicKeyCertificate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_PublicKeyCertificate_default_instance_;
    new (ptr) ::google::cloud::iot::v1::PublicKeyCertificate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::PublicKeyCertificate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PublicKeyCertificate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPublicKeyCertificate}, {
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_X509CertificateDetails.base,}};

static void InitDefaultsDeviceCredential() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_DeviceCredential_default_instance_;
    new (ptr) ::google::cloud::iot::v1::DeviceCredential();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::DeviceCredential::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DeviceCredential =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDeviceCredential}, {
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCredential.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsPublicKeyCredential() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_PublicKeyCredential_default_instance_;
    new (ptr) ::google::cloud::iot::v1::PublicKeyCredential();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::PublicKeyCredential::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublicKeyCredential =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublicKeyCredential}, {}};

static void InitDefaultsDeviceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_DeviceConfig_default_instance_;
    new (ptr) ::google::cloud::iot::v1::DeviceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::DeviceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceConfig}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDeviceState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::iot::v1::_DeviceState_default_instance_;
    new (ptr) ::google::cloud::iot::v1::DeviceState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::iot::v1::DeviceState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceState}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Device_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Device.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceRegistry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MqttConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventNotificationConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateNotificationConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegistryCredential.base);
  ::google::protobuf::internal::InitSCC(&scc_info_X509CertificateDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublicKeyCertificate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceCredential.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublicKeyCredential.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceState.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, num_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_heartbeat_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_event_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_state_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_config_ack_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_config_send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_error_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, last_error_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::Device, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, event_notification_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, state_notification_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, mqtt_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, http_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceRegistry, credentials_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::MqttConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::MqttConfig, mqtt_enabled_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::HttpConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::HttpConfig, http_enabled_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::EventNotificationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::EventNotificationConfig, subfolder_matches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::EventNotificationConfig, pubsub_topic_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::StateNotificationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::StateNotificationConfig, pubsub_topic_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::RegistryCredential, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::RegistryCredential, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::iot::v1::RegistryCredentialDefaultTypeInternal, public_key_certificate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::RegistryCredential, credential_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, expiry_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, signature_algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::X509CertificateDetails, public_key_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCertificate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCertificate, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCertificate, certificate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCertificate, x509_details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceCredential, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceCredential, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::cloud::iot::v1::DeviceCredentialDefaultTypeInternal, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceCredential, expiration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceCredential, credential_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCredential, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCredential, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::PublicKeyCredential, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceConfig, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceConfig, cloud_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceConfig, device_ack_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceConfig, binary_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceState, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::iot::v1::DeviceState, binary_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse)},
  { 9, -1, sizeof(::google::cloud::iot::v1::Device)},
  { 29, -1, sizeof(::google::cloud::iot::v1::DeviceRegistry)},
  { 41, -1, sizeof(::google::cloud::iot::v1::MqttConfig)},
  { 47, -1, sizeof(::google::cloud::iot::v1::HttpConfig)},
  { 53, -1, sizeof(::google::cloud::iot::v1::EventNotificationConfig)},
  { 60, -1, sizeof(::google::cloud::iot::v1::StateNotificationConfig)},
  { 66, -1, sizeof(::google::cloud::iot::v1::RegistryCredential)},
  { 73, -1, sizeof(::google::cloud::iot::v1::X509CertificateDetails)},
  { 84, -1, sizeof(::google::cloud::iot::v1::PublicKeyCertificate)},
  { 92, -1, sizeof(::google::cloud::iot::v1::DeviceCredential)},
  { 100, -1, sizeof(::google::cloud::iot::v1::PublicKeyCredential)},
  { 107, -1, sizeof(::google::cloud::iot::v1::DeviceConfig)},
  { 116, -1, sizeof(::google::cloud::iot::v1::DeviceState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_Device_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_DeviceRegistry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_MqttConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_HttpConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_EventNotificationConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_StateNotificationConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_RegistryCredential_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_X509CertificateDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_PublicKeyCertificate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_DeviceCredential_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_PublicKeyCredential_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_DeviceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::iot::v1::_DeviceState_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/iot/v1/resources.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#google/cloud/iot/v1/resources.proto\022\023g"
      "oogle.cloud.iot.v1\032\034google/api/annotatio"
      "ns.proto\032\037google/protobuf/timestamp.prot"
      "o\032\027google/rpc/status.proto\"\315\005\n\006Device\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006num_id\030\003 \001(\004\022"
      ":\n\013credentials\030\014 \003(\0132%.google.cloud.iot."
      "v1.DeviceCredential\0227\n\023last_heartbeat_ti"
      "me\030\007 \001(\0132\032.google.protobuf.Timestamp\0223\n\017"
      "last_event_time\030\010 \001(\0132\032.google.protobuf."
      "Timestamp\0223\n\017last_state_time\030\024 \001(\0132\032.goo"
      "gle.protobuf.Timestamp\0228\n\024last_config_ac"
      "k_time\030\016 \001(\0132\032.google.protobuf.Timestamp"
      "\0229\n\025last_config_send_time\030\022 \001(\0132\032.google"
      ".protobuf.Timestamp\022\017\n\007blocked\030\023 \001(\010\0223\n\017"
      "last_error_time\030\n \001(\0132\032.google.protobuf."
      "Timestamp\022-\n\021last_error_status\030\013 \001(\0132\022.g"
      "oogle.rpc.Status\0221\n\006config\030\r \001(\0132!.googl"
      "e.cloud.iot.v1.DeviceConfig\022/\n\005state\030\020 \001"
      "(\0132 .google.cloud.iot.v1.DeviceState\022;\n\010"
      "metadata\030\021 \003(\0132).google.cloud.iot.v1.Dev"
      "ice.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\367\002\n\016DeviceReg"
      "istry\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022P\n\032event"
      "_notification_configs\030\n \003(\0132,.google.clo"
      "ud.iot.v1.EventNotificationConfig\022O\n\031sta"
      "te_notification_config\030\007 \001(\0132,.google.cl"
      "oud.iot.v1.StateNotificationConfig\0224\n\013mq"
      "tt_config\030\004 \001(\0132\037.google.cloud.iot.v1.Mq"
      "ttConfig\0224\n\013http_config\030\t \001(\0132\037.google.c"
      "loud.iot.v1.HttpConfig\022<\n\013credentials\030\010 "
      "\003(\0132\'.google.cloud.iot.v1.RegistryCreden"
      "tial\"H\n\nMqttConfig\022:\n\022mqtt_enabled_state"
      "\030\001 \001(\0162\036.google.cloud.iot.v1.MqttState\"H"
      "\n\nHttpConfig\022:\n\022http_enabled_state\030\001 \001(\016"
      "2\036.google.cloud.iot.v1.HttpState\"O\n\027Even"
      "tNotificationConfig\022\031\n\021subfolder_matches"
      "\030\002 \001(\t\022\031\n\021pubsub_topic_name\030\001 \001(\t\"4\n\027Sta"
      "teNotificationConfig\022\031\n\021pubsub_topic_nam"
      "e\030\001 \001(\t\"o\n\022RegistryCredential\022K\n\026public_"
      "key_certificate\030\001 \001(\0132).google.cloud.iot"
      ".v1.PublicKeyCertificateH\000B\014\n\ncredential"
      "\"\320\001\n\026X509CertificateDetails\022\016\n\006issuer\030\001 "
      "\001(\t\022\017\n\007subject\030\002 \001(\t\022.\n\nstart_time\030\003 \001(\013"
      "2\032.google.protobuf.Timestamp\022/\n\013expiry_t"
      "ime\030\004 \001(\0132\032.google.protobuf.Timestamp\022\033\n"
      "\023signature_algorithm\030\005 \001(\t\022\027\n\017public_key"
      "_type\030\006 \001(\t\"\257\001\n\024PublicKeyCertificate\022\?\n\006"
      "format\030\001 \001(\0162/.google.cloud.iot.v1.Publi"
      "cKeyCertificateFormat\022\023\n\013certificate\030\002 \001"
      "(\t\022A\n\014x509_details\030\003 \001(\0132+.google.cloud."
      "iot.v1.X509CertificateDetails\"\225\001\n\020Device"
      "Credential\022>\n\npublic_key\030\002 \001(\0132(.google."
      "cloud.iot.v1.PublicKeyCredentialH\000\0223\n\017ex"
      "piration_time\030\006 \001(\0132\032.google.protobuf.Ti"
      "mestampB\014\n\ncredential\"X\n\023PublicKeyCreden"
      "tial\0224\n\006format\030\001 \001(\0162$.google.cloud.iot."
      "v1.PublicKeyFormat\022\013\n\003key\030\002 \001(\t\"\240\001\n\014Devi"
      "ceConfig\022\017\n\007version\030\001 \001(\003\0225\n\021cloud_updat"
      "e_time\030\002 \001(\0132\032.google.protobuf.Timestamp"
      "\0223\n\017device_ack_time\030\003 \001(\0132\032.google.proto"
      "buf.Timestamp\022\023\n\013binary_data\030\004 \001(\014\"S\n\013De"
      "viceState\022/\n\013update_time\030\001 \001(\0132\032.google."
      "protobuf.Timestamp\022\023\n\013binary_data\030\002 \001(\014*"
      "L\n\tMqttState\022\032\n\026MQTT_STATE_UNSPECIFIED\020\000"
      "\022\020\n\014MQTT_ENABLED\020\001\022\021\n\rMQTT_DISABLED\020\002*L\n"
      "\tHttpState\022\032\n\026HTTP_STATE_UNSPECIFIED\020\000\022\020"
      "\n\014HTTP_ENABLED\020\001\022\021\n\rHTTP_DISABLED\020\002*e\n\032P"
      "ublicKeyCertificateFormat\022-\n)UNSPECIFIED"
      "_PUBLIC_KEY_CERTIFICATE_FORMAT\020\000\022\030\n\024X509"
      "_CERTIFICATE_PEM\020\001*v\n\017PublicKeyFormat\022!\n"
      "\035UNSPECIFIED_PUBLIC_KEY_FORMAT\020\000\022\013\n\007RSA_"
      "PEM\020\003\022\020\n\014RSA_X509_PEM\020\001\022\r\n\tES256_PEM\020\002\022\022"
      "\n\016ES256_X509_PEM\020\004Bf\n\027com.google.cloud.i"
      "ot.v1B\016ResourcesProtoP\001Z6google.golang.o"
      "rg/genproto/googleapis/cloud/iot/v1;iot\370"
      "\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3010);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/iot/v1/resources.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto
namespace google {
namespace cloud {
namespace iot {
namespace v1 {
const ::google::protobuf::EnumDescriptor* MqttState_descriptor() {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_enum_descriptors[0];
}
bool MqttState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HttpState_descriptor() {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_enum_descriptors[1];
}
bool HttpState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PublicKeyCertificateFormat_descriptor() {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_enum_descriptors[2];
}
bool PublicKeyCertificateFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PublicKeyFormat_descriptor() {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_enum_descriptors[3];
}
bool PublicKeyFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Device_MetadataEntry_DoNotUse::Device_MetadataEntry_DoNotUse() {}
Device_MetadataEntry_DoNotUse::Device_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Device_MetadataEntry_DoNotUse::MergeFrom(const Device_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Device_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[0];
}
void Device_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Device::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_heartbeat_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_event_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_state_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_config_ack_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_config_send_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_error_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->last_error_status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::cloud::iot::v1::DeviceConfig*>(
      ::google::cloud::iot::v1::DeviceConfig::internal_default_instance());
  ::google::cloud::iot::v1::_Device_default_instance_._instance.get_mutable()->state_ = const_cast< ::google::cloud::iot::v1::DeviceState*>(
      ::google::cloud::iot::v1::DeviceState::internal_default_instance());
}
void Device::unsafe_arena_set_allocated_last_heartbeat_time(
    ::google::protobuf::Timestamp* last_heartbeat_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_heartbeat_time_;
  }
  last_heartbeat_time_ = last_heartbeat_time;
  if (last_heartbeat_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_heartbeat_time)
}
void Device::clear_last_heartbeat_time() {
  if (GetArenaNoVirtual() == NULL && last_heartbeat_time_ != NULL) {
    delete last_heartbeat_time_;
  }
  last_heartbeat_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_event_time(
    ::google::protobuf::Timestamp* last_event_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_event_time_;
  }
  last_event_time_ = last_event_time;
  if (last_event_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_event_time)
}
void Device::clear_last_event_time() {
  if (GetArenaNoVirtual() == NULL && last_event_time_ != NULL) {
    delete last_event_time_;
  }
  last_event_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_state_time(
    ::google::protobuf::Timestamp* last_state_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_state_time_;
  }
  last_state_time_ = last_state_time;
  if (last_state_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_state_time)
}
void Device::clear_last_state_time() {
  if (GetArenaNoVirtual() == NULL && last_state_time_ != NULL) {
    delete last_state_time_;
  }
  last_state_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_config_ack_time(
    ::google::protobuf::Timestamp* last_config_ack_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_config_ack_time_;
  }
  last_config_ack_time_ = last_config_ack_time;
  if (last_config_ack_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_config_ack_time)
}
void Device::clear_last_config_ack_time() {
  if (GetArenaNoVirtual() == NULL && last_config_ack_time_ != NULL) {
    delete last_config_ack_time_;
  }
  last_config_ack_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_config_send_time(
    ::google::protobuf::Timestamp* last_config_send_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_config_send_time_;
  }
  last_config_send_time_ = last_config_send_time;
  if (last_config_send_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_config_send_time)
}
void Device::clear_last_config_send_time() {
  if (GetArenaNoVirtual() == NULL && last_config_send_time_ != NULL) {
    delete last_config_send_time_;
  }
  last_config_send_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_error_time(
    ::google::protobuf::Timestamp* last_error_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_error_time_;
  }
  last_error_time_ = last_error_time;
  if (last_error_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_error_time)
}
void Device::clear_last_error_time() {
  if (GetArenaNoVirtual() == NULL && last_error_time_ != NULL) {
    delete last_error_time_;
  }
  last_error_time_ = NULL;
}
void Device::unsafe_arena_set_allocated_last_error_status(
    ::google::rpc::Status* last_error_status) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_error_status_;
  }
  last_error_status_ = last_error_status;
  if (last_error_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.last_error_status)
}
void Device::clear_last_error_status() {
  if (GetArenaNoVirtual() == NULL && last_error_status_ != NULL) {
    delete last_error_status_;
  }
  last_error_status_ = NULL;
}
void Device::unsafe_arena_set_allocated_config(
    ::google::cloud::iot::v1::DeviceConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.config)
}
void Device::unsafe_arena_set_allocated_state(
    ::google::cloud::iot::v1::DeviceState* state) {
  if (GetArenaNoVirtual() == NULL) {
    delete state_;
  }
  state_ = state;
  if (state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.Device.state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kIdFieldNumber;
const int Device::kNameFieldNumber;
const int Device::kNumIdFieldNumber;
const int Device::kCredentialsFieldNumber;
const int Device::kLastHeartbeatTimeFieldNumber;
const int Device::kLastEventTimeFieldNumber;
const int Device::kLastStateTimeFieldNumber;
const int Device::kLastConfigAckTimeFieldNumber;
const int Device::kLastConfigSendTimeFieldNumber;
const int Device::kBlockedFieldNumber;
const int Device::kLastErrorTimeFieldNumber;
const int Device::kLastErrorStatusFieldNumber;
const int Device::kConfigFieldNumber;
const int Device::kStateFieldNumber;
const int Device::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_Device.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.Device)
}
Device::Device(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  credentials_(arena),
  metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_Device.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      credentials_(from.credentials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_last_heartbeat_time()) {
    last_heartbeat_time_ = new ::google::protobuf::Timestamp(*from.last_heartbeat_time_);
  } else {
    last_heartbeat_time_ = NULL;
  }
  if (from.has_last_event_time()) {
    last_event_time_ = new ::google::protobuf::Timestamp(*from.last_event_time_);
  } else {
    last_event_time_ = NULL;
  }
  if (from.has_last_error_time()) {
    last_error_time_ = new ::google::protobuf::Timestamp(*from.last_error_time_);
  } else {
    last_error_time_ = NULL;
  }
  if (from.has_last_error_status()) {
    last_error_status_ = new ::google::rpc::Status(*from.last_error_status_);
  } else {
    last_error_status_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::google::cloud::iot::v1::DeviceConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_last_config_ack_time()) {
    last_config_ack_time_ = new ::google::protobuf::Timestamp(*from.last_config_ack_time_);
  } else {
    last_config_ack_time_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::google::cloud::iot::v1::DeviceState(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_last_config_send_time()) {
    last_config_send_time_ = new ::google::protobuf::Timestamp(*from.last_config_send_time_);
  } else {
    last_config_send_time_ = NULL;
  }
  if (from.has_last_state_time()) {
    last_state_time_ = new ::google::protobuf::Timestamp(*from.last_state_time_);
  } else {
    last_state_time_ = NULL;
  }
  ::memcpy(&num_id_, &from.num_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocked_) -
    reinterpret_cast<char*>(&num_id_)) + sizeof(blocked_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.Device)
}

void Device::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_heartbeat_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocked_) -
      reinterpret_cast<char*>(&last_heartbeat_time_)) + sizeof(blocked_));
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_heartbeat_time_;
  if (this != internal_default_instance()) delete last_event_time_;
  if (this != internal_default_instance()) delete last_error_time_;
  if (this != internal_default_instance()) delete last_error_status_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete last_config_ack_time_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete last_config_send_time_;
  if (this != internal_default_instance()) delete last_state_time_;
}

void Device::ArenaDtor(void* object) {
  Device* _this = reinterpret_cast< Device* >(object);
  (void)_this;
}
void Device::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Device& Device::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_Device.base);
  return *internal_default_instance();
}


void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  credentials_.Clear();
  metadata_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && last_heartbeat_time_ != NULL) {
    delete last_heartbeat_time_;
  }
  last_heartbeat_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_event_time_ != NULL) {
    delete last_event_time_;
  }
  last_event_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_error_time_ != NULL) {
    delete last_error_time_;
  }
  last_error_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_error_status_ != NULL) {
    delete last_error_status_;
  }
  last_error_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_config_ack_time_ != NULL) {
    delete last_config_ack_time_;
  }
  last_config_ack_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_config_send_time_ != NULL) {
    delete last_config_send_time_;
  }
  last_config_send_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_state_time_ != NULL) {
    delete last_state_time_;
  }
  last_state_time_ = NULL;
  ::memset(&num_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocked_) -
      reinterpret_cast<char*>(&num_id_)) + sizeof(blocked_));
  _internal_metadata_.Clear();
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.Device)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.Device.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.Device.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_heartbeat_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_heartbeat_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_event_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_event_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_error_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_error_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status last_error_status = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_error_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.iot.v1.DeviceCredential credentials = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.DeviceConfig config = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_config_ack_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_config_ack_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.DeviceState state = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          Device_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Device_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.Device.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.Device.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_config_send_time = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_config_send_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blocked = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_state_time = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_state_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.Device.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.Device.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 num_id = 3;
  if (this->num_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->num_id(), output);
  }

  // .google.protobuf.Timestamp last_heartbeat_time = 7;
  if (this->has_last_heartbeat_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_last_heartbeat_time(), output);
  }

  // .google.protobuf.Timestamp last_event_time = 8;
  if (this->has_last_event_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_last_event_time(), output);
  }

  // .google.protobuf.Timestamp last_error_time = 10;
  if (this->has_last_error_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_last_error_time(), output);
  }

  // .google.rpc.Status last_error_status = 11;
  if (this->has_last_error_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_last_error_status(), output);
  }

  // repeated .google.cloud.iot.v1.DeviceCredential credentials = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->credentials(static_cast<int>(i)),
      output);
  }

  // .google.cloud.iot.v1.DeviceConfig config = 13;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_config(), output);
  }

  // .google.protobuf.Timestamp last_config_ack_time = 14;
  if (this->has_last_config_ack_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_last_config_ack_time(), output);
  }

  // .google.cloud.iot.v1.DeviceState state = 16;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_state(), output);
  }

  // map<string, string> metadata = 17;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.iot.v1.Device.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.iot.v1.Device.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Device_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Device_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Timestamp last_config_send_time = 18;
  if (this->has_last_config_send_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_last_config_send_time(), output);
  }

  // bool blocked = 19;
  if (this->blocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->blocked(), output);
  }

  // .google.protobuf.Timestamp last_state_time = 20;
  if (this->has_last_state_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_last_state_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.Device.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.Device.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 num_id = 3;
  if (this->num_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->num_id(), target);
  }

  // .google.protobuf.Timestamp last_heartbeat_time = 7;
  if (this->has_last_heartbeat_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_last_heartbeat_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp last_event_time = 8;
  if (this->has_last_event_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_last_event_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp last_error_time = 10;
  if (this->has_last_error_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_last_error_time(), deterministic, target);
  }

  // .google.rpc.Status last_error_status = 11;
  if (this->has_last_error_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_last_error_status(), deterministic, target);
  }

  // repeated .google.cloud.iot.v1.DeviceCredential credentials = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->credentials(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.iot.v1.DeviceConfig config = 13;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_config(), deterministic, target);
  }

  // .google.protobuf.Timestamp last_config_ack_time = 14;
  if (this->has_last_config_ack_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_last_config_ack_time(), deterministic, target);
  }

  // .google.cloud.iot.v1.DeviceState state = 16;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_state(), deterministic, target);
  }

  // map<string, string> metadata = 17;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.iot.v1.Device.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.iot.v1.Device.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Device_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Device_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Timestamp last_config_send_time = 18;
  if (this->has_last_config_send_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_last_config_send_time(), deterministic, target);
  }

  // bool blocked = 19;
  if (this->blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->blocked(), target);
  }

  // .google.protobuf.Timestamp last_state_time = 20;
  if (this->has_last_state_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_last_state_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.Device)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.iot.v1.DeviceCredential credentials = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->credentials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->credentials(static_cast<int>(i)));
    }
  }

  // map<string, string> metadata = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<Device_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Timestamp last_heartbeat_time = 7;
  if (this->has_last_heartbeat_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_heartbeat_time_);
  }

  // .google.protobuf.Timestamp last_event_time = 8;
  if (this->has_last_event_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_event_time_);
  }

  // .google.protobuf.Timestamp last_error_time = 10;
  if (this->has_last_error_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_error_time_);
  }

  // .google.rpc.Status last_error_status = 11;
  if (this->has_last_error_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_error_status_);
  }

  // .google.cloud.iot.v1.DeviceConfig config = 13;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .google.protobuf.Timestamp last_config_ack_time = 14;
  if (this->has_last_config_ack_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_config_ack_time_);
  }

  // .google.cloud.iot.v1.DeviceState state = 16;
  if (this->has_state()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .google.protobuf.Timestamp last_config_send_time = 18;
  if (this->has_last_config_send_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_config_send_time_);
  }

  // .google.protobuf.Timestamp last_state_time = 20;
  if (this->has_last_state_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_state_time_);
  }

  // uint64 num_id = 3;
  if (this->num_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_id());
  }

  // bool blocked = 19;
  if (this->blocked() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  credentials_.MergeFrom(from.credentials_);
  metadata_.MergeFrom(from.metadata_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_last_heartbeat_time()) {
    mutable_last_heartbeat_time()->::google::protobuf::Timestamp::MergeFrom(from.last_heartbeat_time());
  }
  if (from.has_last_event_time()) {
    mutable_last_event_time()->::google::protobuf::Timestamp::MergeFrom(from.last_event_time());
  }
  if (from.has_last_error_time()) {
    mutable_last_error_time()->::google::protobuf::Timestamp::MergeFrom(from.last_error_time());
  }
  if (from.has_last_error_status()) {
    mutable_last_error_status()->::google::rpc::Status::MergeFrom(from.last_error_status());
  }
  if (from.has_config()) {
    mutable_config()->::google::cloud::iot::v1::DeviceConfig::MergeFrom(from.config());
  }
  if (from.has_last_config_ack_time()) {
    mutable_last_config_ack_time()->::google::protobuf::Timestamp::MergeFrom(from.last_config_ack_time());
  }
  if (from.has_state()) {
    mutable_state()->::google::cloud::iot::v1::DeviceState::MergeFrom(from.state());
  }
  if (from.has_last_config_send_time()) {
    mutable_last_config_send_time()->::google::protobuf::Timestamp::MergeFrom(from.last_config_send_time());
  }
  if (from.has_last_state_time()) {
    mutable_last_state_time()->::google::protobuf::Timestamp::MergeFrom(from.last_state_time());
  }
  if (from.num_id() != 0) {
    set_num_id(from.num_id());
  }
  if (from.blocked() != 0) {
    set_blocked(from.blocked());
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Device* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Device::UnsafeArenaSwap(Device* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  using std::swap;
  CastToBase(&credentials_)->InternalSwap(CastToBase(&other->credentials_));
  metadata_.Swap(&other->metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_heartbeat_time_, other->last_heartbeat_time_);
  swap(last_event_time_, other->last_event_time_);
  swap(last_error_time_, other->last_error_time_);
  swap(last_error_status_, other->last_error_status_);
  swap(config_, other->config_);
  swap(last_config_ack_time_, other->last_config_ack_time_);
  swap(state_, other->state_);
  swap(last_config_send_time_, other->last_config_send_time_);
  swap(last_state_time_, other->last_state_time_);
  swap(num_id_, other->num_id_);
  swap(blocked_, other->blocked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceRegistry::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_DeviceRegistry_default_instance_._instance.get_mutable()->state_notification_config_ = const_cast< ::google::cloud::iot::v1::StateNotificationConfig*>(
      ::google::cloud::iot::v1::StateNotificationConfig::internal_default_instance());
  ::google::cloud::iot::v1::_DeviceRegistry_default_instance_._instance.get_mutable()->mqtt_config_ = const_cast< ::google::cloud::iot::v1::MqttConfig*>(
      ::google::cloud::iot::v1::MqttConfig::internal_default_instance());
  ::google::cloud::iot::v1::_DeviceRegistry_default_instance_._instance.get_mutable()->http_config_ = const_cast< ::google::cloud::iot::v1::HttpConfig*>(
      ::google::cloud::iot::v1::HttpConfig::internal_default_instance());
}
void DeviceRegistry::unsafe_arena_set_allocated_state_notification_config(
    ::google::cloud::iot::v1::StateNotificationConfig* state_notification_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete state_notification_config_;
  }
  state_notification_config_ = state_notification_config;
  if (state_notification_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceRegistry.state_notification_config)
}
void DeviceRegistry::unsafe_arena_set_allocated_mqtt_config(
    ::google::cloud::iot::v1::MqttConfig* mqtt_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete mqtt_config_;
  }
  mqtt_config_ = mqtt_config;
  if (mqtt_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceRegistry.mqtt_config)
}
void DeviceRegistry::unsafe_arena_set_allocated_http_config(
    ::google::cloud::iot::v1::HttpConfig* http_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete http_config_;
  }
  http_config_ = http_config;
  if (http_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceRegistry.http_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceRegistry::kIdFieldNumber;
const int DeviceRegistry::kNameFieldNumber;
const int DeviceRegistry::kEventNotificationConfigsFieldNumber;
const int DeviceRegistry::kStateNotificationConfigFieldNumber;
const int DeviceRegistry::kMqttConfigFieldNumber;
const int DeviceRegistry::kHttpConfigFieldNumber;
const int DeviceRegistry::kCredentialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceRegistry::DeviceRegistry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceRegistry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.DeviceRegistry)
}
DeviceRegistry::DeviceRegistry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  credentials_(arena),
  event_notification_configs_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceRegistry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.DeviceRegistry)
}
DeviceRegistry::DeviceRegistry(const DeviceRegistry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      credentials_(from.credentials_),
      event_notification_configs_(from.event_notification_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_mqtt_config()) {
    mqtt_config_ = new ::google::cloud::iot::v1::MqttConfig(*from.mqtt_config_);
  } else {
    mqtt_config_ = NULL;
  }
  if (from.has_state_notification_config()) {
    state_notification_config_ = new ::google::cloud::iot::v1::StateNotificationConfig(*from.state_notification_config_);
  } else {
    state_notification_config_ = NULL;
  }
  if (from.has_http_config()) {
    http_config_ = new ::google::cloud::iot::v1::HttpConfig(*from.http_config_);
  } else {
    http_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.DeviceRegistry)
}

void DeviceRegistry::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mqtt_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_config_) -
      reinterpret_cast<char*>(&mqtt_config_)) + sizeof(http_config_));
}

DeviceRegistry::~DeviceRegistry() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.DeviceRegistry)
  SharedDtor();
}

void DeviceRegistry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mqtt_config_;
  if (this != internal_default_instance()) delete state_notification_config_;
  if (this != internal_default_instance()) delete http_config_;
}

void DeviceRegistry::ArenaDtor(void* object) {
  DeviceRegistry* _this = reinterpret_cast< DeviceRegistry* >(object);
  (void)_this;
}
void DeviceRegistry::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeviceRegistry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceRegistry::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceRegistry& DeviceRegistry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceRegistry.base);
  return *internal_default_instance();
}


void DeviceRegistry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.DeviceRegistry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  credentials_.Clear();
  event_notification_configs_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && mqtt_config_ != NULL) {
    delete mqtt_config_;
  }
  mqtt_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_notification_config_ != NULL) {
    delete state_notification_config_;
  }
  state_notification_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && http_config_ != NULL) {
    delete http_config_;
  }
  http_config_ = NULL;
  _internal_metadata_.Clear();
}

bool DeviceRegistry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.DeviceRegistry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.DeviceRegistry.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.DeviceRegistry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.MqttConfig mqtt_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mqtt_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.StateNotificationConfig state_notification_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state_notification_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.iot.v1.RegistryCredential credentials = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_credentials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.HttpConfig http_config = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.cloud.iot.v1.EventNotificationConfig event_notification_configs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event_notification_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.DeviceRegistry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.DeviceRegistry)
  return false;
#undef DO_
}

void DeviceRegistry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.DeviceRegistry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.DeviceRegistry.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.DeviceRegistry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .google.cloud.iot.v1.MqttConfig mqtt_config = 4;
  if (this->has_mqtt_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mqtt_config(), output);
  }

  // .google.cloud.iot.v1.StateNotificationConfig state_notification_config = 7;
  if (this->has_state_notification_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_state_notification_config(), output);
  }

  // repeated .google.cloud.iot.v1.RegistryCredential credentials = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->credentials(static_cast<int>(i)),
      output);
  }

  // .google.cloud.iot.v1.HttpConfig http_config = 9;
  if (this->has_http_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_http_config(), output);
  }

  // repeated .google.cloud.iot.v1.EventNotificationConfig event_notification_configs = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_notification_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->event_notification_configs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.DeviceRegistry)
}

::google::protobuf::uint8* DeviceRegistry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.DeviceRegistry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.DeviceRegistry.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.DeviceRegistry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .google.cloud.iot.v1.MqttConfig mqtt_config = 4;
  if (this->has_mqtt_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mqtt_config(), deterministic, target);
  }

  // .google.cloud.iot.v1.StateNotificationConfig state_notification_config = 7;
  if (this->has_state_notification_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_state_notification_config(), deterministic, target);
  }

  // repeated .google.cloud.iot.v1.RegistryCredential credentials = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->credentials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->credentials(static_cast<int>(i)), deterministic, target);
  }

  // .google.cloud.iot.v1.HttpConfig http_config = 9;
  if (this->has_http_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_http_config(), deterministic, target);
  }

  // repeated .google.cloud.iot.v1.EventNotificationConfig event_notification_configs = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_notification_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->event_notification_configs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.DeviceRegistry)
  return target;
}

size_t DeviceRegistry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.DeviceRegistry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.iot.v1.RegistryCredential credentials = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->credentials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->credentials(static_cast<int>(i)));
    }
  }

  // repeated .google.cloud.iot.v1.EventNotificationConfig event_notification_configs = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->event_notification_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event_notification_configs(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.cloud.iot.v1.MqttConfig mqtt_config = 4;
  if (this->has_mqtt_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mqtt_config_);
  }

  // .google.cloud.iot.v1.StateNotificationConfig state_notification_config = 7;
  if (this->has_state_notification_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_notification_config_);
  }

  // .google.cloud.iot.v1.HttpConfig http_config = 9;
  if (this->has_http_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceRegistry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.DeviceRegistry)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceRegistry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceRegistry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.DeviceRegistry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.DeviceRegistry)
    MergeFrom(*source);
  }
}

void DeviceRegistry::MergeFrom(const DeviceRegistry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.DeviceRegistry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  credentials_.MergeFrom(from.credentials_);
  event_notification_configs_.MergeFrom(from.event_notification_configs_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_mqtt_config()) {
    mutable_mqtt_config()->::google::cloud::iot::v1::MqttConfig::MergeFrom(from.mqtt_config());
  }
  if (from.has_state_notification_config()) {
    mutable_state_notification_config()->::google::cloud::iot::v1::StateNotificationConfig::MergeFrom(from.state_notification_config());
  }
  if (from.has_http_config()) {
    mutable_http_config()->::google::cloud::iot::v1::HttpConfig::MergeFrom(from.http_config());
  }
}

void DeviceRegistry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.DeviceRegistry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceRegistry::CopyFrom(const DeviceRegistry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.DeviceRegistry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceRegistry::IsInitialized() const {
  return true;
}

void DeviceRegistry::Swap(DeviceRegistry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceRegistry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceRegistry::UnsafeArenaSwap(DeviceRegistry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceRegistry::InternalSwap(DeviceRegistry* other) {
  using std::swap;
  CastToBase(&credentials_)->InternalSwap(CastToBase(&other->credentials_));
  CastToBase(&event_notification_configs_)->InternalSwap(CastToBase(&other->event_notification_configs_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mqtt_config_, other->mqtt_config_);
  swap(state_notification_config_, other->state_notification_config_);
  swap(http_config_, other->http_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceRegistry::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MqttConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MqttConfig::kMqttEnabledStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MqttConfig::MqttConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_MqttConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.MqttConfig)
}
MqttConfig::MqttConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_MqttConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.MqttConfig)
}
MqttConfig::MqttConfig(const MqttConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mqtt_enabled_state_ = from.mqtt_enabled_state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.MqttConfig)
}

void MqttConfig::SharedCtor() {
  mqtt_enabled_state_ = 0;
}

MqttConfig::~MqttConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.MqttConfig)
  SharedDtor();
}

void MqttConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MqttConfig::ArenaDtor(void* object) {
  MqttConfig* _this = reinterpret_cast< MqttConfig* >(object);
  (void)_this;
}
void MqttConfig::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void MqttConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MqttConfig::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MqttConfig& MqttConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_MqttConfig.base);
  return *internal_default_instance();
}


void MqttConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.MqttConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mqtt_enabled_state_ = 0;
  _internal_metadata_.Clear();
}

bool MqttConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.MqttConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.MqttState mqtt_enabled_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mqtt_enabled_state(static_cast< ::google::cloud::iot::v1::MqttState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.MqttConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.MqttConfig)
  return false;
#undef DO_
}

void MqttConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.MqttConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.MqttState mqtt_enabled_state = 1;
  if (this->mqtt_enabled_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mqtt_enabled_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.MqttConfig)
}

::google::protobuf::uint8* MqttConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.MqttConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.MqttState mqtt_enabled_state = 1;
  if (this->mqtt_enabled_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mqtt_enabled_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.MqttConfig)
  return target;
}

size_t MqttConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.MqttConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.iot.v1.MqttState mqtt_enabled_state = 1;
  if (this->mqtt_enabled_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mqtt_enabled_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MqttConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.MqttConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MqttConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MqttConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.MqttConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.MqttConfig)
    MergeFrom(*source);
  }
}

void MqttConfig::MergeFrom(const MqttConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.MqttConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mqtt_enabled_state() != 0) {
    set_mqtt_enabled_state(from.mqtt_enabled_state());
  }
}

void MqttConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.MqttConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MqttConfig::CopyFrom(const MqttConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.MqttConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MqttConfig::IsInitialized() const {
  return true;
}

void MqttConfig::Swap(MqttConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MqttConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MqttConfig::UnsafeArenaSwap(MqttConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MqttConfig::InternalSwap(MqttConfig* other) {
  using std::swap;
  swap(mqtt_enabled_state_, other->mqtt_enabled_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MqttConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HttpConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpConfig::kHttpEnabledStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpConfig::HttpConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_HttpConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.HttpConfig)
}
HttpConfig::HttpConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_HttpConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.HttpConfig)
}
HttpConfig::HttpConfig(const HttpConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  http_enabled_state_ = from.http_enabled_state_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.HttpConfig)
}

void HttpConfig::SharedCtor() {
  http_enabled_state_ = 0;
}

HttpConfig::~HttpConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.HttpConfig)
  SharedDtor();
}

void HttpConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HttpConfig::ArenaDtor(void* object) {
  HttpConfig* _this = reinterpret_cast< HttpConfig* >(object);
  (void)_this;
}
void HttpConfig::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void HttpConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HttpConfig::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpConfig& HttpConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_HttpConfig.base);
  return *internal_default_instance();
}


void HttpConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.HttpConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  http_enabled_state_ = 0;
  _internal_metadata_.Clear();
}

bool HttpConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.HttpConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.HttpState http_enabled_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_http_enabled_state(static_cast< ::google::cloud::iot::v1::HttpState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.HttpConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.HttpConfig)
  return false;
#undef DO_
}

void HttpConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.HttpConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.HttpState http_enabled_state = 1;
  if (this->http_enabled_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->http_enabled_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.HttpConfig)
}

::google::protobuf::uint8* HttpConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.HttpConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.HttpState http_enabled_state = 1;
  if (this->http_enabled_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->http_enabled_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.HttpConfig)
  return target;
}

size_t HttpConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.HttpConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.cloud.iot.v1.HttpState http_enabled_state = 1;
  if (this->http_enabled_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->http_enabled_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.HttpConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.HttpConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.HttpConfig)
    MergeFrom(*source);
  }
}

void HttpConfig::MergeFrom(const HttpConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.HttpConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.http_enabled_state() != 0) {
    set_http_enabled_state(from.http_enabled_state());
  }
}

void HttpConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.HttpConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpConfig::CopyFrom(const HttpConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.HttpConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpConfig::IsInitialized() const {
  return true;
}

void HttpConfig::Swap(HttpConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HttpConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HttpConfig::UnsafeArenaSwap(HttpConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HttpConfig::InternalSwap(HttpConfig* other) {
  using std::swap;
  swap(http_enabled_state_, other->http_enabled_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HttpConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventNotificationConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventNotificationConfig::kSubfolderMatchesFieldNumber;
const int EventNotificationConfig::kPubsubTopicNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventNotificationConfig::EventNotificationConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_EventNotificationConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.EventNotificationConfig)
}
EventNotificationConfig::EventNotificationConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_EventNotificationConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.EventNotificationConfig)
}
EventNotificationConfig::EventNotificationConfig(const EventNotificationConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubsub_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubsub_topic_name().size() > 0) {
    pubsub_topic_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_topic_name(),
      GetArenaNoVirtual());
  }
  subfolder_matches_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subfolder_matches().size() > 0) {
    subfolder_matches_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subfolder_matches(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.EventNotificationConfig)
}

void EventNotificationConfig::SharedCtor() {
  pubsub_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subfolder_matches_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EventNotificationConfig::~EventNotificationConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.EventNotificationConfig)
  SharedDtor();
}

void EventNotificationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  pubsub_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subfolder_matches_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventNotificationConfig::ArenaDtor(void* object) {
  EventNotificationConfig* _this = reinterpret_cast< EventNotificationConfig* >(object);
  (void)_this;
}
void EventNotificationConfig::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void EventNotificationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventNotificationConfig::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventNotificationConfig& EventNotificationConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_EventNotificationConfig.base);
  return *internal_default_instance();
}


void EventNotificationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.EventNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubsub_topic_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  subfolder_matches_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool EventNotificationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.EventNotificationConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pubsub_topic_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubsub_topic_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.EventNotificationConfig.pubsub_topic_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subfolder_matches = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subfolder_matches()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subfolder_matches().data(), static_cast<int>(this->subfolder_matches().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.EventNotificationConfig.subfolder_matches"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.EventNotificationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.EventNotificationConfig)
  return false;
#undef DO_
}

void EventNotificationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.EventNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.EventNotificationConfig.pubsub_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pubsub_topic_name(), output);
  }

  // string subfolder_matches = 2;
  if (this->subfolder_matches().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subfolder_matches().data(), static_cast<int>(this->subfolder_matches().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.EventNotificationConfig.subfolder_matches");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subfolder_matches(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.EventNotificationConfig)
}

::google::protobuf::uint8* EventNotificationConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.EventNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.EventNotificationConfig.pubsub_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pubsub_topic_name(), target);
  }

  // string subfolder_matches = 2;
  if (this->subfolder_matches().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subfolder_matches().data(), static_cast<int>(this->subfolder_matches().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.EventNotificationConfig.subfolder_matches");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subfolder_matches(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.EventNotificationConfig)
  return target;
}

size_t EventNotificationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.EventNotificationConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubsub_topic_name());
  }

  // string subfolder_matches = 2;
  if (this->subfolder_matches().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subfolder_matches());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventNotificationConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.EventNotificationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const EventNotificationConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventNotificationConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.EventNotificationConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.EventNotificationConfig)
    MergeFrom(*source);
  }
}

void EventNotificationConfig::MergeFrom(const EventNotificationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.EventNotificationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubsub_topic_name().size() > 0) {
    set_pubsub_topic_name(from.pubsub_topic_name());
  }
  if (from.subfolder_matches().size() > 0) {
    set_subfolder_matches(from.subfolder_matches());
  }
}

void EventNotificationConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.EventNotificationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventNotificationConfig::CopyFrom(const EventNotificationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.EventNotificationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventNotificationConfig::IsInitialized() const {
  return true;
}

void EventNotificationConfig::Swap(EventNotificationConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventNotificationConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventNotificationConfig::UnsafeArenaSwap(EventNotificationConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventNotificationConfig::InternalSwap(EventNotificationConfig* other) {
  using std::swap;
  pubsub_topic_name_.Swap(&other->pubsub_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subfolder_matches_.Swap(&other->subfolder_matches_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventNotificationConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateNotificationConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateNotificationConfig::kPubsubTopicNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateNotificationConfig::StateNotificationConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_StateNotificationConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.StateNotificationConfig)
}
StateNotificationConfig::StateNotificationConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_StateNotificationConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.StateNotificationConfig)
}
StateNotificationConfig::StateNotificationConfig(const StateNotificationConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubsub_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubsub_topic_name().size() > 0) {
    pubsub_topic_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_topic_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.StateNotificationConfig)
}

void StateNotificationConfig::SharedCtor() {
  pubsub_topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StateNotificationConfig::~StateNotificationConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.StateNotificationConfig)
  SharedDtor();
}

void StateNotificationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  pubsub_topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StateNotificationConfig::ArenaDtor(void* object) {
  StateNotificationConfig* _this = reinterpret_cast< StateNotificationConfig* >(object);
  (void)_this;
}
void StateNotificationConfig::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void StateNotificationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateNotificationConfig::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateNotificationConfig& StateNotificationConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_StateNotificationConfig.base);
  return *internal_default_instance();
}


void StateNotificationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.StateNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubsub_topic_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool StateNotificationConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.StateNotificationConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pubsub_topic_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubsub_topic_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.StateNotificationConfig.pubsub_topic_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.StateNotificationConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.StateNotificationConfig)
  return false;
#undef DO_
}

void StateNotificationConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.StateNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.StateNotificationConfig.pubsub_topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pubsub_topic_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.StateNotificationConfig)
}

::google::protobuf::uint8* StateNotificationConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.StateNotificationConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_topic_name().data(), static_cast<int>(this->pubsub_topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.StateNotificationConfig.pubsub_topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pubsub_topic_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.StateNotificationConfig)
  return target;
}

size_t StateNotificationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.StateNotificationConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pubsub_topic_name = 1;
  if (this->pubsub_topic_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubsub_topic_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateNotificationConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.StateNotificationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const StateNotificationConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateNotificationConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.StateNotificationConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.StateNotificationConfig)
    MergeFrom(*source);
  }
}

void StateNotificationConfig::MergeFrom(const StateNotificationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.StateNotificationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pubsub_topic_name().size() > 0) {
    set_pubsub_topic_name(from.pubsub_topic_name());
  }
}

void StateNotificationConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.StateNotificationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateNotificationConfig::CopyFrom(const StateNotificationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.StateNotificationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateNotificationConfig::IsInitialized() const {
  return true;
}

void StateNotificationConfig::Swap(StateNotificationConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StateNotificationConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StateNotificationConfig::UnsafeArenaSwap(StateNotificationConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StateNotificationConfig::InternalSwap(StateNotificationConfig* other) {
  using std::swap;
  pubsub_topic_name_.Swap(&other->pubsub_topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateNotificationConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegistryCredential::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_RegistryCredential_default_instance_.public_key_certificate_ = const_cast< ::google::cloud::iot::v1::PublicKeyCertificate*>(
      ::google::cloud::iot::v1::PublicKeyCertificate::internal_default_instance());
}
void RegistryCredential::set_allocated_public_key_certificate(::google::cloud::iot::v1::PublicKeyCertificate* public_key_certificate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_credential();
  if (public_key_certificate) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(public_key_certificate);
    if (message_arena != submessage_arena) {
      public_key_certificate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, public_key_certificate, submessage_arena);
    }
    set_has_public_key_certificate();
    credential_.public_key_certificate_ = public_key_certificate;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.RegistryCredential.public_key_certificate)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistryCredential::kPublicKeyCertificateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistryCredential::RegistryCredential()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_RegistryCredential.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.RegistryCredential)
}
RegistryCredential::RegistryCredential(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_RegistryCredential.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.RegistryCredential)
}
RegistryCredential::RegistryCredential(const RegistryCredential& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_credential();
  switch (from.credential_case()) {
    case kPublicKeyCertificate: {
      mutable_public_key_certificate()->::google::cloud::iot::v1::PublicKeyCertificate::MergeFrom(from.public_key_certificate());
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.RegistryCredential)
}

void RegistryCredential::SharedCtor() {
  clear_has_credential();
}

RegistryCredential::~RegistryCredential() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.RegistryCredential)
  SharedDtor();
}

void RegistryCredential::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_credential()) {
    clear_credential();
  }
}

void RegistryCredential::ArenaDtor(void* object) {
  RegistryCredential* _this = reinterpret_cast< RegistryCredential* >(object);
  (void)_this;
}
void RegistryCredential::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void RegistryCredential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegistryCredential::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegistryCredential& RegistryCredential::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_RegistryCredential.base);
  return *internal_default_instance();
}


void RegistryCredential::clear_credential() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.iot.v1.RegistryCredential)
  switch (credential_case()) {
    case kPublicKeyCertificate: {
      if (GetArenaNoVirtual() == NULL) {
        delete credential_.public_key_certificate_;
      }
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDENTIAL_NOT_SET;
}


void RegistryCredential::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.RegistryCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_credential();
  _internal_metadata_.Clear();
}

bool RegistryCredential::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.RegistryCredential)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_public_key_certificate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.RegistryCredential)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.RegistryCredential)
  return false;
#undef DO_
}

void RegistryCredential::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.RegistryCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;
  if (has_public_key_certificate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_public_key_certificate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.RegistryCredential)
}

::google::protobuf::uint8* RegistryCredential::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.RegistryCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;
  if (has_public_key_certificate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_public_key_certificate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.RegistryCredential)
  return target;
}

size_t RegistryCredential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.RegistryCredential)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (credential_case()) {
    // .google.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;
    case kPublicKeyCertificate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *credential_.public_key_certificate_);
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegistryCredential::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.RegistryCredential)
  GOOGLE_DCHECK_NE(&from, this);
  const RegistryCredential* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistryCredential>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.RegistryCredential)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.RegistryCredential)
    MergeFrom(*source);
  }
}

void RegistryCredential::MergeFrom(const RegistryCredential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.RegistryCredential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.credential_case()) {
    case kPublicKeyCertificate: {
      mutable_public_key_certificate()->::google::cloud::iot::v1::PublicKeyCertificate::MergeFrom(from.public_key_certificate());
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
}

void RegistryCredential::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.RegistryCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistryCredential::CopyFrom(const RegistryCredential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.RegistryCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistryCredential::IsInitialized() const {
  return true;
}

void RegistryCredential::Swap(RegistryCredential* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegistryCredential* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegistryCredential::UnsafeArenaSwap(RegistryCredential* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegistryCredential::InternalSwap(RegistryCredential* other) {
  using std::swap;
  swap(credential_, other->credential_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegistryCredential::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void X509CertificateDetails::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_X509CertificateDetails_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_X509CertificateDetails_default_instance_._instance.get_mutable()->expiry_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void X509CertificateDetails::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.X509CertificateDetails.start_time)
}
void X509CertificateDetails::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void X509CertificateDetails::unsafe_arena_set_allocated_expiry_time(
    ::google::protobuf::Timestamp* expiry_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete expiry_time_;
  }
  expiry_time_ = expiry_time;
  if (expiry_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.X509CertificateDetails.expiry_time)
}
void X509CertificateDetails::clear_expiry_time() {
  if (GetArenaNoVirtual() == NULL && expiry_time_ != NULL) {
    delete expiry_time_;
  }
  expiry_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int X509CertificateDetails::kIssuerFieldNumber;
const int X509CertificateDetails::kSubjectFieldNumber;
const int X509CertificateDetails::kStartTimeFieldNumber;
const int X509CertificateDetails::kExpiryTimeFieldNumber;
const int X509CertificateDetails::kSignatureAlgorithmFieldNumber;
const int X509CertificateDetails::kPublicKeyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

X509CertificateDetails::X509CertificateDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_X509CertificateDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.X509CertificateDetails)
}
X509CertificateDetails::X509CertificateDetails(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_X509CertificateDetails.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.X509CertificateDetails)
}
X509CertificateDetails::X509CertificateDetails(const X509CertificateDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer(),
      GetArenaNoVirtual());
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject(),
      GetArenaNoVirtual());
  }
  signature_algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature_algorithm().size() > 0) {
    signature_algorithm_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_algorithm(),
      GetArenaNoVirtual());
  }
  public_key_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key_type().size() > 0) {
    public_key_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_type(),
      GetArenaNoVirtual());
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_expiry_time()) {
    expiry_time_ = new ::google::protobuf::Timestamp(*from.expiry_time_);
  } else {
    expiry_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.X509CertificateDetails)
}

void X509CertificateDetails::SharedCtor() {
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(expiry_time_));
}

X509CertificateDetails::~X509CertificateDetails() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.X509CertificateDetails)
  SharedDtor();
}

void X509CertificateDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete expiry_time_;
}

void X509CertificateDetails::ArenaDtor(void* object) {
  X509CertificateDetails* _this = reinterpret_cast< X509CertificateDetails* >(object);
  (void)_this;
}
void X509CertificateDetails::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void X509CertificateDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* X509CertificateDetails::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const X509CertificateDetails& X509CertificateDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_X509CertificateDetails.base);
  return *internal_default_instance();
}


void X509CertificateDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.X509CertificateDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issuer_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  signature_algorithm_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  public_key_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && expiry_time_ != NULL) {
    delete expiry_time_;
  }
  expiry_time_ = NULL;
  _internal_metadata_.Clear();
}

bool X509CertificateDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.X509CertificateDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.X509CertificateDetails.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.X509CertificateDetails.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expiry_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiry_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature_algorithm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature_algorithm().data(), static_cast<int>(this->signature_algorithm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.X509CertificateDetails.signature_algorithm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string public_key_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key_type().data(), static_cast<int>(this->public_key_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.X509CertificateDetails.public_key_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.X509CertificateDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.X509CertificateDetails)
  return false;
#undef DO_
}

void X509CertificateDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.X509CertificateDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_start_time(), output);
  }

  // .google.protobuf.Timestamp expiry_time = 4;
  if (this->has_expiry_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_expiry_time(), output);
  }

  // string signature_algorithm = 5;
  if (this->signature_algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature_algorithm().data(), static_cast<int>(this->signature_algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.signature_algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature_algorithm(), output);
  }

  // string public_key_type = 6;
  if (this->public_key_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_type().data(), static_cast<int>(this->public_key_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.public_key_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->public_key_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.X509CertificateDetails)
}

::google::protobuf::uint8* X509CertificateDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.X509CertificateDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_start_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp expiry_time = 4;
  if (this->has_expiry_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_expiry_time(), deterministic, target);
  }

  // string signature_algorithm = 5;
  if (this->signature_algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature_algorithm().data(), static_cast<int>(this->signature_algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.signature_algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature_algorithm(), target);
  }

  // string public_key_type = 6;
  if (this->public_key_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key_type().data(), static_cast<int>(this->public_key_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.X509CertificateDetails.public_key_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->public_key_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.X509CertificateDetails)
  return target;
}

size_t X509CertificateDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.X509CertificateDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string signature_algorithm = 5;
  if (this->signature_algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature_algorithm());
  }

  // string public_key_type = 6;
  if (this->public_key_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key_type());
  }

  // .google.protobuf.Timestamp start_time = 3;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp expiry_time = 4;
  if (this->has_expiry_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiry_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void X509CertificateDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.X509CertificateDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const X509CertificateDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const X509CertificateDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.X509CertificateDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.X509CertificateDetails)
    MergeFrom(*source);
  }
}

void X509CertificateDetails::MergeFrom(const X509CertificateDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.X509CertificateDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issuer().size() > 0) {
    set_issuer(from.issuer());
  }
  if (from.subject().size() > 0) {
    set_subject(from.subject());
  }
  if (from.signature_algorithm().size() > 0) {
    set_signature_algorithm(from.signature_algorithm());
  }
  if (from.public_key_type().size() > 0) {
    set_public_key_type(from.public_key_type());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_expiry_time()) {
    mutable_expiry_time()->::google::protobuf::Timestamp::MergeFrom(from.expiry_time());
  }
}

void X509CertificateDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.X509CertificateDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void X509CertificateDetails::CopyFrom(const X509CertificateDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.X509CertificateDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool X509CertificateDetails::IsInitialized() const {
  return true;
}

void X509CertificateDetails::Swap(X509CertificateDetails* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    X509CertificateDetails* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void X509CertificateDetails::UnsafeArenaSwap(X509CertificateDetails* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void X509CertificateDetails::InternalSwap(X509CertificateDetails* other) {
  using std::swap;
  issuer_.Swap(&other->issuer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_algorithm_.Swap(&other->signature_algorithm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_key_type_.Swap(&other->public_key_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_time_, other->start_time_);
  swap(expiry_time_, other->expiry_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata X509CertificateDetails::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublicKeyCertificate::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_PublicKeyCertificate_default_instance_._instance.get_mutable()->x509_details_ = const_cast< ::google::cloud::iot::v1::X509CertificateDetails*>(
      ::google::cloud::iot::v1::X509CertificateDetails::internal_default_instance());
}
void PublicKeyCertificate::unsafe_arena_set_allocated_x509_details(
    ::google::cloud::iot::v1::X509CertificateDetails* x509_details) {
  if (GetArenaNoVirtual() == NULL) {
    delete x509_details_;
  }
  x509_details_ = x509_details;
  if (x509_details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.PublicKeyCertificate.x509_details)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublicKeyCertificate::kFormatFieldNumber;
const int PublicKeyCertificate::kCertificateFieldNumber;
const int PublicKeyCertificate::kX509DetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublicKeyCertificate::PublicKeyCertificate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCertificate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.PublicKeyCertificate)
}
PublicKeyCertificate::PublicKeyCertificate(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCertificate.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.PublicKeyCertificate)
}
PublicKeyCertificate::PublicKeyCertificate(const PublicKeyCertificate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certificate().size() > 0) {
    certificate_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certificate(),
      GetArenaNoVirtual());
  }
  if (from.has_x509_details()) {
    x509_details_ = new ::google::cloud::iot::v1::X509CertificateDetails(*from.x509_details_);
  } else {
    x509_details_ = NULL;
  }
  format_ = from.format_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.PublicKeyCertificate)
}

void PublicKeyCertificate::SharedCtor() {
  certificate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x509_details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&x509_details_)) + sizeof(format_));
}

PublicKeyCertificate::~PublicKeyCertificate() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.PublicKeyCertificate)
  SharedDtor();
}

void PublicKeyCertificate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  certificate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete x509_details_;
}

void PublicKeyCertificate::ArenaDtor(void* object) {
  PublicKeyCertificate* _this = reinterpret_cast< PublicKeyCertificate* >(object);
  (void)_this;
}
void PublicKeyCertificate::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void PublicKeyCertificate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublicKeyCertificate::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublicKeyCertificate& PublicKeyCertificate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCertificate.base);
  return *internal_default_instance();
}


void PublicKeyCertificate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.PublicKeyCertificate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  certificate_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && x509_details_ != NULL) {
    delete x509_details_;
  }
  x509_details_ = NULL;
  format_ = 0;
  _internal_metadata_.Clear();
}

bool PublicKeyCertificate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.PublicKeyCertificate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.PublicKeyCertificateFormat format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::google::cloud::iot::v1::PublicKeyCertificateFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string certificate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certificate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certificate().data(), static_cast<int>(this->certificate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.PublicKeyCertificate.certificate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.iot.v1.X509CertificateDetails x509_details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x509_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.PublicKeyCertificate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.PublicKeyCertificate)
  return false;
#undef DO_
}

void PublicKeyCertificate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.PublicKeyCertificate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCertificateFormat format = 1;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // string certificate = 2;
  if (this->certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certificate().data(), static_cast<int>(this->certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.PublicKeyCertificate.certificate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->certificate(), output);
  }

  // .google.cloud.iot.v1.X509CertificateDetails x509_details = 3;
  if (this->has_x509_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_x509_details(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.PublicKeyCertificate)
}

::google::protobuf::uint8* PublicKeyCertificate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.PublicKeyCertificate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCertificateFormat format = 1;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // string certificate = 2;
  if (this->certificate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certificate().data(), static_cast<int>(this->certificate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.PublicKeyCertificate.certificate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->certificate(), target);
  }

  // .google.cloud.iot.v1.X509CertificateDetails x509_details = 3;
  if (this->has_x509_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_x509_details(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.PublicKeyCertificate)
  return target;
}

size_t PublicKeyCertificate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.PublicKeyCertificate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string certificate = 2;
  if (this->certificate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certificate());
  }

  // .google.cloud.iot.v1.X509CertificateDetails x509_details = 3;
  if (this->has_x509_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *x509_details_);
  }

  // .google.cloud.iot.v1.PublicKeyCertificateFormat format = 1;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicKeyCertificate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.PublicKeyCertificate)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicKeyCertificate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublicKeyCertificate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.PublicKeyCertificate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.PublicKeyCertificate)
    MergeFrom(*source);
  }
}

void PublicKeyCertificate::MergeFrom(const PublicKeyCertificate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.PublicKeyCertificate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.certificate().size() > 0) {
    set_certificate(from.certificate());
  }
  if (from.has_x509_details()) {
    mutable_x509_details()->::google::cloud::iot::v1::X509CertificateDetails::MergeFrom(from.x509_details());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void PublicKeyCertificate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.PublicKeyCertificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicKeyCertificate::CopyFrom(const PublicKeyCertificate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.PublicKeyCertificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicKeyCertificate::IsInitialized() const {
  return true;
}

void PublicKeyCertificate::Swap(PublicKeyCertificate* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PublicKeyCertificate* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PublicKeyCertificate::UnsafeArenaSwap(PublicKeyCertificate* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PublicKeyCertificate::InternalSwap(PublicKeyCertificate* other) {
  using std::swap;
  certificate_.Swap(&other->certificate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x509_details_, other->x509_details_);
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublicKeyCertificate::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceCredential::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_DeviceCredential_default_instance_.public_key_ = const_cast< ::google::cloud::iot::v1::PublicKeyCredential*>(
      ::google::cloud::iot::v1::PublicKeyCredential::internal_default_instance());
  ::google::cloud::iot::v1::_DeviceCredential_default_instance_._instance.get_mutable()->expiration_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DeviceCredential::set_allocated_public_key(::google::cloud::iot::v1::PublicKeyCredential* public_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_credential();
  if (public_key) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(public_key);
    if (message_arena != submessage_arena) {
      public_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, public_key, submessage_arena);
    }
    set_has_public_key();
    credential_.public_key_ = public_key;
  }
  // @@protoc_insertion_point(field_set_allocated:google.cloud.iot.v1.DeviceCredential.public_key)
}
void DeviceCredential::unsafe_arena_set_allocated_expiration_time(
    ::google::protobuf::Timestamp* expiration_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete expiration_time_;
  }
  expiration_time_ = expiration_time;
  if (expiration_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceCredential.expiration_time)
}
void DeviceCredential::clear_expiration_time() {
  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceCredential::kPublicKeyFieldNumber;
const int DeviceCredential::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceCredential::DeviceCredential()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceCredential.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.DeviceCredential)
}
DeviceCredential::DeviceCredential(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceCredential.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.DeviceCredential)
}
DeviceCredential::DeviceCredential(const DeviceCredential& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expiration_time()) {
    expiration_time_ = new ::google::protobuf::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = NULL;
  }
  clear_has_credential();
  switch (from.credential_case()) {
    case kPublicKey: {
      mutable_public_key()->::google::cloud::iot::v1::PublicKeyCredential::MergeFrom(from.public_key());
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.DeviceCredential)
}

void DeviceCredential::SharedCtor() {
  expiration_time_ = NULL;
  clear_has_credential();
}

DeviceCredential::~DeviceCredential() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.DeviceCredential)
  SharedDtor();
}

void DeviceCredential::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete expiration_time_;
  if (has_credential()) {
    clear_credential();
  }
}

void DeviceCredential::ArenaDtor(void* object) {
  DeviceCredential* _this = reinterpret_cast< DeviceCredential* >(object);
  (void)_this;
}
void DeviceCredential::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeviceCredential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceCredential::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceCredential& DeviceCredential::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceCredential.base);
  return *internal_default_instance();
}


void DeviceCredential::clear_credential() {
// @@protoc_insertion_point(one_of_clear_start:google.cloud.iot.v1.DeviceCredential)
  switch (credential_case()) {
    case kPublicKey: {
      if (GetArenaNoVirtual() == NULL) {
        delete credential_.public_key_;
      }
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CREDENTIAL_NOT_SET;
}


void DeviceCredential::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.DeviceCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && expiration_time_ != NULL) {
    delete expiration_time_;
  }
  expiration_time_ = NULL;
  clear_credential();
  _internal_metadata_.Clear();
}

bool DeviceCredential::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.DeviceCredential)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.PublicKeyCredential public_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expiration_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiration_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.DeviceCredential)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.DeviceCredential)
  return false;
#undef DO_
}

void DeviceCredential::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.DeviceCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCredential public_key = 2;
  if (has_public_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_public_key(), output);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_expiration_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.DeviceCredential)
}

::google::protobuf::uint8* DeviceCredential::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.DeviceCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyCredential public_key = 2;
  if (has_public_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_public_key(), deterministic, target);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_expiration_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.DeviceCredential)
  return target;
}

size_t DeviceCredential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.DeviceCredential)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  switch (credential_case()) {
    // .google.cloud.iot.v1.PublicKeyCredential public_key = 2;
    case kPublicKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *credential_.public_key_);
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceCredential::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.DeviceCredential)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceCredential* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceCredential>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.DeviceCredential)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.DeviceCredential)
    MergeFrom(*source);
  }
}

void DeviceCredential::MergeFrom(const DeviceCredential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.DeviceCredential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expiration_time()) {
    mutable_expiration_time()->::google::protobuf::Timestamp::MergeFrom(from.expiration_time());
  }
  switch (from.credential_case()) {
    case kPublicKey: {
      mutable_public_key()->::google::cloud::iot::v1::PublicKeyCredential::MergeFrom(from.public_key());
      break;
    }
    case CREDENTIAL_NOT_SET: {
      break;
    }
  }
}

void DeviceCredential::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.DeviceCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceCredential::CopyFrom(const DeviceCredential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.DeviceCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceCredential::IsInitialized() const {
  return true;
}

void DeviceCredential::Swap(DeviceCredential* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceCredential* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceCredential::UnsafeArenaSwap(DeviceCredential* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceCredential::InternalSwap(DeviceCredential* other) {
  using std::swap;
  swap(expiration_time_, other->expiration_time_);
  swap(credential_, other->credential_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceCredential::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublicKeyCredential::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublicKeyCredential::kFormatFieldNumber;
const int PublicKeyCredential::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublicKeyCredential::PublicKeyCredential()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCredential.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.PublicKeyCredential)
}
PublicKeyCredential::PublicKeyCredential(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCredential.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.PublicKeyCredential)
}
PublicKeyCredential::PublicKeyCredential(const PublicKeyCredential& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key(),
      GetArenaNoVirtual());
  }
  format_ = from.format_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.PublicKeyCredential)
}

void PublicKeyCredential::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
}

PublicKeyCredential::~PublicKeyCredential() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.PublicKeyCredential)
  SharedDtor();
}

void PublicKeyCredential::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublicKeyCredential::ArenaDtor(void* object) {
  PublicKeyCredential* _this = reinterpret_cast< PublicKeyCredential* >(object);
  (void)_this;
}
void PublicKeyCredential::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void PublicKeyCredential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublicKeyCredential::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublicKeyCredential& PublicKeyCredential::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_PublicKeyCredential.base);
  return *internal_default_instance();
}


void PublicKeyCredential::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.PublicKeyCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  format_ = 0;
  _internal_metadata_.Clear();
}

bool PublicKeyCredential::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.PublicKeyCredential)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.cloud.iot.v1.PublicKeyFormat format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::google::cloud::iot::v1::PublicKeyFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.iot.v1.PublicKeyCredential.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.PublicKeyCredential)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.PublicKeyCredential)
  return false;
#undef DO_
}

void PublicKeyCredential::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.PublicKeyCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyFormat format = 1;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.PublicKeyCredential.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.PublicKeyCredential)
}

::google::protobuf::uint8* PublicKeyCredential::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.PublicKeyCredential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.cloud.iot.v1.PublicKeyFormat format = 1;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.iot.v1.PublicKeyCredential.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.PublicKeyCredential)
  return target;
}

size_t PublicKeyCredential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.PublicKeyCredential)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .google.cloud.iot.v1.PublicKeyFormat format = 1;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicKeyCredential::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.PublicKeyCredential)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicKeyCredential* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublicKeyCredential>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.PublicKeyCredential)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.PublicKeyCredential)
    MergeFrom(*source);
  }
}

void PublicKeyCredential::MergeFrom(const PublicKeyCredential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.PublicKeyCredential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    set_key(from.key());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void PublicKeyCredential::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.PublicKeyCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicKeyCredential::CopyFrom(const PublicKeyCredential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.PublicKeyCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicKeyCredential::IsInitialized() const {
  return true;
}

void PublicKeyCredential::Swap(PublicKeyCredential* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PublicKeyCredential* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PublicKeyCredential::UnsafeArenaSwap(PublicKeyCredential* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PublicKeyCredential::InternalSwap(PublicKeyCredential* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublicKeyCredential::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceConfig::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_DeviceConfig_default_instance_._instance.get_mutable()->cloud_update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::cloud::iot::v1::_DeviceConfig_default_instance_._instance.get_mutable()->device_ack_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DeviceConfig::unsafe_arena_set_allocated_cloud_update_time(
    ::google::protobuf::Timestamp* cloud_update_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete cloud_update_time_;
  }
  cloud_update_time_ = cloud_update_time;
  if (cloud_update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceConfig.cloud_update_time)
}
void DeviceConfig::clear_cloud_update_time() {
  if (GetArenaNoVirtual() == NULL && cloud_update_time_ != NULL) {
    delete cloud_update_time_;
  }
  cloud_update_time_ = NULL;
}
void DeviceConfig::unsafe_arena_set_allocated_device_ack_time(
    ::google::protobuf::Timestamp* device_ack_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete device_ack_time_;
  }
  device_ack_time_ = device_ack_time;
  if (device_ack_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceConfig.device_ack_time)
}
void DeviceConfig::clear_device_ack_time() {
  if (GetArenaNoVirtual() == NULL && device_ack_time_ != NULL) {
    delete device_ack_time_;
  }
  device_ack_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceConfig::kVersionFieldNumber;
const int DeviceConfig::kCloudUpdateTimeFieldNumber;
const int DeviceConfig::kDeviceAckTimeFieldNumber;
const int DeviceConfig::kBinaryDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceConfig::DeviceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.DeviceConfig)
}
DeviceConfig::DeviceConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.DeviceConfig)
}
DeviceConfig::DeviceConfig(const DeviceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_data().size() > 0) {
    binary_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_data(),
      GetArenaNoVirtual());
  }
  if (from.has_cloud_update_time()) {
    cloud_update_time_ = new ::google::protobuf::Timestamp(*from.cloud_update_time_);
  } else {
    cloud_update_time_ = NULL;
  }
  if (from.has_device_ack_time()) {
    device_ack_time_ = new ::google::protobuf::Timestamp(*from.device_ack_time_);
  } else {
    device_ack_time_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.DeviceConfig)
}

void DeviceConfig::SharedCtor() {
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cloud_update_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&cloud_update_time_)) + sizeof(version_));
}

DeviceConfig::~DeviceConfig() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.DeviceConfig)
  SharedDtor();
}

void DeviceConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  binary_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cloud_update_time_;
  if (this != internal_default_instance()) delete device_ack_time_;
}

void DeviceConfig::ArenaDtor(void* object) {
  DeviceConfig* _this = reinterpret_cast< DeviceConfig* >(object);
  (void)_this;
}
void DeviceConfig::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeviceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceConfig::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceConfig& DeviceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceConfig.base);
  return *internal_default_instance();
}


void DeviceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binary_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && cloud_update_time_ != NULL) {
    delete cloud_update_time_;
  }
  cloud_update_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_ack_time_ != NULL) {
    delete device_ack_time_;
  }
  device_ack_time_ = NULL;
  version_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeviceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.DeviceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp cloud_update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cloud_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp device_ack_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_ack_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binary_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.DeviceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.DeviceConfig)
  return false;
#undef DO_
}

void DeviceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  // .google.protobuf.Timestamp cloud_update_time = 2;
  if (this->has_cloud_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cloud_update_time(), output);
  }

  // .google.protobuf.Timestamp device_ack_time = 3;
  if (this->has_device_ack_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_device_ack_time(), output);
  }

  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->binary_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.DeviceConfig)
}

::google::protobuf::uint8* DeviceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }

  // .google.protobuf.Timestamp cloud_update_time = 2;
  if (this->has_cloud_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cloud_update_time(), deterministic, target);
  }

  // .google.protobuf.Timestamp device_ack_time = 3;
  if (this->has_device_ack_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_device_ack_time(), deterministic, target);
  }

  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->binary_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.DeviceConfig)
  return target;
}

size_t DeviceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.DeviceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes binary_data = 4;
  if (this->binary_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binary_data());
  }

  // .google.protobuf.Timestamp cloud_update_time = 2;
  if (this->has_cloud_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cloud_update_time_);
  }

  // .google.protobuf.Timestamp device_ack_time = 3;
  if (this->has_device_ack_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_ack_time_);
  }

  // int64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.DeviceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.DeviceConfig)
    MergeFrom(*source);
  }
}

void DeviceConfig::MergeFrom(const DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.binary_data().size() > 0) {
    set_binary_data(from.binary_data());
  }
  if (from.has_cloud_update_time()) {
    mutable_cloud_update_time()->::google::protobuf::Timestamp::MergeFrom(from.cloud_update_time());
  }
  if (from.has_device_ack_time()) {
    mutable_device_ack_time()->::google::protobuf::Timestamp::MergeFrom(from.device_ack_time());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void DeviceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceConfig::CopyFrom(const DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceConfig::IsInitialized() const {
  return true;
}

void DeviceConfig::Swap(DeviceConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceConfig::UnsafeArenaSwap(DeviceConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceConfig::InternalSwap(DeviceConfig* other) {
  using std::swap;
  binary_data_.Swap(&other->binary_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cloud_update_time_, other->cloud_update_time_);
  swap(device_ack_time_, other->device_ack_time_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceConfig::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceState::InitAsDefaultInstance() {
  ::google::cloud::iot::v1::_DeviceState_default_instance_._instance.get_mutable()->update_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DeviceState::unsafe_arena_set_allocated_update_time(
    ::google::protobuf::Timestamp* update_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.cloud.iot.v1.DeviceState.update_time)
}
void DeviceState::clear_update_time() {
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceState::kUpdateTimeFieldNumber;
const int DeviceState::kBinaryDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceState::DeviceState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.iot.v1.DeviceState)
}
DeviceState::DeviceState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceState.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.cloud.iot.v1.DeviceState)
}
DeviceState::DeviceState(const DeviceState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_data().size() > 0) {
    binary_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_data(),
      GetArenaNoVirtual());
  }
  if (from.has_update_time()) {
    update_time_ = new ::google::protobuf::Timestamp(*from.update_time_);
  } else {
    update_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.iot.v1.DeviceState)
}

void DeviceState::SharedCtor() {
  binary_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_time_ = NULL;
}

DeviceState::~DeviceState() {
  // @@protoc_insertion_point(destructor:google.cloud.iot.v1.DeviceState)
  SharedDtor();
}

void DeviceState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  binary_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete update_time_;
}

void DeviceState::ArenaDtor(void* object) {
  DeviceState* _this = reinterpret_cast< DeviceState* >(object);
  (void)_this;
}
void DeviceState::RegisterArenaDtor(::google::protobuf::Arena*) {
}
void DeviceState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceState::descriptor() {
  ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceState& DeviceState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::scc_info_DeviceState.base);
  return *internal_default_instance();
}


void DeviceState::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.iot.v1.DeviceState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binary_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && update_time_ != NULL) {
    delete update_time_;
  }
  update_time_ = NULL;
  _internal_metadata_.Clear();
}

bool DeviceState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.iot.v1.DeviceState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binary_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.iot.v1.DeviceState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.iot.v1.DeviceState)
  return false;
#undef DO_
}

void DeviceState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.iot.v1.DeviceState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp update_time = 1;
  if (this->has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_update_time(), output);
  }

  // bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->binary_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.iot.v1.DeviceState)
}

::google::protobuf::uint8* DeviceState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.iot.v1.DeviceState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp update_time = 1;
  if (this->has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_update_time(), deterministic, target);
  }

  // bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->binary_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.iot.v1.DeviceState)
  return target;
}

size_t DeviceState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.iot.v1.DeviceState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes binary_data = 2;
  if (this->binary_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binary_data());
  }

  // .google.protobuf.Timestamp update_time = 1;
  if (this->has_update_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.iot.v1.DeviceState)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.iot.v1.DeviceState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.iot.v1.DeviceState)
    MergeFrom(*source);
  }
}

void DeviceState::MergeFrom(const DeviceState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.iot.v1.DeviceState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.binary_data().size() > 0) {
    set_binary_data(from.binary_data());
  }
  if (from.has_update_time()) {
    mutable_update_time()->::google::protobuf::Timestamp::MergeFrom(from.update_time());
  }
}

void DeviceState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.iot.v1.DeviceState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceState::CopyFrom(const DeviceState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.iot.v1.DeviceState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceState::IsInitialized() const {
  return true;
}

void DeviceState::Swap(DeviceState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeviceState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeviceState::UnsafeArenaSwap(DeviceState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeviceState::InternalSwap(DeviceState* other) {
  using std::swap;
  binary_data_.Swap(&other->binary_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_time_, other->update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceState::GetMetadata() const {
  protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fiot_2fv1_2fresources_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace iot
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::Device_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::Device* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::Device >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::Device >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::DeviceRegistry* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::DeviceRegistry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::DeviceRegistry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::MqttConfig* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::MqttConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::MqttConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::HttpConfig* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::HttpConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::HttpConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::EventNotificationConfig* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::EventNotificationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::EventNotificationConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::StateNotificationConfig* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::StateNotificationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::StateNotificationConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::RegistryCredential* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::RegistryCredential >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::RegistryCredential >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::X509CertificateDetails* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::X509CertificateDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::X509CertificateDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::PublicKeyCertificate* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::PublicKeyCertificate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::PublicKeyCertificate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::DeviceCredential* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::DeviceCredential >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::DeviceCredential >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::PublicKeyCredential* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::PublicKeyCredential >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::PublicKeyCredential >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::DeviceConfig* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::DeviceConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::DeviceConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::iot::v1::DeviceState* Arena::CreateMaybeMessage< ::google::cloud::iot::v1::DeviceState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::cloud::iot::v1::DeviceState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
