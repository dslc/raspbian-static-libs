// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/redis/v1beta1/cloud_redis.proto

#include "google/cloud/redis/v1beta1/cloud_redis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Instance_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Instance_RedisConfigsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ZoneMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LocationMetadata_AvailableZonesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Instance;
}  // namespace protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto
namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ffield_5fmask_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMask;
}  // namespace protobuf_google_2fprotobuf_2ffield_5fmask_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace cloud {
namespace redis {
namespace v1beta1 {
class Instance_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance_LabelsEntry_DoNotUse>
      _instance;
} _Instance_LabelsEntry_DoNotUse_default_instance_;
class Instance_RedisConfigsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance_RedisConfigsEntry_DoNotUse>
      _instance;
} _Instance_RedisConfigsEntry_DoNotUse_default_instance_;
class InstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instance>
      _instance;
} _Instance_default_instance_;
class ListInstancesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesRequest>
      _instance;
} _ListInstancesRequest_default_instance_;
class ListInstancesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInstancesResponse>
      _instance;
} _ListInstancesResponse_default_instance_;
class GetInstanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetInstanceRequest>
      _instance;
} _GetInstanceRequest_default_instance_;
class CreateInstanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateInstanceRequest>
      _instance;
} _CreateInstanceRequest_default_instance_;
class UpdateInstanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateInstanceRequest>
      _instance;
} _UpdateInstanceRequest_default_instance_;
class DeleteInstanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteInstanceRequest>
      _instance;
} _DeleteInstanceRequest_default_instance_;
class LocationMetadata_AvailableZonesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationMetadata_AvailableZonesEntry_DoNotUse>
      _instance;
} _LocationMetadata_AvailableZonesEntry_DoNotUse_default_instance_;
class LocationMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationMetadata>
      _instance;
} _LocationMetadata_default_instance_;
class ZoneMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZoneMetadata>
      _instance;
} _ZoneMetadata_default_instance_;
}  // namespace v1beta1
}  // namespace redis
}  // namespace cloud
}  // namespace google
namespace protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto {
static void InitDefaultsInstance_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_Instance_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse();
  }
  ::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Instance_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstance_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsInstance_RedisConfigsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_Instance_RedisConfigsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse();
  }
  ::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Instance_RedisConfigsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstance_RedisConfigsEntry_DoNotUse}, {}};

static void InitDefaultsInstance() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_Instance_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::Instance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::Instance::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Instance =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsInstance}, {
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance_LabelsEntry_DoNotUse.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance_RedisConfigsEntry_DoNotUse.base,}};

static void InitDefaultsListInstancesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_ListInstancesRequest_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::ListInstancesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::ListInstancesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInstancesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInstancesRequest}, {}};

static void InitDefaultsListInstancesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_ListInstancesResponse_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::ListInstancesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::ListInstancesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListInstancesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListInstancesResponse}, {
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance.base,}};

static void InitDefaultsGetInstanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_GetInstanceRequest_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::GetInstanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::GetInstanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetInstanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetInstanceRequest}, {}};

static void InitDefaultsCreateInstanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_CreateInstanceRequest_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::CreateInstanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::CreateInstanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateInstanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateInstanceRequest}, {
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance.base,}};

static void InitDefaultsUpdateInstanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_UpdateInstanceRequest_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::UpdateInstanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::UpdateInstanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateInstanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateInstanceRequest}, {
      &protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::scc_info_FieldMask.base,
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance.base,}};

static void InitDefaultsDeleteInstanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_DeleteInstanceRequest_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::DeleteInstanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::DeleteInstanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteInstanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteInstanceRequest}, {}};

static void InitDefaultsLocationMetadata_AvailableZonesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_LocationMetadata_AvailableZonesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse();
  }
  ::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocationMetadata_AvailableZonesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocationMetadata_AvailableZonesEntry_DoNotUse}, {
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ZoneMetadata.base,}};

static void InitDefaultsLocationMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_LocationMetadata_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::LocationMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::LocationMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocationMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocationMetadata}, {
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_LocationMetadata_AvailableZonesEntry_DoNotUse.base,}};

static void InitDefaultsZoneMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::cloud::redis::v1beta1::_ZoneMetadata_default_instance_;
    new (ptr) ::google::cloud::redis::v1beta1::ZoneMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::cloud::redis::v1beta1::ZoneMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ZoneMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsZoneMetadata}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Instance_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Instance_RedisConfigsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Instance.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInstancesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInstancesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetInstanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateInstanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateInstanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteInstanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationMetadata_AvailableZonesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocationMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZoneMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, location_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, alternative_location_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, redis_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, reserved_ip_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, current_location_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, status_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, redis_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, tier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, memory_size_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::Instance, authorized_network_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesRequest, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesRequest, page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesResponse, instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ListInstancesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::GetInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::GetInstanceRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::CreateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::CreateInstanceRequest, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::CreateInstanceRequest, instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::CreateInstanceRequest, instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::UpdateInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::UpdateInstanceRequest, update_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::UpdateInstanceRequest, instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::DeleteInstanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::DeleteInstanceRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::LocationMetadata, available_zones_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::cloud::redis::v1beta1::ZoneMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse)},
  { 9, 16, sizeof(::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse)},
  { 18, -1, sizeof(::google::cloud::redis::v1beta1::Instance)},
  { 40, -1, sizeof(::google::cloud::redis::v1beta1::ListInstancesRequest)},
  { 48, -1, sizeof(::google::cloud::redis::v1beta1::ListInstancesResponse)},
  { 55, -1, sizeof(::google::cloud::redis::v1beta1::GetInstanceRequest)},
  { 61, -1, sizeof(::google::cloud::redis::v1beta1::CreateInstanceRequest)},
  { 69, -1, sizeof(::google::cloud::redis::v1beta1::UpdateInstanceRequest)},
  { 76, -1, sizeof(::google::cloud::redis::v1beta1::DeleteInstanceRequest)},
  { 82, 89, sizeof(::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse)},
  { 91, -1, sizeof(::google::cloud::redis::v1beta1::LocationMetadata)},
  { 97, -1, sizeof(::google::cloud::redis::v1beta1::ZoneMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_Instance_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_Instance_RedisConfigsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_Instance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_ListInstancesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_ListInstancesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_GetInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_CreateInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_UpdateInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_DeleteInstanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_LocationMetadata_AvailableZonesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_LocationMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::cloud::redis::v1beta1::_ZoneMetadata_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/cloud/redis/v1beta1/cloud_redis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,google/cloud/redis/v1beta1/cloud_redis"
      ".proto\022\032google.cloud.redis.v1beta1\032\034goog"
      "le/api/annotations.proto\032#google/longrun"
      "ning/operations.proto\032 google/protobuf/f"
      "ield_mask.proto\032\037google/protobuf/timesta"
      "mp.proto\"\344\006\n\010Instance\022\014\n\004name\030\001 \001(\t\022\024\n\014d"
      "isplay_name\030\002 \001(\t\022@\n\006labels\030\003 \003(\01320.goog"
      "le.cloud.redis.v1beta1.Instance.LabelsEn"
      "try\022\023\n\013location_id\030\004 \001(\t\022\037\n\027alternative_"
      "location_id\030\005 \001(\t\022\025\n\rredis_version\030\007 \001(\t"
      "\022\031\n\021reserved_ip_range\030\t \001(\t\022\014\n\004host\030\n \001("
      "\t\022\014\n\004port\030\013 \001(\005\022\033\n\023current_location_id\030\014"
      " \001(\t\022/\n\013create_time\030\r \001(\0132\032.google.proto"
      "buf.Timestamp\0229\n\005state\030\016 \001(\0162*.google.cl"
      "oud.redis.v1beta1.Instance.State\022\026\n\016stat"
      "us_message\030\017 \001(\t\022M\n\rredis_configs\030\020 \003(\0132"
      "6.google.cloud.redis.v1beta1.Instance.Re"
      "disConfigsEntry\0227\n\004tier\030\021 \001(\0162).google.c"
      "loud.redis.v1beta1.Instance.Tier\022\026\n\016memo"
      "ry_size_gb\030\022 \001(\005\022\032\n\022authorized_network\030\024"
      " \001(\t\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t:\0028\001\0323\n\021RedisConfigsEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"s\n\005State\022\025\n\021STA"
      "TE_UNSPECIFIED\020\000\022\014\n\010CREATING\020\001\022\t\n\005READY\020"
      "\002\022\014\n\010UPDATING\020\003\022\014\n\010DELETING\020\004\022\r\n\tREPAIRI"
      "NG\020\005\022\017\n\013MAINTENANCE\020\006\"8\n\004Tier\022\024\n\020TIER_UN"
      "SPECIFIED\020\000\022\t\n\005BASIC\020\001\022\017\n\013STANDARD_HA\020\003\""
      "M\n\024ListInstancesRequest\022\016\n\006parent\030\001 \001(\t\022"
      "\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"i"
      "\n\025ListInstancesResponse\0227\n\tinstances\030\001 \003"
      "(\0132$.google.cloud.redis.v1beta1.Instance"
      "\022\027\n\017next_page_token\030\002 \001(\t\"\"\n\022GetInstance"
      "Request\022\014\n\004name\030\001 \001(\t\"t\n\025CreateInstanceR"
      "equest\022\016\n\006parent\030\001 \001(\t\022\023\n\013instance_id\030\002 "
      "\001(\t\0226\n\010instance\030\003 \001(\0132$.google.cloud.red"
      "is.v1beta1.Instance\"\200\001\n\025UpdateInstanceRe"
      "quest\022/\n\013update_mask\030\001 \001(\0132\032.google.prot"
      "obuf.FieldMask\0226\n\010instance\030\002 \001(\0132$.googl"
      "e.cloud.redis.v1beta1.Instance\"%\n\025Delete"
      "InstanceRequest\022\014\n\004name\030\001 \001(\t\"\316\001\n\020Locati"
      "onMetadata\022Y\n\017available_zones\030\001 \003(\0132@.go"
      "ogle.cloud.redis.v1beta1.LocationMetadat"
      "a.AvailableZonesEntry\032_\n\023AvailableZonesE"
      "ntry\022\013\n\003key\030\001 \001(\t\0227\n\005value\030\002 \001(\0132(.googl"
      "e.cloud.redis.v1beta1.ZoneMetadata:\0028\001\"\016"
      "\n\014ZoneMetadata2\341\006\n\nCloudRedis\022\260\001\n\rListIn"
      "stances\0220.google.cloud.redis.v1beta1.Lis"
      "tInstancesRequest\0321.google.cloud.redis.v"
      "1beta1.ListInstancesResponse\":\202\323\344\223\0024\0222/v"
      "1beta1/{parent=projects/*/locations/*}/i"
      "nstances\022\237\001\n\013GetInstance\022..google.cloud."
      "redis.v1beta1.GetInstanceRequest\032$.googl"
      "e.cloud.redis.v1beta1.Instance\":\202\323\344\223\0024\0222"
      "/v1beta1/{name=projects/*/locations/*/in"
      "stances/*}\022\250\001\n\016CreateInstance\0221.google.c"
      "loud.redis.v1beta1.CreateInstanceRequest"
      "\032\035.google.longrunning.Operation\"D\202\323\344\223\002>\""
      "2/v1beta1/{parent=projects/*/locations/*"
      "}/instances:\010instance\022\261\001\n\016UpdateInstance"
      "\0221.google.cloud.redis.v1beta1.UpdateInst"
      "anceRequest\032\035.google.longrunning.Operati"
      "on\"M\202\323\344\223\002G2;/v1beta1/{instance.name=proj"
      "ects/*/locations/*/instances/*}:\010instanc"
      "e\022\236\001\n\016DeleteInstance\0221.google.cloud.redi"
      "s.v1beta1.DeleteInstanceRequest\032\035.google"
      ".longrunning.Operation\":\202\323\344\223\0024*2/v1beta1"
      "/{name=projects/*/locations/*/instances/"
      "*}B\177\n\036com.google.cloud.redis.v1beta1B\032Cl"
      "oudRedisServiceBetaProtoP\001Z\?google.golan"
      "g.org/genproto/googleapis/cloud/redis/v1"
      "beta1;redisb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2819);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/cloud/redis/v1beta1/cloud_redis.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2flongrunning_2foperations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto
namespace google {
namespace cloud {
namespace redis {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* Instance_State_descriptor() {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_enum_descriptors[0];
}
bool Instance_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_State Instance::STATE_UNSPECIFIED;
const Instance_State Instance::CREATING;
const Instance_State Instance::READY;
const Instance_State Instance::UPDATING;
const Instance_State Instance::DELETING;
const Instance_State Instance::REPAIRING;
const Instance_State Instance::MAINTENANCE;
const Instance_State Instance::State_MIN;
const Instance_State Instance::State_MAX;
const int Instance::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Instance_Tier_descriptor() {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_enum_descriptors[1];
}
bool Instance_Tier_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instance_Tier Instance::TIER_UNSPECIFIED;
const Instance_Tier Instance::BASIC;
const Instance_Tier Instance::STANDARD_HA;
const Instance_Tier Instance::Tier_MIN;
const Instance_Tier Instance::Tier_MAX;
const int Instance::Tier_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

Instance_LabelsEntry_DoNotUse::Instance_LabelsEntry_DoNotUse() {}
Instance_LabelsEntry_DoNotUse::Instance_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Instance_LabelsEntry_DoNotUse::MergeFrom(const Instance_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Instance_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[0];
}
void Instance_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Instance_RedisConfigsEntry_DoNotUse::Instance_RedisConfigsEntry_DoNotUse() {}
Instance_RedisConfigsEntry_DoNotUse::Instance_RedisConfigsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Instance_RedisConfigsEntry_DoNotUse::MergeFrom(const Instance_RedisConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Instance_RedisConfigsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[1];
}
void Instance_RedisConfigsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Instance::InitAsDefaultInstance() {
  ::google::cloud::redis::v1beta1::_Instance_default_instance_._instance.get_mutable()->create_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Instance::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instance::kNameFieldNumber;
const int Instance::kDisplayNameFieldNumber;
const int Instance::kLabelsFieldNumber;
const int Instance::kLocationIdFieldNumber;
const int Instance::kAlternativeLocationIdFieldNumber;
const int Instance::kRedisVersionFieldNumber;
const int Instance::kReservedIpRangeFieldNumber;
const int Instance::kHostFieldNumber;
const int Instance::kPortFieldNumber;
const int Instance::kCurrentLocationIdFieldNumber;
const int Instance::kCreateTimeFieldNumber;
const int Instance::kStateFieldNumber;
const int Instance::kStatusMessageFieldNumber;
const int Instance::kRedisConfigsFieldNumber;
const int Instance::kTierFieldNumber;
const int Instance::kMemorySizeGbFieldNumber;
const int Instance::kAuthorizedNetworkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instance::Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.Instance)
}
Instance::Instance(const Instance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  redis_configs_.MergeFrom(from.redis_configs_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_id().size() > 0) {
    location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_id_);
  }
  alternative_location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alternative_location_id().size() > 0) {
    alternative_location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alternative_location_id_);
  }
  redis_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redis_version().size() > 0) {
    redis_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_version_);
  }
  reserved_ip_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reserved_ip_range().size() > 0) {
    reserved_ip_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserved_ip_range_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  current_location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_location_id().size() > 0) {
    current_location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_location_id_);
  }
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_message().size() > 0) {
    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  authorized_network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authorized_network().size() > 0) {
    authorized_network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorized_network_);
  }
  if (from.has_create_time()) {
    create_time_ = new ::google::protobuf::Timestamp(*from.create_time_);
  } else {
    create_time_ = NULL;
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_size_gb_) -
    reinterpret_cast<char*>(&port_)) + sizeof(memory_size_gb_));
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.Instance)
}

void Instance::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alternative_location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserved_ip_range_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorized_network_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_size_gb_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(memory_size_gb_));
}

Instance::~Instance() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.Instance)
  SharedDtor();
}

void Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alternative_location_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserved_ip_range_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_location_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorized_network_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
}

void Instance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Instance::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instance& Instance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_Instance.base);
  return *internal_default_instance();
}


void Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  redis_configs_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alternative_location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserved_ip_range_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorized_network_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) {
    delete create_time_;
  }
  create_time_ = NULL;
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_size_gb_) -
      reinterpret_cast<char*>(&port_)) + sizeof(memory_size_gb_));
  _internal_metadata_.Clear();
}

bool Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.Instance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Instance_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Instance_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_id().data(), static_cast<int>(this->location_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.location_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alternative_location_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alternative_location_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alternative_location_id().data(), static_cast<int>(this->alternative_location_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.alternative_location_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redis_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redis_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redis_version().data(), static_cast<int>(this->redis_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.redis_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reserved_ip_range = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reserved_ip_range()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reserved_ip_range().data(), static_cast<int>(this->reserved_ip_range().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.reserved_ip_range"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_location_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_location_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_location_id().data(), static_cast<int>(this->current_location_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.current_location_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp create_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.redis.v1beta1.Instance.State state = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::google::cloud::redis::v1beta1::Instance_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_message = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_message().data(), static_cast<int>(this->status_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.status_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> redis_configs = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          Instance_RedisConfigsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Instance_RedisConfigsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&redis_configs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.redis.v1beta1.Instance.Tier tier = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tier(static_cast< ::google::cloud::redis::v1beta1::Instance_Tier >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 memory_size_gb = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_size_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authorized_network = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorized_network()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authorized_network().data(), static_cast<int>(this->authorized_network().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.Instance.authorized_network"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.Instance)
  return false;
#undef DO_
}

void Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->display_name(), output);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string location_id = 4;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), static_cast<int>(this->location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.location_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->location_id(), output);
  }

  // string alternative_location_id = 5;
  if (this->alternative_location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alternative_location_id().data(), static_cast<int>(this->alternative_location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.alternative_location_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->alternative_location_id(), output);
  }

  // string redis_version = 7;
  if (this->redis_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_version().data(), static_cast<int>(this->redis_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.redis_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->redis_version(), output);
  }

  // string reserved_ip_range = 9;
  if (this->reserved_ip_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved_ip_range().data(), static_cast<int>(this->reserved_ip_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.reserved_ip_range");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->reserved_ip_range(), output);
  }

  // string host = 10;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->host(), output);
  }

  // int32 port = 11;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->port(), output);
  }

  // string current_location_id = 12;
  if (this->current_location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_location_id().data(), static_cast<int>(this->current_location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.current_location_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->current_location_id(), output);
  }

  // .google.protobuf.Timestamp create_time = 13;
  if (this->has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_create_time(), output);
  }

  // .google.cloud.redis.v1beta1.Instance.State state = 14;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->state(), output);
  }

  // string status_message = 15;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.status_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->status_message(), output);
  }

  // map<string, string> redis_configs = 16;
  if (!this->redis_configs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->redis_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->redis_configs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->redis_configs().begin();
          it != this->redis_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_RedisConfigsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(redis_configs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_RedisConfigsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->redis_configs().begin();
          it != this->redis_configs().end(); ++it) {
        entry.reset(redis_configs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.redis.v1beta1.Instance.Tier tier = 17;
  if (this->tier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->tier(), output);
  }

  // int32 memory_size_gb = 18;
  if (this->memory_size_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->memory_size_gb(), output);
  }

  // string authorized_network = 20;
  if (this->authorized_network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorized_network().data(), static_cast<int>(this->authorized_network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.authorized_network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->authorized_network(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.Instance)
}

::google::protobuf::uint8* Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->display_name(), target);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string location_id = 4;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), static_cast<int>(this->location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.location_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->location_id(), target);
  }

  // string alternative_location_id = 5;
  if (this->alternative_location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alternative_location_id().data(), static_cast<int>(this->alternative_location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.alternative_location_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->alternative_location_id(), target);
  }

  // string redis_version = 7;
  if (this->redis_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redis_version().data(), static_cast<int>(this->redis_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.redis_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->redis_version(), target);
  }

  // string reserved_ip_range = 9;
  if (this->reserved_ip_range().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserved_ip_range().data(), static_cast<int>(this->reserved_ip_range().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.reserved_ip_range");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->reserved_ip_range(), target);
  }

  // string host = 10;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->host(), target);
  }

  // int32 port = 11;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->port(), target);
  }

  // string current_location_id = 12;
  if (this->current_location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_location_id().data(), static_cast<int>(this->current_location_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.current_location_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->current_location_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 13;
  if (this->has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_create_time(), deterministic, target);
  }

  // .google.cloud.redis.v1beta1.Instance.State state = 14;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->state(), target);
  }

  // string status_message = 15;
  if (this->status_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_message().data(), static_cast<int>(this->status_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.status_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->status_message(), target);
  }

  // map<string, string> redis_configs = 16;
  if (!this->redis_configs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.Instance.RedisConfigsEntry.value");
      }
    };

    if (deterministic &&
        this->redis_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->redis_configs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->redis_configs().begin();
          it != this->redis_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Instance_RedisConfigsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(redis_configs_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Instance_RedisConfigsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->redis_configs().begin();
          it != this->redis_configs().end(); ++it) {
        entry.reset(redis_configs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.cloud.redis.v1beta1.Instance.Tier tier = 17;
  if (this->tier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->tier(), target);
  }

  // int32 memory_size_gb = 18;
  if (this->memory_size_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->memory_size_gb(), target);
  }

  // string authorized_network = 20;
  if (this->authorized_network().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authorized_network().data(), static_cast<int>(this->authorized_network().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.Instance.authorized_network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->authorized_network(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.Instance)
  return target;
}

size_t Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.Instance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<Instance_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> redis_configs = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->redis_configs_size());
  {
    ::std::unique_ptr<Instance_RedisConfigsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->redis_configs().begin();
        it != this->redis_configs().end(); ++it) {
      entry.reset(redis_configs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string location_id = 4;
  if (this->location_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_id());
  }

  // string alternative_location_id = 5;
  if (this->alternative_location_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alternative_location_id());
  }

  // string redis_version = 7;
  if (this->redis_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redis_version());
  }

  // string reserved_ip_range = 9;
  if (this->reserved_ip_range().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reserved_ip_range());
  }

  // string host = 10;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string current_location_id = 12;
  if (this->current_location_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_location_id());
  }

  // string status_message = 15;
  if (this->status_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_message());
  }

  // string authorized_network = 20;
  if (this->authorized_network().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authorized_network());
  }

  // .google.protobuf.Timestamp create_time = 13;
  if (this->has_create_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // int32 port = 11;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .google.cloud.redis.v1beta1.Instance.State state = 14;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // .google.cloud.redis.v1beta1.Instance.Tier tier = 17;
  if (this->tier() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tier());
  }

  // int32 memory_size_gb = 18;
  if (this->memory_size_gb() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory_size_gb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.Instance)
    MergeFrom(*source);
  }
}

void Instance::MergeFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  redis_configs_.MergeFrom(from.redis_configs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.location_id().size() > 0) {

    location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_id_);
  }
  if (from.alternative_location_id().size() > 0) {

    alternative_location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alternative_location_id_);
  }
  if (from.redis_version().size() > 0) {

    redis_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_version_);
  }
  if (from.reserved_ip_range().size() > 0) {

    reserved_ip_range_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserved_ip_range_);
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.current_location_id().size() > 0) {

    current_location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_location_id_);
  }
  if (from.status_message().size() > 0) {

    status_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_message_);
  }
  if (from.authorized_network().size() > 0) {

    authorized_network_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authorized_network_);
  }
  if (from.has_create_time()) {
    mutable_create_time()->::google::protobuf::Timestamp::MergeFrom(from.create_time());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.tier() != 0) {
    set_tier(from.tier());
  }
  if (from.memory_size_gb() != 0) {
    set_memory_size_gb(from.memory_size_gb());
  }
}

void Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instance::CopyFrom(const Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instance::IsInitialized() const {
  return true;
}

void Instance::Swap(Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instance::InternalSwap(Instance* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  redis_configs_.Swap(&other->redis_configs_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_id_.Swap(&other->location_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alternative_location_id_.Swap(&other->alternative_location_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redis_version_.Swap(&other->redis_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reserved_ip_range_.Swap(&other->reserved_ip_range_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  current_location_id_.Swap(&other->current_location_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_message_.Swap(&other->status_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authorized_network_.Swap(&other->authorized_network_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(port_, other->port_);
  swap(state_, other->state_);
  swap(tier_, other->tier_);
  swap(memory_size_gb_, other->memory_size_gb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Instance::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInstancesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesRequest::kParentFieldNumber;
const int ListInstancesRequest::kPageSizeFieldNumber;
const int ListInstancesRequest::kPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesRequest::ListInstancesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ListInstancesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.ListInstancesRequest)
}
ListInstancesRequest::ListInstancesRequest(const ListInstancesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.page_token().size() > 0) {
    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.ListInstancesRequest)
}

void ListInstancesRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListInstancesRequest::~ListInstancesRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.ListInstancesRequest)
  SharedDtor();
}

void ListInstancesRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInstancesRequest::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesRequest& ListInstancesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ListInstancesRequest.base);
  return *internal_default_instance();
}


void ListInstancesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

bool ListInstancesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.ListInstancesRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string page_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_token().data(), static_cast<int>(this->page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.ListInstancesRequest.page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.ListInstancesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.ListInstancesRequest)
  return false;
#undef DO_
}

void ListInstancesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesRequest.page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.ListInstancesRequest)
}

::google::protobuf::uint8* ListInstancesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_token().data(), static_cast<int>(this->page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesRequest.page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.ListInstancesRequest)
  return target;
}

size_t ListInstancesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInstancesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.ListInstancesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.ListInstancesRequest)
    MergeFrom(*source);
  }
}

void ListInstancesRequest::MergeFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void ListInstancesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesRequest::CopyFrom(const ListInstancesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.ListInstancesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesRequest::IsInitialized() const {
  return true;
}

void ListInstancesRequest::Swap(ListInstancesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesRequest::InternalSwap(ListInstancesRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInstancesRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInstancesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInstancesResponse::kInstancesFieldNumber;
const int ListInstancesResponse::kNextPageTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInstancesResponse::ListInstancesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ListInstancesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.ListInstancesResponse)
}
ListInstancesResponse::ListInstancesResponse(const ListInstancesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instances_(from.instances_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page_token().size() > 0) {
    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.ListInstancesResponse)
}

void ListInstancesResponse::SharedCtor() {
  next_page_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListInstancesResponse::~ListInstancesResponse() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.ListInstancesResponse)
  SharedDtor();
}

void ListInstancesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListInstancesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInstancesResponse::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInstancesResponse& ListInstancesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ListInstancesResponse.base);
  return *internal_default_instance();
}


void ListInstancesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instances_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListInstancesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.cloud.redis.v1beta1.Instance instances = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.ListInstancesResponse.next_page_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.ListInstancesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.ListInstancesResponse)
  return false;
#undef DO_
}

void ListInstancesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.redis.v1beta1.Instance instances = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instances_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->instances(static_cast<int>(i)),
      output);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesResponse.next_page_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.ListInstancesResponse)
}

::google::protobuf::uint8* ListInstancesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.cloud.redis.v1beta1.Instance instances = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instances_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->instances(static_cast<int>(i)), deterministic, target);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page_token().data(), static_cast<int>(this->next_page_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.ListInstancesResponse.next_page_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.ListInstancesResponse)
  return target;
}

size_t ListInstancesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.cloud.redis.v1beta1.Instance instances = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->instances_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instances(static_cast<int>(i)));
    }
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInstancesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInstancesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInstancesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.ListInstancesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.ListInstancesResponse)
    MergeFrom(*source);
  }
}

void ListInstancesResponse::MergeFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instances_.MergeFrom(from.instances_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListInstancesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInstancesResponse::CopyFrom(const ListInstancesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.ListInstancesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInstancesResponse::IsInitialized() const {
  return true;
}

void ListInstancesResponse::Swap(ListInstancesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInstancesResponse::InternalSwap(ListInstancesResponse* other) {
  using std::swap;
  CastToBase(&instances_)->InternalSwap(CastToBase(&other->instances_));
  next_page_token_.Swap(&other->next_page_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInstancesResponse::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetInstanceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInstanceRequest::GetInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_GetInstanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.GetInstanceRequest)
}
GetInstanceRequest::GetInstanceRequest(const GetInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.GetInstanceRequest)
}

void GetInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetInstanceRequest::~GetInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.GetInstanceRequest)
  SharedDtor();
}

void GetInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInstanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetInstanceRequest::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInstanceRequest& GetInstanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_GetInstanceRequest.base);
  return *internal_default_instance();
}


void GetInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.GetInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.GetInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.GetInstanceRequest)
  return false;
#undef DO_
}

void GetInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.GetInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.GetInstanceRequest)
}

::google::protobuf::uint8* GetInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.GetInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.GetInstanceRequest)
  return target;
}

size_t GetInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.GetInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.GetInstanceRequest)
    MergeFrom(*source);
  }
}

void GetInstanceRequest::MergeFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstanceRequest::CopyFrom(const GetInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.GetInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstanceRequest::IsInitialized() const {
  return true;
}

void GetInstanceRequest::Swap(GetInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInstanceRequest::InternalSwap(GetInstanceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetInstanceRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateInstanceRequest::InitAsDefaultInstance() {
  ::google::cloud::redis::v1beta1::_CreateInstanceRequest_default_instance_._instance.get_mutable()->instance_ = const_cast< ::google::cloud::redis::v1beta1::Instance*>(
      ::google::cloud::redis::v1beta1::Instance::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateInstanceRequest::kParentFieldNumber;
const int CreateInstanceRequest::kInstanceIdFieldNumber;
const int CreateInstanceRequest::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateInstanceRequest::CreateInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_CreateInstanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.CreateInstanceRequest)
}
CreateInstanceRequest::CreateInstanceRequest(const CreateInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_id().size() > 0) {
    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    instance_ = new ::google::cloud::redis::v1beta1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.CreateInstanceRequest)
}

void CreateInstanceRequest::SharedCtor() {
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_ = NULL;
}

CreateInstanceRequest::~CreateInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.CreateInstanceRequest)
  SharedDtor();
}

void CreateInstanceRequest::SharedDtor() {
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete instance_;
}

void CreateInstanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateInstanceRequest::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateInstanceRequest& CreateInstanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_CreateInstanceRequest.base);
  return *internal_default_instance();
}


void CreateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.CreateInstanceRequest.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_id().data(), static_cast<int>(this->instance_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.CreateInstanceRequest.instance_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.redis.v1beta1.Instance instance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.CreateInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.CreateInstanceRequest)
  return false;
#undef DO_
}

void CreateInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.CreateInstanceRequest.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parent(), output);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.CreateInstanceRequest.instance_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_id(), output);
  }

  // .google.cloud.redis.v1beta1.Instance instance = 3;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_instance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.CreateInstanceRequest)
}

::google::protobuf::uint8* CreateInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.CreateInstanceRequest.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parent(), target);
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_id().data(), static_cast<int>(this->instance_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.CreateInstanceRequest.instance_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_id(), target);
  }

  // .google.cloud.redis.v1beta1.Instance instance = 3;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_instance(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.CreateInstanceRequest)
  return target;
}

size_t CreateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string instance_id = 2;
  if (this->instance_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_id());
  }

  // .google.cloud.redis.v1beta1.Instance instance = 3;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *instance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.CreateInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.CreateInstanceRequest)
    MergeFrom(*source);
  }
}

void CreateInstanceRequest::MergeFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.instance_id().size() > 0) {

    instance_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_id_);
  }
  if (from.has_instance()) {
    mutable_instance()->::google::cloud::redis::v1beta1::Instance::MergeFrom(from.instance());
  }
}

void CreateInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInstanceRequest::CopyFrom(const CreateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.CreateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInstanceRequest::IsInitialized() const {
  return true;
}

void CreateInstanceRequest::Swap(CreateInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateInstanceRequest::InternalSwap(CreateInstanceRequest* other) {
  using std::swap;
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_id_.Swap(&other->instance_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(instance_, other->instance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateInstanceRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateInstanceRequest::InitAsDefaultInstance() {
  ::google::cloud::redis::v1beta1::_UpdateInstanceRequest_default_instance_._instance.get_mutable()->update_mask_ = const_cast< ::google::protobuf::FieldMask*>(
      ::google::protobuf::FieldMask::internal_default_instance());
  ::google::cloud::redis::v1beta1::_UpdateInstanceRequest_default_instance_._instance.get_mutable()->instance_ = const_cast< ::google::cloud::redis::v1beta1::Instance*>(
      ::google::cloud::redis::v1beta1::Instance::internal_default_instance());
}
void UpdateInstanceRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstanceRequest::kUpdateMaskFieldNumber;
const int UpdateInstanceRequest::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstanceRequest::UpdateInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_UpdateInstanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.UpdateInstanceRequest)
}
UpdateInstanceRequest::UpdateInstanceRequest(const UpdateInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_update_mask()) {
    update_mask_ = new ::google::protobuf::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = NULL;
  }
  if (from.has_instance()) {
    instance_ = new ::google::cloud::redis::v1beta1::Instance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.UpdateInstanceRequest)
}

void UpdateInstanceRequest::SharedCtor() {
  ::memset(&update_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_) -
      reinterpret_cast<char*>(&update_mask_)) + sizeof(instance_));
}

UpdateInstanceRequest::~UpdateInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  SharedDtor();
}

void UpdateInstanceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete update_mask_;
  if (this != internal_default_instance()) delete instance_;
}

void UpdateInstanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateInstanceRequest::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateInstanceRequest& UpdateInstanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_UpdateInstanceRequest.base);
  return *internal_default_instance();
}


void UpdateInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) {
    delete update_mask_;
  }
  update_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FieldMask update_mask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.cloud.redis.v1beta1.Instance instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  return false;
#undef DO_
}

void UpdateInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 1;
  if (this->has_update_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_update_mask(), output);
  }

  // .google.cloud.redis.v1beta1.Instance instance = 2;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_instance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.UpdateInstanceRequest)
}

::google::protobuf::uint8* UpdateInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FieldMask update_mask = 1;
  if (this->has_update_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_update_mask(), deterministic, target);
  }

  // .google.cloud.redis.v1beta1.Instance instance = 2;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_instance(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  return target;
}

size_t UpdateInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.FieldMask update_mask = 1;
  if (this->has_update_mask()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  // .google.cloud.redis.v1beta1.Instance instance = 2;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *instance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.UpdateInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.UpdateInstanceRequest)
    MergeFrom(*source);
  }
}

void UpdateInstanceRequest::MergeFrom(const UpdateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update_mask()) {
    mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(from.update_mask());
  }
  if (from.has_instance()) {
    mutable_instance()->::google::cloud::redis::v1beta1::Instance::MergeFrom(from.instance());
  }
}

void UpdateInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstanceRequest::CopyFrom(const UpdateInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.UpdateInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstanceRequest::IsInitialized() const {
  return true;
}

void UpdateInstanceRequest::Swap(UpdateInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstanceRequest::InternalSwap(UpdateInstanceRequest* other) {
  using std::swap;
  swap(update_mask_, other->update_mask_);
  swap(instance_, other->instance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateInstanceRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteInstanceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteInstanceRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteInstanceRequest::DeleteInstanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_DeleteInstanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.DeleteInstanceRequest)
}
DeleteInstanceRequest::DeleteInstanceRequest(const DeleteInstanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.DeleteInstanceRequest)
}

void DeleteInstanceRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteInstanceRequest::~DeleteInstanceRequest() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  SharedDtor();
}

void DeleteInstanceRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteInstanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteInstanceRequest::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteInstanceRequest& DeleteInstanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_DeleteInstanceRequest.base);
  return *internal_default_instance();
}


void DeleteInstanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteInstanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.DeleteInstanceRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  return false;
#undef DO_
}

void DeleteInstanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.DeleteInstanceRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.DeleteInstanceRequest)
}

::google::protobuf::uint8* DeleteInstanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.cloud.redis.v1beta1.DeleteInstanceRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  return target;
}

size_t DeleteInstanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteInstanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteInstanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteInstanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.DeleteInstanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.DeleteInstanceRequest)
    MergeFrom(*source);
  }
}

void DeleteInstanceRequest::MergeFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void DeleteInstanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteInstanceRequest::CopyFrom(const DeleteInstanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.DeleteInstanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInstanceRequest::IsInitialized() const {
  return true;
}

void DeleteInstanceRequest::Swap(DeleteInstanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteInstanceRequest::InternalSwap(DeleteInstanceRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteInstanceRequest::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

LocationMetadata_AvailableZonesEntry_DoNotUse::LocationMetadata_AvailableZonesEntry_DoNotUse() {}
LocationMetadata_AvailableZonesEntry_DoNotUse::LocationMetadata_AvailableZonesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LocationMetadata_AvailableZonesEntry_DoNotUse::MergeFrom(const LocationMetadata_AvailableZonesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LocationMetadata_AvailableZonesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[9];
}
void LocationMetadata_AvailableZonesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LocationMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationMetadata::kAvailableZonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationMetadata::LocationMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_LocationMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.LocationMetadata)
}
LocationMetadata::LocationMetadata(const LocationMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  available_zones_.MergeFrom(from.available_zones_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.LocationMetadata)
}

void LocationMetadata::SharedCtor() {
}

LocationMetadata::~LocationMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.LocationMetadata)
  SharedDtor();
}

void LocationMetadata::SharedDtor() {
}

void LocationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocationMetadata::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationMetadata& LocationMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_LocationMetadata.base);
  return *internal_default_instance();
}


void LocationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_zones_.Clear();
  _internal_metadata_.Clear();
}

bool LocationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.LocationMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.cloud.redis.v1beta1.ZoneMetadata> available_zones = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          LocationMetadata_AvailableZonesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LocationMetadata_AvailableZonesEntry_DoNotUse,
              ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata > > parser(&available_zones_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.cloud.redis.v1beta1.LocationMetadata.AvailableZonesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.LocationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.LocationMetadata)
  return false;
#undef DO_
}

void LocationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.cloud.redis.v1beta1.ZoneMetadata> available_zones = 1;
  if (!this->available_zones().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.LocationMetadata.AvailableZonesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->available_zones().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->available_zones().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_iterator
          it = this->available_zones().begin();
          it != this->available_zones().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<LocationMetadata_AvailableZonesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(available_zones_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<LocationMetadata_AvailableZonesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_iterator
          it = this->available_zones().begin();
          it != this->available_zones().end(); ++it) {
        entry.reset(available_zones_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.LocationMetadata)
}

::google::protobuf::uint8* LocationMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.LocationMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.cloud.redis.v1beta1.ZoneMetadata> available_zones = 1;
  if (!this->available_zones().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.cloud.redis.v1beta1.LocationMetadata.AvailableZonesEntry.key");
      }
    };

    if (deterministic &&
        this->available_zones().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->available_zones().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_iterator
          it = this->available_zones().begin();
          it != this->available_zones().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<LocationMetadata_AvailableZonesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(available_zones_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<LocationMetadata_AvailableZonesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_iterator
          it = this->available_zones().begin();
          it != this->available_zones().end(); ++it) {
        entry.reset(available_zones_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.LocationMetadata)
  return target;
}

size_t LocationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.LocationMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.cloud.redis.v1beta1.ZoneMetadata> available_zones = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->available_zones_size());
  {
    ::std::unique_ptr<LocationMetadata_AvailableZonesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::cloud::redis::v1beta1::ZoneMetadata >::const_iterator
        it = this->available_zones().begin();
        it != this->available_zones().end(); ++it) {
      entry.reset(available_zones_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.LocationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.LocationMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.LocationMetadata)
    MergeFrom(*source);
  }
}

void LocationMetadata::MergeFrom(const LocationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.LocationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  available_zones_.MergeFrom(from.available_zones_);
}

void LocationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.LocationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationMetadata::CopyFrom(const LocationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.LocationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationMetadata::IsInitialized() const {
  return true;
}

void LocationMetadata::Swap(LocationMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationMetadata::InternalSwap(LocationMetadata* other) {
  using std::swap;
  available_zones_.Swap(&other->available_zones_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocationMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZoneMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneMetadata::ZoneMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ZoneMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.cloud.redis.v1beta1.ZoneMetadata)
}
ZoneMetadata::ZoneMetadata(const ZoneMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.cloud.redis.v1beta1.ZoneMetadata)
}

void ZoneMetadata::SharedCtor() {
}

ZoneMetadata::~ZoneMetadata() {
  // @@protoc_insertion_point(destructor:google.cloud.redis.v1beta1.ZoneMetadata)
  SharedDtor();
}

void ZoneMetadata::SharedDtor() {
}

void ZoneMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZoneMetadata::descriptor() {
  ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZoneMetadata& ZoneMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::scc_info_ZoneMetadata.base);
  return *internal_default_instance();
}


void ZoneMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.cloud.redis.v1beta1.ZoneMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ZoneMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.cloud.redis.v1beta1.ZoneMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:google.cloud.redis.v1beta1.ZoneMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.cloud.redis.v1beta1.ZoneMetadata)
  return false;
#undef DO_
}

void ZoneMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.cloud.redis.v1beta1.ZoneMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.cloud.redis.v1beta1.ZoneMetadata)
}

::google::protobuf::uint8* ZoneMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.cloud.redis.v1beta1.ZoneMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.cloud.redis.v1beta1.ZoneMetadata)
  return target;
}

size_t ZoneMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.cloud.redis.v1beta1.ZoneMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZoneMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.cloud.redis.v1beta1.ZoneMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ZoneMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.cloud.redis.v1beta1.ZoneMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.cloud.redis.v1beta1.ZoneMetadata)
    MergeFrom(*source);
  }
}

void ZoneMetadata::MergeFrom(const ZoneMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.cloud.redis.v1beta1.ZoneMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ZoneMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.cloud.redis.v1beta1.ZoneMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneMetadata::CopyFrom(const ZoneMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.cloud.redis.v1beta1.ZoneMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneMetadata::IsInitialized() const {
  return true;
}

void ZoneMetadata::Swap(ZoneMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneMetadata::InternalSwap(ZoneMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZoneMetadata::GetMetadata() const {
  protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fcloud_2fredis_2fv1beta1_2fcloud_5fredis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace redis
}  // namespace cloud
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::Instance_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::Instance_RedisConfigsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::Instance* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::Instance >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::Instance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::ListInstancesRequest* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::ListInstancesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::ListInstancesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::ListInstancesResponse* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::ListInstancesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::ListInstancesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::GetInstanceRequest* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::GetInstanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::GetInstanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::CreateInstanceRequest* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::CreateInstanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::CreateInstanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::UpdateInstanceRequest* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::UpdateInstanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::UpdateInstanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::DeleteInstanceRequest* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::DeleteInstanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::DeleteInstanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::LocationMetadata_AvailableZonesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::LocationMetadata* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::LocationMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::LocationMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::cloud::redis::v1beta1::ZoneMetadata* Arena::CreateMaybeMessage< ::google::cloud::redis::v1beta1::ZoneMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::cloud::redis::v1beta1::ZoneMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
